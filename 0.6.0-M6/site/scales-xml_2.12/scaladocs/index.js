Index.PACKAGES = {"scales.xml.equals" : [{"name" : "scales.xml.equals.AttributeComparison", "shortDescription" : "Comparison between attributes, requires an Equal type class for QNames", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: Attribute, right: Attribute): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.AttributeComparison.compare", "link" : "scales\/xml\/equals\/AttributeComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:scales.xml.Attribute,right:scales.xml.Attribute):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.AttributeComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributeComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributeComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributeComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributeComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributeComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributeComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributeComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributeComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributeComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/AttributeComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributeComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/AttributeComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/AttributeComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributeComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributeComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributeComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/AttributeComparison.html", "kind" : "class"}, {"name" : "scales.xml.equals.AttributeDifference", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributeDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributeDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributeDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributeDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributeDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributeDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributeDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributeDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributeDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/AttributeDifference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributeDifference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/AttributeDifference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/AttributeDifference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributeDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributeDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributeDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "right", "tail" : ": Attribute", "member" : "scales.xml.equals.XmlDifference.right", "link" : "scales\/xml\/equals\/AttributeDifference.html#right:X", "kind" : "abstract val"}, {"label" : "left", "tail" : ": Attribute", "member" : "scales.xml.equals.XmlDifference.left", "link" : "scales\/xml\/equals\/AttributeDifference.html#left:X", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/AttributeDifference.html", "kind" : "trait"}, {"name" : "scales.xml.equals.AttributeEquals", "shortDescription" : "", "object" : "scales\/xml\/equals\/AttributeEquals$.html", "members_object" : [{"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.equals.DefaultQNameEquals.qnameEqual", "link" : "scales\/xml\/equals\/AttributeEquals$.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/AttributeEquals$.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributeEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributeEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributeEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributeEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributeEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributeEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributeEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributeEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributeEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/AttributeEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributeEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/AttributeEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/AttributeEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributeEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributeEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributeEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.AttributeNameDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.AttributeNameDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Attribute", "member" : "scales.xml.equals.AttributeNameDifference.right", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#right:scales.xml.Attribute", "kind" : "val"}, {"label" : "left", "tail" : ": Attribute", "member" : "scales.xml.equals.AttributeNameDifference.left", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#left:scales.xml.Attribute", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributeNameDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributeNameDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/AttributeNameDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.AttributesComparison", "shortDescription" : "Comparison for attributes, requires a comparison for individual attributes, allowing flexible definitions of equality", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: xml.Attributes, right: xml.Attributes): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.AttributesComparison.compare", "link" : "scales\/xml\/equals\/AttributesComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:scales.xml.Attributes,right:scales.xml.Attributes):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.AttributesComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributesComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributesComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributesComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributesComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributesComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributesComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributesComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributesComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributesComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/AttributesComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributesComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/AttributesComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/AttributesComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributesComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributesComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributesComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/AttributesComparison.html", "kind" : "class"}, {"name" : "scales.xml.equals.AttributesDifference", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributesDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributesDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributesDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributesDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributesDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributesDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributesDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributesDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributesDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/AttributesDifference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributesDifference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/AttributesDifference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/AttributesDifference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributesDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributesDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributesDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "right", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.XmlDifference.right", "link" : "scales\/xml\/equals\/AttributesDifference.html#right:X", "kind" : "abstract val"}, {"label" : "left", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.XmlDifference.left", "link" : "scales\/xml\/equals\/AttributesDifference.html#left:X", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/AttributesDifference.html", "kind" : "trait"}, {"name" : "scales.xml.equals.AttributesEquals", "shortDescription" : "", "object" : "scales\/xml\/equals\/AttributesEquals$.html", "members_object" : [{"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.equals.DefaultQNameEquals.qnameEqual", "link" : "scales\/xml\/equals\/AttributesEquals$.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/AttributesEquals$.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/AttributesEquals$.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributesEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributesEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributesEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributesEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributesEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributesEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributesEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributesEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributesEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributesEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/AttributesEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributesEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/AttributesEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/AttributesEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributesEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributesEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributesEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.AttributeValueDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.AttributeValueDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Attribute", "member" : "scales.xml.equals.AttributeValueDifference.right", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#right:scales.xml.Attribute", "kind" : "val"}, {"label" : "left", "tail" : ": Attribute", "member" : "scales.xml.equals.AttributeValueDifference.left", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#left:scales.xml.Attribute", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/AttributeValueDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/AttributeValueDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/AttributeValueDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.BasicPaths", "shortDescription" : "", "object" : "scales\/xml\/equals\/BasicPaths$.html", "members_object" : [{"label" : "BasicPath", "tail" : "", "member" : "scales.xml.equals.BasicPaths.BasicPath", "link" : "scales\/xml\/equals\/BasicPaths$.html#BasicPath=List[scales.xml.equals.BasicPaths.BasicPathA]", "kind" : "type"}, {"label" : "BasicPathA", "tail" : "", "member" : "scales.xml.equals.BasicPaths.BasicPathA", "link" : "scales\/xml\/equals\/BasicPaths$.html#BasicPathA=(scales.xml.QName,scala.collection.immutable.Map[String,Int])", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/BasicPaths$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/BasicPaths$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/BasicPaths$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/BasicPaths$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/BasicPaths$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/BasicPaths$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/BasicPaths$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/BasicPaths$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/BasicPaths$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/BasicPaths$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/BasicPaths$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/BasicPaths$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/BasicPaths$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/BasicPaths$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/BasicPaths$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/BasicPaths$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/BasicPaths$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/BasicPaths$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/BasicPaths$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.ComparisonContext", "shortDescription" : "ComparisonContext represents both the path to a given comparison and the namespace declarations which are relevant for it.", "object" : "scales\/xml\/equals\/ComparisonContext$.html", "members_class" : [{"label" : "parentContext", "tail" : "(): Option[ComparisonContext]", "member" : "scales.xml.equals.ComparisonContext.parentContext", "link" : "scales\/xml\/equals\/ComparisonContext.html#parentContext:Option[scales.xml.equals.ComparisonContext]", "kind" : "def"}, {"label" : "endElem", "tail" : "(): ComparisonContext", "member" : "scales.xml.equals.ComparisonContext.endElem", "link" : "scales\/xml\/equals\/ComparisonContext.html#endElem:scales.xml.equals.ComparisonContext", "kind" : "def"}, {"label" : "pathString", "tail" : "(): String", "member" : "scales.xml.equals.ComparisonContext.pathString", "link" : "scales\/xml\/equals\/ComparisonContext.html#pathString:String", "kind" : "def"}, {"label" : "startElems", "tail" : "(leftElem: Elem, rightElem: Elem): ComparisonContext", "member" : "scales.xml.equals.ComparisonContext.startElems", "link" : "scales\/xml\/equals\/ComparisonContext.html#startElems(leftElem:scales.xml.Elem,rightElem:scales.xml.Elem):scales.xml.equals.ComparisonContext", "kind" : "def"}, {"label" : "rightNamespaceContext", "tail" : "(): Option[NamespaceContext]", "member" : "scales.xml.equals.ComparisonContext.rightNamespaceContext", "link" : "scales\/xml\/equals\/ComparisonContext.html#rightNamespaceContext:Option[scales.xml.serializers.NamespaceContext]", "kind" : "def"}, {"label" : "leftNamespaceContext", "tail" : "(): Option[NamespaceContext]", "member" : "scales.xml.equals.ComparisonContext.leftNamespaceContext", "link" : "scales\/xml\/equals\/ComparisonContext.html#leftNamespaceContext:Option[scales.xml.serializers.NamespaceContext]", "kind" : "def"}, {"label" : "toDifferenceAsStream", "tail" : "(t: T, filter: (Iterator[xml.PullType]) ⇒ Iterator[xml.PullType])(tv: (T) ⇒ StreamComparable[T]): Stream[xml.PullType]", "member" : "scales.xml.equals.ComparisonContext.toDifferenceAsStream", "link" : "scales\/xml\/equals\/ComparisonContext.html#toDifferenceAsStream[T](t:T,filter:Iterator[scales.xml.PullType]=>Iterator[scales.xml.PullType])(implicittv:T=>scales.xml.equals.StreamComparable[T]):Stream[scales.xml.PullType]", "kind" : "def"}, {"label" : "withPosition", "tail" : "(newStreamPosition: Int): ComparisonContext", "member" : "scales.xml.equals.ComparisonContext.withPosition", "link" : "scales\/xml\/equals\/ComparisonContext.html#withPosition(newStreamPosition:Int):scales.xml.equals.ComparisonContext", "kind" : "def"}, {"label" : "streamPosition", "tail" : ": Int", "member" : "scales.xml.equals.ComparisonContext.streamPosition", "link" : "scales\/xml\/equals\/ComparisonContext.html#streamPosition:Int", "kind" : "val"}, {"label" : "path", "tail" : ": BasicPath", "member" : "scales.xml.equals.ComparisonContext.path", "link" : "scales\/xml\/equals\/ComparisonContext.html#path:scales.xml.equals.BasicPaths.BasicPath", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ComparisonContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ComparisonContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ComparisonContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ComparisonContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ComparisonContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ComparisonContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ComparisonContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ComparisonContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ComparisonContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ComparisonContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ComparisonContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ComparisonContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ComparisonContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ComparisonContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ComparisonContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ComparisonContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(c: ComparisonContext): Option[(Option[NamespaceContext], Option[NamespaceContext], BasicPath, Option[ComparisonContext])]", "member" : "scales.xml.equals.ComparisonContext.unapply", "link" : "scales\/xml\/equals\/ComparisonContext$.html#unapply(c:scales.xml.equals.ComparisonContext):Option[(Option[scales.xml.serializers.NamespaceContext],Option[scales.xml.serializers.NamespaceContext],scales.xml.equals.BasicPaths.BasicPath,Option[scales.xml.equals.ComparisonContext])]", "kind" : "def"}, {"label" : "empty", "tail" : ": ComparisonContext", "member" : "scales.xml.equals.ComparisonContext.empty", "link" : "scales\/xml\/equals\/ComparisonContext$.html#empty:scales.xml.equals.ComparisonContext", "kind" : "val"}, {"label" : "apply", "tail" : "(): ComparisonContext", "member" : "scales.xml.equals.ComparisonContext.apply", "link" : "scales\/xml\/equals\/ComparisonContext$.html#apply():scales.xml.equals.ComparisonContext", "kind" : "def"}, {"label" : "apply", "tail" : "(path: BasicPath): ComparisonContext", "member" : "scales.xml.equals.ComparisonContext.apply", "link" : "scales\/xml\/equals\/ComparisonContext$.html#apply(path:scales.xml.equals.BasicPaths.BasicPath):scales.xml.equals.ComparisonContext", "kind" : "def"}, {"label" : "emptyWithDefault", "tail" : ": Map[String, String]", "member" : "scales.xml.equals.ComparisonContext.emptyWithDefault", "link" : "scales\/xml\/equals\/ComparisonContext$.html#emptyWithDefault:scala.collection.immutable.Map[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ComparisonContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ComparisonContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ComparisonContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ComparisonContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ComparisonContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ComparisonContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ComparisonContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ComparisonContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ComparisonContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ComparisonContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ComparisonContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ComparisonContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ComparisonContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ComparisonContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ComparisonContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ComparisonContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/ComparisonContext.html", "kind" : "class"}, {"name" : "scales.xml.equals.ComparisonContextImplicits", "members_trait" : [{"label" : "ComparisonContextNames", "tail" : "", "member" : "scales.xml.equals.ComparisonContextImplicits.ComparisonContextNames", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#ComparisonContextNames", "kind" : "implicit object"}, {"label" : "BasicPathNames", "tail" : "", "member" : "scales.xml.equals.ComparisonContextImplicits.BasicPathNames", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#BasicPathNames", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides an immplicit to easily access the head QName in a path", "trait" : "scales\/xml\/equals\/ComparisonContextImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultAttributeEquals", "members_trait" : [{"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultAttributeEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/DefaultAttributeEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultAttributesEquals", "members_trait" : [{"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultAttributesEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/DefaultAttributesEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultDocLikeEquals", "members_trait" : [{"label" : "defaultDocLikeComparison", "tail" : "(ic: XmlComparison[XmlItem], docWrapper: DocLikeWrapper[T]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultDocLikeEquals.defaultDocLikeComparison", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#defaultDocLikeComparison[T](implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitdocWrapper:scales.xml.equals.DocLikeWrapper[T]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultDocLikeEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/DefaultDocLikeEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultElemEquals", "members_trait" : [{"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultElemEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultElemEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/DefaultElemEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultItemEquals", "members_trait" : [{"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultItemEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultItemEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/DefaultItemEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultQNameEquals", "members_trait" : [{"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.equals.DefaultQNameEquals.qnameEqual", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultQNameEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/DefaultQNameEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultQNameToken", "members_trait" : [{"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultQNameToken.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultQNameToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scales\/xml\/equals\/DefaultQNameToken$.html", "members_object" : [{"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultQNameToken$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/DefaultQNameToken.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultStreamEquals", "members_trait" : [{"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultStreamEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Streams compared after transforming via joinTextAndCData", "object" : "scales\/xml\/equals\/DefaultStreamEquals$.html", "members_object" : [{"label" : "defaultStreamComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[StreamComparable[_]]", "member" : "scales.xml.equals.DefaultStreamEquals.defaultStreamComparison", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#defaultStreamComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.equals.StreamComparable[_]]", "kind" : "def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultStreamEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/DefaultStreamEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DefaultXmlEquals", "members_trait" : [{"label" : "defaultDocLikeComparison", "tail" : "(ic: XmlComparison[XmlItem], docWrapper: DocLikeWrapper[T]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultDocLikeEquals.defaultDocLikeComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#defaultDocLikeComparison[T](implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitdocWrapper:scales.xml.equals.DocLikeWrapper[T]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultXmlEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "All CData nodes are converted to text nodes, adjoining Text nodes (including CData) are joined.", "object" : "scales\/xml\/equals\/DefaultXmlEquals$.html", "members_object" : [{"label" : "defaultDocLikeComparison", "tail" : "(ic: XmlComparison[XmlItem], docWrapper: DocLikeWrapper[T]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultDocLikeEquals.defaultDocLikeComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#defaultDocLikeComparison[T](implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitdocWrapper:scales.xml.equals.DocLikeWrapper[T]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DefaultXmlEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/DefaultXmlEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.DifferentNumberOfAttributes", "shortDescription" : "Their size is different", "members_case class" : [{"member" : "scales.xml.equals.DifferentNumberOfAttributes#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.DifferentNumberOfAttributes.right", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#right:scales.xml.Attributes", "kind" : "val"}, {"label" : "left", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.DifferentNumberOfAttributes.left", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#left:scales.xml.Attributes", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/DifferentNumberOfAttributes.html", "kind" : "case class"}, {"name" : "scales.xml.equals.DifferentNumberOfMiscs", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.DifferentNumberOfMiscs#<init>", "error" : "unsupported entity"}, {"label" : "isProlog", "tail" : ": Boolean", "member" : "scales.xml.equals.DifferentNumberOfMiscs.isProlog", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#isProlog:Boolean", "kind" : "val"}, {"label" : "right", "tail" : ": xml.Miscs", "member" : "scales.xml.equals.DifferentNumberOfMiscs.right", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#right:scales.xml.Miscs", "kind" : "val"}, {"label" : "left", "tail" : ": xml.Miscs", "member" : "scales.xml.equals.DifferentNumberOfMiscs.left", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#left:scales.xml.Miscs", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/DifferentNumberOfMiscs.html", "kind" : "case class"}, {"name" : "scales.xml.equals.DifferentTypes", "shortDescription" : "When types are different, or an end element vs XmlEvent", "members_case class" : [{"member" : "scales.xml.equals.DifferentTypes#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": xml.PullType", "member" : "scales.xml.equals.DifferentTypes.right", "link" : "scales\/xml\/equals\/DifferentTypes.html#right:scales.xml.PullType", "kind" : "val"}, {"label" : "left", "tail" : ": xml.PullType", "member" : "scales.xml.equals.DifferentTypes.left", "link" : "scales\/xml\/equals\/DifferentTypes.html#left:scales.xml.PullType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DifferentTypes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DifferentTypes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DifferentTypes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DifferentTypes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DifferentTypes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DifferentTypes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DifferentTypes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentTypes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentTypes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentTypes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DifferentTypes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DifferentTypes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DifferentTypes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DifferentTypes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DifferentTypes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DifferentTypes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/DifferentTypes.html", "kind" : "case class"}, {"name" : "scales.xml.equals.DifferentValueAttributes", "shortDescription" : "Re-packs the AttributeValueDifference, but will only occur when the attributes QName is present", "members_case class" : [{"member" : "scales.xml.equals.DifferentValueAttributes#<init>", "error" : "unsupported entity"}, {"label" : "differentValue", "tail" : ": Attribute", "member" : "scales.xml.equals.DifferentValueAttributes.differentValue", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#differentValue:scales.xml.Attribute", "kind" : "val"}, {"label" : "right", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.DifferentValueAttributes.right", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#right:scales.xml.Attributes", "kind" : "val"}, {"label" : "left", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.DifferentValueAttributes.left", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#left:scales.xml.Attributes", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DifferentValueAttributes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/DifferentValueAttributes.html", "kind" : "case class"}, {"name" : "scales.xml.equals.DocLikeComparison", "shortDescription" : "Compares neither of the version, DTD nor encoding of a document, but prolog and end misc.", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: T, right: T): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.DocLikeComparison.compare", "link" : "scales\/xml\/equals\/DocLikeComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:T,right:T):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"label" : "tToDoc", "tail" : ": (T) ⇒ DocLike", "member" : "scales.xml.equals.DocLikeComparison.tToDoc", "link" : "scales\/xml\/equals\/DocLikeComparison.html#tToDoc:T=>scales.xml.DocLike", "kind" : "implicit val"}, {"member" : "scales.xml.equals.DocLikeComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DocLikeComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DocLikeComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DocLikeComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DocLikeComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DocLikeComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DocLikeComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DocLikeComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DocLikeComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DocLikeComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DocLikeComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DocLikeComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DocLikeComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DocLikeComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DocLikeComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DocLikeComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DocLikeComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/DocLikeComparison.html", "kind" : "class"}, {"name" : "scales.xml.equals.DocLikeWrapper", "shortDescription" : "Wrap the creation of doclike things", "members_class" : [{"member" : "scales.xml.equals.DocLikeWrapper#<init>", "error" : "unsupported entity"}, {"label" : "tToDoc", "tail" : ": (T) ⇒ DocLike", "member" : "scales.xml.equals.DocLikeWrapper.tToDoc", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#tToDoc:T=>scales.xml.DocLike", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DocLikeWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, leftBody: T, rightBody: T): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.DocLikeWrapper.compare", "link" : "scales\/xml\/equals\/DocLikeWrapper.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,leftBody:T,rightBody:T):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "abstract def"}], "class" : "scales\/xml\/equals\/DocLikeWrapper.html", "kind" : "class"}, {"name" : "scales.xml.equals.DocLikeWrapperBase", "shortDescription" : "Base wrapper for most usecases, extra type is here to keep lookup working", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, leftBody: T, rightBody: T): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.DocLikeWrapperBase.compare", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,leftBody:T,rightBody:T):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.DocLikeWrapperBase#<init>", "error" : "unsupported entity"}, {"label" : "tToDoc", "tail" : ": (T) ⇒ DocLike", "member" : "scales.xml.equals.DocLikeWrapper.tToDoc", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#tToDoc:T=>scales.xml.DocLike", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/DocLikeWrapperBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/DocLikeWrapperBase.html", "kind" : "class"}, {"name" : "scales.xml.equals.ElemAttributeDifference", "shortDescription" : "If the difference is due to an attribute thats included as well", "members_case class" : [{"member" : "scales.xml.equals.ElemAttributeDifference#<init>", "error" : "unsupported entity"}, {"label" : "attributesDifference", "tail" : ": AttributesDifference", "member" : "scales.xml.equals.ElemAttributeDifference.attributesDifference", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#attributesDifference:scales.xml.equals.AttributesDifference", "kind" : "val"}, {"label" : "right", "tail" : ": Elem", "member" : "scales.xml.equals.ElemAttributeDifference.right", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#right:scales.xml.Elem", "kind" : "val"}, {"label" : "left", "tail" : ": Elem", "member" : "scales.xml.equals.ElemAttributeDifference.left", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#left:scales.xml.Elem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemAttributeDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/ElemAttributeDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.ElemComparison", "shortDescription" : "Namespaces by default are not compared.", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: Elem, right: Elem): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.ElemComparison.compare", "link" : "scales\/xml\/equals\/ElemComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:scales.xml.Elem,right:scales.xml.Elem):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.ElemComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ElemComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ElemComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ElemComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/ElemComparison.html", "kind" : "class"}, {"name" : "scales.xml.equals.ElemDifference", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ElemDifference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemDifference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ElemDifference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ElemDifference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "right", "tail" : ": Elem", "member" : "scales.xml.equals.XmlDifference.right", "link" : "scales\/xml\/equals\/ElemDifference.html#right:X", "kind" : "abstract val"}, {"label" : "left", "tail" : ": Elem", "member" : "scales.xml.equals.XmlDifference.left", "link" : "scales\/xml\/equals\/ElemDifference.html#left:X", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/ElemDifference.html", "kind" : "trait"}, {"name" : "scales.xml.equals.ElemEqualHelpers", "shortDescription" : "", "object" : "scales\/xml\/equals\/ElemEqualHelpers$.html", "members_object" : [{"label" : "allwaysTrueNamespacesEqual", "tail" : ": Equal[Map[String, String]]", "member" : "scales.xml.equals.ElemEqualHelpers.allwaysTrueNamespacesEqual", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#allwaysTrueNamespacesEqual:scalaz.Equal[Map[String,String]]", "kind" : "val"}, {"label" : "NamespacesEqual", "tail" : "", "member" : "scales.xml.equals.ElemEqualHelpers.NamespacesEqual", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#NamespacesEqual=scalaz.Equal[Map[String,String]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemEqualHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.ElemEquals", "shortDescription" : "", "object" : "scales\/xml\/equals\/ElemEquals$.html", "members_object" : [{"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.equals.DefaultQNameEquals.qnameEqual", "link" : "scales\/xml\/equals\/ElemEquals$.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/ElemEquals$.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/ElemEquals$.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/equals\/ElemEquals$.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ElemEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ElemEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ElemEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.ElemNameDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.ElemNameDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Elem", "member" : "scales.xml.equals.ElemNameDifference.right", "link" : "scales\/xml\/equals\/ElemNameDifference.html#right:scales.xml.Elem", "kind" : "val"}, {"label" : "left", "tail" : ": Elem", "member" : "scales.xml.equals.ElemNameDifference.left", "link" : "scales\/xml\/equals\/ElemNameDifference.html#left:scales.xml.Elem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemNameDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemNameDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemNameDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemNameDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemNameDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemNameDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemNameDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemNameDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemNameDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemNameDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemNameDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemNameDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemNameDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemNameDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemNameDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemNameDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/ElemNameDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.ElemNamespacesDifference", "shortDescription" : "This can only be returned when an ElemComparisom has been suplied with a custom namespaces implementation.", "members_case class" : [{"member" : "scales.xml.equals.ElemNamespacesDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": Elem", "member" : "scales.xml.equals.ElemNamespacesDifference.right", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#right:scales.xml.Elem", "kind" : "val"}, {"label" : "left", "tail" : ": Elem", "member" : "scales.xml.equals.ElemNamespacesDifference.left", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#left:scales.xml.Elem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ElemNamespacesDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/ElemNamespacesDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.EndElemNameDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.EndElemNameDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": EndElem", "member" : "scales.xml.equals.EndElemNameDifference.right", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#right:scales.xml.EndElem", "kind" : "val"}, {"label" : "left", "tail" : ": EndElem", "member" : "scales.xml.equals.EndElemNameDifference.left", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#left:scales.xml.EndElem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/EndElemNameDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/EndElemNameDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/EndElemNameDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.ExactQName", "members_trait" : [{"label" : "prefixAttributeComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): AttributeComparison", "member" : "scales.xml.equals.ExactQName.prefixAttributeComparison", "link" : "scales\/xml\/equals\/ExactQName.html#prefixAttributeComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.AttributeComparison", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ExactQName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ExactQName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ExactQName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ExactQName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ExactQName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ExactQName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ExactQName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactQName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactQName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactQName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ExactQName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ExactQName.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ExactQName.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ExactQName.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ExactQName.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ExactQName.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ExactQName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ExactQName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ExactQName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scales\/xml\/equals\/ExactQName$.html", "members_object" : [{"label" : "prefixAttributeComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): AttributeComparison", "member" : "scales.xml.equals.ExactQName.prefixAttributeComparison", "link" : "scales\/xml\/equals\/ExactQName$.html#prefixAttributeComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.AttributeComparison", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ExactQName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ExactQName$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ExactQName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ExactQName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ExactQName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ExactQName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ExactQName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactQName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactQName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactQName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ExactQName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ExactQName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ExactQName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ExactQName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ExactQName$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ExactQName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ExactQName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ExactQName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ExactQName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/ExactQName.html", "kind" : "trait"}, {"name" : "scales.xml.equals.ExactStreamEquals", "members_trait" : [{"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.ExactStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ExactStreamEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ExactStreamEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scales\/xml\/equals\/ExactStreamEquals$.html", "members_object" : [{"label" : "defaultStreamComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[StreamComparable[_]]", "member" : "scales.xml.equals.ExactStreamEquals.defaultStreamComparison", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#defaultStreamComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.equals.StreamComparable[_]]", "kind" : "def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.ExactStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ExactStreamEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/ExactStreamEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.ExactXmlEquals", "members_trait" : [{"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.ExactStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ExactXmlEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ExactXmlEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "All default exact Xml Equal and XmlComparison trait instances.", "object" : "scales\/xml\/equals\/ExactXmlEquals$.html", "members_object" : [{"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.ExactStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ExactXmlEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/ExactXmlEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.FromEqualsImplicit", "members_trait" : [{"label" : "fromCompToEq", "tail" : "(comp: XmlComparison[T]): Equal[T]", "member" : "scales.xml.equals.FromEqualsImplicit.fromCompToEq", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#fromCompToEq[T](implicitcomp:scales.xml.equals.XmlComparison[T]):scalaz.Equal[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/FromEqualsImplicit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/FromEqualsImplicit.html", "kind" : "trait"}, {"name" : "scales.xml.equals.ItemDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.ItemDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": XmlItem", "member" : "scales.xml.equals.ItemDifference.right", "link" : "scales\/xml\/equals\/ItemDifference.html#right:scales.xml.XmlItem", "kind" : "val"}, {"label" : "left", "tail" : ": XmlItem", "member" : "scales.xml.equals.ItemDifference.left", "link" : "scales\/xml\/equals\/ItemDifference.html#left:scales.xml.XmlItem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ItemDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ItemDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ItemDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ItemDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ItemDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ItemDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ItemDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ItemDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ItemDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ItemDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ItemDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ItemDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ItemDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ItemDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ItemDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ItemDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/ItemDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.ItemEquals", "shortDescription" : "", "object" : "scales\/xml\/equals\/ItemEquals$.html", "members_object" : [{"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/equals\/ItemEquals$.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/ItemEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/ItemEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/ItemEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/ItemEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/ItemEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/ItemEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/ItemEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ItemEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ItemEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/ItemEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/ItemEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/ItemEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/ItemEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/ItemEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/ItemEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/ItemEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/ItemEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/ItemEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/ItemEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.JoinTextAndCData", "shortDescription" : "Modifies the stream to turn CData nodes into Text nodes and join all adjacent Text nodes togeter i.e.", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "pumpNext", "tail" : "(): Unit", "member" : "scales.xml.equals.JoinTextAndCData.pumpNext", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#pumpNext:Unit", "kind" : "def"}, {"label" : "next", "tail" : "(): xml.PullType", "member" : "scales.xml.equals.JoinTextAndCData.next", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#next():scales.xml.PullType", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.xml.equals.JoinTextAndCData.hasNext", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#hasNext:Boolean", "kind" : "def"}, {"label" : "sb", "tail" : ": StringBuilder", "member" : "scales.xml.equals.JoinTextAndCData.sb", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#sb:StringBuilder", "kind" : "var"}, {"label" : "nonText", "tail" : ": xml.PullType", "member" : "scales.xml.equals.JoinTextAndCData.nonText", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#nonText:scales.xml.PullType", "kind" : "var"}, {"label" : "nextIsNonText", "tail" : ": Boolean", "member" : "scales.xml.equals.JoinTextAndCData.nextIsNonText", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#nextIsNonText:Boolean", "kind" : "var"}, {"label" : "item", "tail" : ": xml.PullType", "member" : "scales.xml.equals.JoinTextAndCData.item", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#item:scales.xml.PullType", "kind" : "var"}, {"label" : "gotNext", "tail" : ": Boolean", "member" : "scales.xml.equals.JoinTextAndCData.gotNext", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#gotNext:Boolean", "kind" : "var"}, {"member" : "scales.xml.equals.JoinTextAndCData#<init>", "error" : "unsupported entity"}, {"label" : "keepCData", "tail" : ": Boolean", "member" : "scales.xml.equals.JoinTextAndCData.keepCData", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#keepCData:Boolean", "kind" : "val"}, {"label" : "it", "tail" : ": Iterator[xml.PullType]", "member" : "scales.xml.equals.JoinTextAndCData.it", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#it:Iterator[scales.xml.PullType]", "kind" : "var"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.PullType]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.PullType]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[xml.PullType]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.PullType) ⇒ Boolean): Option[xml.PullType]", "member" : "scala.collection.Iterator.find", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.PullType) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(xml.PullType, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(xml.PullType, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.span", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.PullType, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (xml.PullType, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.PullType) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.take", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.PullType, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.PullType, Col[xml.PullType]]): Col[xml.PullType]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.PullType]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.PullType) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.PullType, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.PullType) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.PullType, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/JoinTextAndCData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/JoinTextAndCData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/JoinTextAndCData.html", "kind" : "class"}, {"name" : "scales.xml.equals.LogicalFilters", "shortDescription" : "A collection of stream filters to help with equality", "object" : "scales\/xml\/equals\/LogicalFilters$.html", "members_object" : [{"label" : "removePIAndComments", "tail" : "(it: Iterator[xml.PullType]): Iterator[xml.PullType]", "member" : "scales.xml.equals.LogicalFilters.removePIAndComments", "link" : "scales\/xml\/equals\/LogicalFilters$.html#removePIAndComments(it:Iterator[scales.xml.PullType]):Iterator[scales.xml.PullType]", "kind" : "def"}, {"label" : "joinText", "tail" : "(it: Iterator[xml.PullType]): Iterator[xml.PullType]", "member" : "scales.xml.equals.LogicalFilters.joinText", "link" : "scales\/xml\/equals\/LogicalFilters$.html#joinText(it:Iterator[scales.xml.PullType]):Iterator[scales.xml.PullType]", "kind" : "def"}, {"label" : "joinTextAndCData", "tail" : "(it: Iterator[xml.PullType]): Iterator[xml.PullType]", "member" : "scales.xml.equals.LogicalFilters.joinTextAndCData", "link" : "scales\/xml\/equals\/LogicalFilters$.html#joinTextAndCData(it:Iterator[scales.xml.PullType]):Iterator[scales.xml.PullType]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/LogicalFilters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/LogicalFilters$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/LogicalFilters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/LogicalFilters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/LogicalFilters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/LogicalFilters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/LogicalFilters$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/LogicalFilters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/LogicalFilters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/LogicalFilters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/LogicalFilters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/LogicalFilters$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/LogicalFilters$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/LogicalFilters$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/LogicalFilters$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/LogicalFilters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/LogicalFilters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/LogicalFilters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/LogicalFilters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.MiscDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.MiscDifference#<init>", "error" : "unsupported entity"}, {"label" : "isProlog", "tail" : ": Boolean", "member" : "scales.xml.equals.MiscDifference.isProlog", "link" : "scales\/xml\/equals\/MiscDifference.html#isProlog:Boolean", "kind" : "val"}, {"label" : "right", "tail" : ": xml.Misc", "member" : "scales.xml.equals.MiscDifference.right", "link" : "scales\/xml\/equals\/MiscDifference.html#right:scales.xml.Misc", "kind" : "val"}, {"label" : "left", "tail" : ": xml.Misc", "member" : "scales.xml.equals.MiscDifference.left", "link" : "scales\/xml\/equals\/MiscDifference.html#left:scales.xml.Misc", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/MiscDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/MiscDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/MiscDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/MiscDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/MiscDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/MiscDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/MiscDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MiscDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MiscDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MiscDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/MiscDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/MiscDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/MiscDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/MiscDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/MiscDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/MiscDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/MiscDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.MiscDifferentTypes", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.MiscDifferentTypes#<init>", "error" : "unsupported entity"}, {"label" : "isProlog", "tail" : ": Boolean", "member" : "scales.xml.equals.MiscDifferentTypes.isProlog", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#isProlog:Boolean", "kind" : "val"}, {"label" : "right", "tail" : ": xml.Misc", "member" : "scales.xml.equals.MiscDifferentTypes.right", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#right:scales.xml.Misc", "kind" : "val"}, {"label" : "left", "tail" : ": xml.Misc", "member" : "scales.xml.equals.MiscDifferentTypes.left", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#left:scales.xml.Misc", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/MiscDifferentTypes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/MiscDifferentTypes.html", "kind" : "case class"}, {"name" : "scales.xml.equals.MissingAttributes", "shortDescription" : "The size is the same but one of lefts qnames is not present in right", "members_case class" : [{"member" : "scales.xml.equals.MissingAttributes#<init>", "error" : "unsupported entity"}, {"label" : "missing", "tail" : ": Attribute", "member" : "scales.xml.equals.MissingAttributes.missing", "link" : "scales\/xml\/equals\/MissingAttributes.html#missing:scales.xml.Attribute", "kind" : "val"}, {"label" : "right", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.MissingAttributes.right", "link" : "scales\/xml\/equals\/MissingAttributes.html#right:scales.xml.Attributes", "kind" : "val"}, {"label" : "left", "tail" : ": xml.Attributes", "member" : "scales.xml.equals.MissingAttributes.left", "link" : "scales\/xml\/equals\/MissingAttributes.html#left:scales.xml.Attributes", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/MissingAttributes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/MissingAttributes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/MissingAttributes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/MissingAttributes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/MissingAttributes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/MissingAttributes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/MissingAttributes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MissingAttributes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MissingAttributes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/MissingAttributes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/MissingAttributes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/MissingAttributes.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/MissingAttributes.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/MissingAttributes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/MissingAttributes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/MissingAttributes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/MissingAttributes.html", "kind" : "case class"}, {"name" : "scales.xml.equals.PathAsPullTypeIterable", "shortDescription" : "Makes the given path the top path", "members_class" : [{"label" : "EndElemS", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.EndElemS", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#EndElemS", "kind" : "object"}, {"label" : "End", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.End", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#End", "kind" : "object"}, {"label" : "OnItem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.OnItem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#OnItem", "kind" : "object"}, {"label" : "StartElem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.StartElem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StartElem", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.State", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "end", "tail" : "(): xml.PullType", "member" : "scales.xml.equals.PathAsPullTypeIterable.end", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#end:scales.xml.PullType", "kind" : "def"}, {"label" : "event", "tail" : "(): xml.PullType", "member" : "scales.xml.equals.PathAsPullTypeIterable.event", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#event:scales.xml.PullType", "kind" : "def"}, {"label" : "initialPath", "tail" : "(): xml.XmlPath", "member" : "scales.xml.equals.PathAsPullTypeIterable.initialPath", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#initialPath:scales.xml.XmlPath", "kind" : "def"}, {"member" : "scales.xml.equals.PathAsPullTypeIterable#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : "(): xml.PullType", "member" : "scales.utils.collection.path.AbstractPathIterator.next", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.hasNext", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#hasNext:Boolean", "kind" : "def"}, {"label" : "prepareNext", "tail" : "(): Unit", "member" : "scales.utils.collection.path.AbstractPathIterator.prepareNext", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#prepareNext:Unit", "kind" : "def"}, {"label" : "nextState", "tail" : ": State", "member" : "scales.utils.collection.path.AbstractPathIterator.nextState", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#nextState:AbstractPathIterator.this.State", "kind" : "val"}, {"label" : "doNext", "tail" : "(ev: xml.PullType): (State, xml.PullType)", "member" : "scales.utils.collection.path.AbstractPathIterator.doNext", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#doNext(ev:T):(AbstractPathIterator.this.State,T)", "kind" : "def"}, {"label" : "canDoNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.canDoNext", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#canDoNext:Boolean", "kind" : "final def"}, {"label" : "isForward", "tail" : ": Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.isForward", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#isForward:Boolean", "kind" : "val"}, {"label" : "path", "tail" : ": Path[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.collection.path.AbstractPathIterator.path", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#path:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.PullType]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.PullType]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[xml.PullType]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.PullType) ⇒ Boolean): Option[xml.PullType]", "member" : "scala.collection.Iterator.find", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.PullType) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(xml.PullType, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(xml.PullType, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.span", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.PullType, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (xml.PullType, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.PullType) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.take", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.PullType, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.PullType, Col[xml.PullType]]): Col[xml.PullType]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.PullType]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.PullType) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.PullType, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.PullType) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.PullType, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/PathAsPullTypeIterable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/PathAsPullTypeIterable.html", "kind" : "class"}, {"name" : "scales.xml.equals.QNameComparison", "shortDescription" : "Only added to provide a complete compare set", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: QName, right: QName): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.QNameComparison.compare", "link" : "scales\/xml\/equals\/QNameComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:scales.xml.QName,right:scales.xml.QName):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.QNameComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/QNameComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/QNameComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/QNameComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/QNameComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/QNameComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/QNameComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/QNameComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/QNameComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/QNameComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/QNameComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/QNameComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/QNameComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/QNameComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/QNameComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/QNameComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/QNameComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/QNameComparison.html", "kind" : "class"}, {"name" : "scales.xml.equals.QNameDifference", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.equals.QNameDifference#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": QName", "member" : "scales.xml.equals.QNameDifference.right", "link" : "scales\/xml\/equals\/QNameDifference.html#right:scales.xml.QName", "kind" : "val"}, {"label" : "left", "tail" : ": QName", "member" : "scales.xml.equals.QNameDifference.left", "link" : "scales\/xml\/equals\/QNameDifference.html#left:scales.xml.QName", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/QNameDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/QNameDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/QNameDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/QNameDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/QNameDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/QNameDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/QNameDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/QNameDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/QNameDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/QNameDifference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/QNameDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/QNameDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/QNameDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/equals\/QNameDifference.html", "kind" : "case class"}, {"name" : "scales.xml.equals.QNameEquals", "members_trait" : [{"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/equals\/QNameEquals.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/QNameEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/QNameEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/QNameEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/QNameEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/QNameEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/QNameEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/QNameEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/QNameEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/QNameEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/QNameEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/QNameEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/QNameEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/QNameEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/QNameEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/QNameEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/QNameEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scales\/xml\/equals\/QNameEquals$.html", "members_object" : [{"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/equals\/QNameEquals$.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.equals.DefaultQNameEquals.qnameEqual", "link" : "scales\/xml\/equals\/QNameEquals$.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/QNameEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/QNameEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/QNameEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/QNameEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/QNameEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/QNameEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/QNameEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/QNameEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/QNameEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/QNameEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/QNameEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/QNameEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/QNameEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/QNameEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/QNameEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/QNameEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/QNameEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/QNameEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.SomeDifference", "shortDescription" : "Magik object for when we aren't attempting to calculate whats wrong", "object" : "scales\/xml\/equals\/SomeDifference$.html", "members_object" : [{"label" : "noCalculation", "tail" : ": Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.SomeDifference.noCalculation", "link" : "scales\/xml\/equals\/SomeDifference$.html#noCalculation:Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "val"}, {"label" : "unapply", "tail" : "(a: XmlDifference[AnyRef]): Option[(AnyRef, AnyRef)]", "member" : "scales.xml.equals.SomeDifference.unapply", "link" : "scales\/xml\/equals\/SomeDifference$.html#unapply(a:scales.xml.equals.XmlDifference[AnyRef]):Option[(AnyRef,AnyRef)]", "kind" : "def"}, {"label" : "right", "tail" : ": Null", "member" : "scales.xml.equals.SomeDifference.right", "link" : "scales\/xml\/equals\/SomeDifference$.html#right:Null", "kind" : "val"}, {"label" : "left", "tail" : ": Null", "member" : "scales.xml.equals.SomeDifference.left", "link" : "scales\/xml\/equals\/SomeDifference$.html#left:Null", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/SomeDifference$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/SomeDifference$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/SomeDifference$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/SomeDifference$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/SomeDifference$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/SomeDifference$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/SomeDifference$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/SomeDifference$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/SomeDifference$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/SomeDifference$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/SomeDifference$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/SomeDifference$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/SomeDifference$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/SomeDifference$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/SomeDifference$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/SomeDifference$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/SomeDifference$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/SomeDifference$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/SomeDifference$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.equals.StreamComparable", "shortDescription" : "This interface allows for non xml matching, for example a forward Iterator from a Text child.", "members_class" : [{"label" : "underlyingIterator", "tail" : "(): Iterator[xml.PullType]", "member" : "scales.xml.equals.StreamComparable.underlyingIterator", "link" : "scales\/xml\/equals\/StreamComparable.html#underlyingIterator:Iterator[scales.xml.PullType]", "kind" : "def"}, {"member" : "scales.xml.equals.StreamComparable#<init>", "error" : "unsupported entity"}, {"label" : "t", "tail" : ": T", "member" : "scales.xml.equals.StreamComparable.t", "link" : "scales\/xml\/equals\/StreamComparable.html#t:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/StreamComparable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/StreamComparable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/StreamComparable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/StreamComparable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/StreamComparable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/StreamComparable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/StreamComparable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/StreamComparable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/StreamComparable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/StreamComparable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/StreamComparable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/StreamComparable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/StreamComparable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/StreamComparable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/StreamComparable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/StreamComparable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/StreamComparable.html", "kind" : "class"}, {"name" : "scales.xml.equals.StreamComparableImplicits", "members_trait" : [{"label" : "itrDocLikeWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[(Iterator[xml.PullType], DocLike)]", "member" : "scales.xml.equals.StreamComparableImplicits.itrDocLikeWrapper", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#itrDocLikeWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[(Iterator[scales.xml.PullType],scales.xml.DocLike)]", "kind" : "implicit def"}, {"label" : "closeablePullWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[xml.CloseablePull]", "member" : "scales.xml.equals.StreamComparableImplicits.closeablePullWrapper", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#closeablePullWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[scales.xml.CloseablePull]", "kind" : "implicit def"}, {"label" : "xmlPullWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[XmlPull]", "member" : "scales.xml.equals.StreamComparableImplicits.xmlPullWrapper", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#xmlPullWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[scales.xml.XmlPull]", "kind" : "implicit def"}, {"label" : "docWrapper", "tail" : "(bodyComp: XmlComparison[xml.XmlTree]): DocLikeWrapper[Doc]", "member" : "scales.xml.equals.StreamComparableImplicits.docWrapper", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#docWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[scales.xml.XmlTree]):scales.xml.equals.DocLikeWrapper[scales.xml.Doc]", "kind" : "implicit def"}, {"label" : "itrDocLikeToStreamComparable", "tail" : "(t: (T, DocLike))(arg0: (T) ⇒ Iterator[xml.PullType]): StreamComparable[T]", "member" : "scales.xml.equals.StreamComparableImplicits.itrDocLikeToStreamComparable", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#itrDocLikeToStreamComparable[T](t:(T,scales.xml.DocLike))(implicitevidence$4:T=>Iterator[scales.xml.PullType]):scales.xml.equals.StreamComparable[T]", "kind" : "implicit def"}, {"label" : "fromStreamToStreamComparable", "tail" : "(t: T)(arg0: (T) ⇒ Iterator[xml.PullType]): StreamComparable[T]", "member" : "scales.xml.equals.StreamComparableImplicits.fromStreamToStreamComparable", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#fromStreamToStreamComparable[T](t:T)(implicitevidence$3:T=>Iterator[scales.xml.PullType]):scales.xml.equals.StreamComparable[T]", "kind" : "implicit def"}, {"label" : "xmlPathToComparable", "tail" : ": (xml.XmlPath) ⇒ StreamComparable[xml.XmlPath]", "member" : "scales.xml.equals.StreamComparableImplicits.xmlPathToComparable", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#xmlPathToComparable:scales.xml.XmlPath=>scales.xml.equals.StreamComparable[scales.xml.XmlPath]", "kind" : "implicit val"}, {"label" : "itrPlusDocAsAnIterator", "tail" : ": ((Iterator[xml.PullType], DocLike)) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.StreamComparableImplicits.itrPlusDocAsAnIterator", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#itrPlusDocAsAnIterator:((Iterator[scales.xml.PullType],scales.xml.DocLike))=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "xmlPullIsAn", "tail" : ": (XmlPull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.xmlPullIsAn", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#xmlPullIsAn:scales.xml.XmlPull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "closeablePullIsAn", "tail" : ": (xml.CloseablePull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.closeablePullIsAn", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#closeablePullIsAn:scales.xml.CloseablePull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/StreamComparableImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Collection of all implicit conversions to StreamComparables.", "trait" : "scales\/xml\/equals\/StreamComparableImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.equals.StreamComparison", "shortDescription" : "Compares based on streams.", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, ocontext: ComparisonContext, lefti: StreamComparable[_], righti: StreamComparable[_]): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.StreamComparison.compare", "link" : "scales\/xml\/equals\/StreamComparison.html#compare(calculate:Boolean,ocontext:scales.xml.equals.ComparisonContext,lefti:scales.xml.equals.StreamComparable[_],righti:scales.xml.equals.StreamComparable[_]):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.StreamComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/StreamComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/StreamComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/StreamComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/StreamComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/StreamComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/StreamComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/StreamComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/StreamComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/StreamComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/StreamComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/StreamComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/StreamComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/StreamComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/StreamComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/StreamComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/StreamComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/StreamComparison.html", "kind" : "class"}, {"name" : "scales.xml.equals.StreamComparisonWrapper", "shortDescription" : "Wraps a given T with a conversion from T to an xml stream", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, lt: T, rt: T): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.StreamComparisonWrapper.compare", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,lt:T,rt:T):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.StreamComparisonWrapper#<init>", "error" : "unsupported entity"}, {"label" : "str", "tail" : ": StreamComparison", "member" : "scales.xml.equals.StreamComparisonWrapper.str", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#str:scales.xml.equals.StreamComparison", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/StreamComparisonWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/StreamComparisonWrapper.html", "kind" : "class"}, {"name" : "scales.xml.equals.StreamEquals", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/StreamEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/StreamEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/StreamEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/StreamEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/StreamEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/StreamEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/StreamEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/StreamEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/StreamEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/StreamEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/StreamEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/StreamEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/StreamEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/StreamEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/StreamEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/StreamEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/StreamEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.StreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/equals\/StreamEquals.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit abstract def"}], "shortDescription" : "", "trait" : "scales\/xml\/equals\/StreamEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.TheyReallyAreIterators", "members_trait" : [{"label" : "xmlPullIsAn", "tail" : ": (XmlPull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.xmlPullIsAn", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#xmlPullIsAn:scales.xml.XmlPull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "closeablePullIsAn", "tail" : ": (xml.CloseablePull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.closeablePullIsAn", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#closeablePullIsAn:scales.xml.CloseablePull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/TheyReallyAreIterators.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "For Iterator[PullType]s that actually are, lets help the inference and implicit lookup out", "trait" : "scales\/xml\/equals\/TheyReallyAreIterators.html", "kind" : "trait"}, {"name" : "scales.xml.equals.XmlComparison", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/XmlComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/XmlComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/XmlComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/XmlComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/XmlComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/XmlComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/XmlComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/XmlComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/XmlComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/XmlComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/XmlComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/XmlComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/XmlComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/XmlComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/XmlComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/XmlComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: T, right: T): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.XmlComparison.compare", "link" : "scales\/xml\/equals\/XmlComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:T,right:T):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "abstract def"}], "shortDescription" : "Like Equals but also gives a path in addition to the fun reason", "trait" : "scales\/xml\/equals\/XmlComparison.html", "kind" : "trait"}, {"name" : "scales.xml.equals.XmlDifference", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/XmlDifference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/XmlDifference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/XmlDifference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/XmlDifference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/XmlDifference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/XmlDifference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/XmlDifference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlDifference.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlDifference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlDifference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/XmlDifference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/XmlDifference.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/XmlDifference.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/XmlDifference.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/XmlDifference.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/XmlDifference.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/XmlDifference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/XmlDifference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/XmlDifference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "right", "tail" : ": X", "member" : "scales.xml.equals.XmlDifference.right", "link" : "scales\/xml\/equals\/XmlDifference.html#right:X", "kind" : "abstract val"}, {"label" : "left", "tail" : ": X", "member" : "scales.xml.equals.XmlDifference.left", "link" : "scales\/xml\/equals\/XmlDifference.html#left:X", "kind" : "abstract val"}], "shortDescription" : "Why did equality fail, pattern match fun", "trait" : "scales\/xml\/equals\/XmlDifference.html", "kind" : "trait"}, {"name" : "scales.xml.equals.XmlEquals", "members_trait" : [{"label" : "compare", "tail" : "(context: ComparisonContext, left: T, right: T)(arg0: XmlComparison[T]): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.XmlEquals.compare", "link" : "scales\/xml\/equals\/XmlEquals.html#compare[T](context:scales.xml.equals.ComparisonContext,left:T,right:T)(implicitevidence$2:scales.xml.equals.XmlComparison[T]):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"label" : "compare", "tail" : "(left: T, right: T)(arg0: XmlComparison[T]): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.XmlEquals.compare", "link" : "scales\/xml\/equals\/XmlEquals.html#compare[T](left:T,right:T)(implicitevidence$1:scales.xml.equals.XmlComparison[T]):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"label" : "compareTokens", "tail" : "(context: ComparisonContext, qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean], str: String, str2: String): Boolean", "member" : "scales.xml.equals.XmlEquals.compareTokens", "link" : "scales\/xml\/equals\/XmlEquals.html#compareTokens(context:scales.xml.equals.ComparisonContext,qnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean],str:String,str2:String):Boolean", "kind" : "def"}, {"label" : "qnamesEqual", "tail" : "(context: ComparisonContext, str: String, str2: String): Boolean", "member" : "scales.xml.equals.XmlEquals.qnamesEqual", "link" : "scales\/xml\/equals\/XmlEquals.html#qnamesEqual(context:scales.xml.equals.ComparisonContext,str:String,str2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/XmlEquals.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/XmlEquals.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/XmlEquals.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/XmlEquals.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/XmlEquals.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/XmlEquals.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/XmlEquals.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlEquals.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlEquals.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlEquals.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/XmlEquals.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/XmlEquals.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/XmlEquals.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/XmlEquals.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/XmlEquals.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/XmlEquals.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/XmlEquals.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/XmlEquals.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/XmlEquals.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base functions for equality", "object" : "scales\/xml\/equals\/XmlEquals$.html", "members_object" : [{"label" : "compare", "tail" : "(context: ComparisonContext, left: T, right: T)(arg0: XmlComparison[T]): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.XmlEquals.compare", "link" : "scales\/xml\/equals\/XmlEquals$.html#compare[T](context:scales.xml.equals.ComparisonContext,left:T,right:T)(implicitevidence$2:scales.xml.equals.XmlComparison[T]):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"label" : "compare", "tail" : "(left: T, right: T)(arg0: XmlComparison[T]): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.XmlEquals.compare", "link" : "scales\/xml\/equals\/XmlEquals$.html#compare[T](left:T,right:T)(implicitevidence$1:scales.xml.equals.XmlComparison[T]):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"label" : "compareTokens", "tail" : "(context: ComparisonContext, qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean], str: String, str2: String): Boolean", "member" : "scales.xml.equals.XmlEquals.compareTokens", "link" : "scales\/xml\/equals\/XmlEquals$.html#compareTokens(context:scales.xml.equals.ComparisonContext,qnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean],str:String,str2:String):Boolean", "kind" : "def"}, {"label" : "qnamesEqual", "tail" : "(context: ComparisonContext, str: String, str2: String): Boolean", "member" : "scales.xml.equals.XmlEquals.qnamesEqual", "link" : "scales\/xml\/equals\/XmlEquals$.html#qnamesEqual(context:scales.xml.equals.ComparisonContext,str:String,str2:String):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/XmlEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/XmlEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/XmlEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/XmlEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/XmlEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/XmlEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/XmlEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/XmlEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/XmlEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/XmlEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/XmlEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/XmlEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/XmlEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/XmlEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/XmlEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/XmlEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/equals\/XmlEquals.html", "kind" : "trait"}, {"name" : "scales.xml.equals.XmlItemComparison", "shortDescription" : "Compares XmlItems, providing Some qnameTokenComparison will force that to be used to decide if qname comparison should be used or not", "members_class" : [{"label" : "compare", "tail" : "(calculate: Boolean, context: ComparisonContext, left: XmlItem, right: XmlItem): Option[(XmlDifference[_], ComparisonContext)]", "member" : "scales.xml.equals.XmlItemComparison.compare", "link" : "scales\/xml\/equals\/XmlItemComparison.html#compare(calculate:Boolean,context:scales.xml.equals.ComparisonContext,left:scales.xml.XmlItem,right:scales.xml.XmlItem):Option[(scales.xml.equals.XmlDifference[_],scales.xml.equals.ComparisonContext)]", "kind" : "def"}, {"member" : "scales.xml.equals.XmlItemComparison#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/equals\/XmlItemComparison.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/equals\/XmlItemComparison.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/equals\/XmlItemComparison.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/equals\/XmlItemComparison.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/equals\/XmlItemComparison.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/equals\/XmlItemComparison.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/equals\/XmlItemComparison.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlItemComparison.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlItemComparison.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/equals\/XmlItemComparison.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/equals\/XmlItemComparison.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/equals\/XmlItemComparison.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/equals\/XmlItemComparison.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/equals\/XmlItemComparison.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/equals\/XmlItemComparison.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/equals\/XmlItemComparison.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/equals\/XmlItemComparison.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/equals\/XmlItemComparison.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/equals\/XmlItemComparison.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/equals\/XmlItemComparison.html", "kind" : "class"}], "scales.utils.resources" : [{"name" : "scales.utils.resources.CloseOnNeed", "members_trait" : [{"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/utils\/resources\/CloseOnNeed.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/utils\/resources\/CloseOnNeed.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/utils\/resources\/CloseOnNeed.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/resources\/CloseOnNeed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/resources\/CloseOnNeed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/resources\/CloseOnNeed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/resources\/CloseOnNeed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/resources\/CloseOnNeed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/resources\/CloseOnNeed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/resources\/CloseOnNeed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/CloseOnNeed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/CloseOnNeed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/CloseOnNeed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/resources\/CloseOnNeed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/resources\/CloseOnNeed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/resources\/CloseOnNeed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/resources\/CloseOnNeed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/resources\/CloseOnNeed.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/resources\/CloseOnNeed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/resources\/CloseOnNeed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/resources\/CloseOnNeed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/resources\/CloseOnNeed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.doClose", "link" : "scales\/utils\/resources\/CloseOnNeed.html#doClose:Unit", "kind" : "abstract def"}], "shortDescription" : "Mostly exists for pulling but it is general", "trait" : "scales\/utils\/resources\/CloseOnNeed.html", "kind" : "trait"}, {"name" : "scales.utils.resources.Creator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/resources\/Creator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/resources\/Creator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/resources\/Creator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/resources\/Creator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/resources\/Creator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/resources\/Creator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/resources\/Creator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Creator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Creator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Creator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/resources\/Creator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/resources\/Creator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/resources\/Creator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/resources\/Creator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/resources\/Creator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/resources\/Creator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/resources\/Creator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/resources\/Creator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/resources\/Creator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "create", "tail" : "(): T", "member" : "scales.utils.resources.Creator.create", "link" : "scales\/utils\/resources\/Creator.html#create:T", "kind" : "abstract def"}], "shortDescription" : "Simple factory interface", "trait" : "scales\/utils\/resources\/Creator.html", "kind" : "trait"}, {"name" : "scales.utils.resources.IsClosed", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/resources\/IsClosed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/resources\/IsClosed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/resources\/IsClosed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/resources\/IsClosed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/resources\/IsClosed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/resources\/IsClosed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/resources\/IsClosed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/IsClosed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/IsClosed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/IsClosed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/resources\/IsClosed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/resources\/IsClosed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/resources\/IsClosed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/resources\/IsClosed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/resources\/IsClosed.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/resources\/IsClosed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/resources\/IsClosed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/resources\/IsClosed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/resources\/IsClosed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.IsClosed.isClosed", "link" : "scales\/utils\/resources\/IsClosed.html#isClosed:Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/utils\/resources\/IsClosed.html", "kind" : "trait"}, {"name" : "scales.utils.resources.Loaner", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/resources\/Loaner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/resources\/Loaner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/resources\/Loaner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/resources\/Loaner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/resources\/Loaner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/resources\/Loaner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/resources\/Loaner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Loaner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Loaner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Loaner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/resources\/Loaner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/resources\/Loaner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/resources\/Loaner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/resources\/Loaner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/resources\/Loaner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/resources\/Loaner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/resources\/Loaner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/resources\/Loaner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/resources\/Loaner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "loan", "tail" : "(tThunk: (T) ⇒ X): X", "member" : "scales.utils.resources.Loaner.loan", "link" : "scales\/utils\/resources\/Loaner.html#loan[X](tThunk:T=>X):X", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/utils\/resources\/Loaner.html", "kind" : "trait"}, {"name" : "scales.utils.resources.Pool", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/resources\/Pool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/resources\/Pool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/resources\/Pool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/resources\/Pool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/resources\/Pool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/resources\/Pool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/resources\/Pool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Pool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Pool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/Pool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/resources\/Pool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/resources\/Pool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/resources\/Pool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/resources\/Pool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/resources\/Pool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/resources\/Pool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/resources\/Pool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/resources\/Pool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/resources\/Pool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: T): Unit", "member" : "scales.utils.resources.Pool.giveBack", "link" : "scales\/utils\/resources\/Pool.html#giveBack(t:T):Unit", "kind" : "abstract def"}, {"label" : "grab", "tail" : "(): T", "member" : "scales.utils.resources.Pool.grab", "link" : "scales\/utils\/resources\/Pool.html#grab:T", "kind" : "abstract def"}], "shortDescription" : "Simple pool interface", "trait" : "scales\/utils\/resources\/Pool.html", "kind" : "trait"}, {"name" : "scales.utils.resources.SimpleUnboundedPool", "members_trait" : [{"label" : "loan", "tail" : "(tThunk: (T) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): T", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: T): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): T", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "create", "tail" : "(): T", "member" : "scales.utils.resources.Creator.create", "link" : "scales\/utils\/resources\/SimpleUnboundedPool.html#create:T", "kind" : "abstract def"}], "shortDescription" : "Thread safe unbounded pool, if more objects are required it will simple create them.", "trait" : "scales\/utils\/resources\/SimpleUnboundedPool.html", "kind" : "trait"}], "scales.xml.parser.pull" : [{"name" : "scales.xml.parser.pull.ByteSourceUser", "shortDescription" : "", "members_case class" : [{"label" : "doClose", "tail" : "(): Unit", "member" : "scales.xml.parser.pull.ByteSourceUser.doClose", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#doClose:Unit", "kind" : "def"}, {"label" : "getReader", "tail" : "(xf: XMLInputFactory): XMLStreamReader", "member" : "scales.xml.parser.pull.ByteSourceUser.getReader", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#getReader(xf:javax.xml.stream.XMLInputFactory):javax.xml.stream.XMLStreamReader", "kind" : "def"}, {"member" : "scales.xml.parser.pull.ByteSourceUser#<init>", "error" : "unsupported entity"}, {"label" : "stream", "tail" : ": ProxiedCloseOnNeedInputStream", "member" : "scales.xml.parser.pull.ByteSourceUser.stream", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#stream:scales.utils.io.ProxiedCloseOnNeedInputStream", "kind" : "val"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/ByteSourceUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/parser\/pull\/ByteSourceUser.html", "kind" : "case class"}, {"name" : "scales.xml.parser.pull.CharacterSourceUser", "shortDescription" : "", "members_case class" : [{"label" : "doClose", "tail" : "(): Unit", "member" : "scales.xml.parser.pull.CharacterSourceUser.doClose", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#doClose:Unit", "kind" : "def"}, {"label" : "getReader", "tail" : "(xf: XMLInputFactory): XMLStreamReader", "member" : "scales.xml.parser.pull.CharacterSourceUser.getReader", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#getReader(xf:javax.xml.stream.XMLInputFactory):javax.xml.stream.XMLStreamReader", "kind" : "def"}, {"member" : "scales.xml.parser.pull.CharacterSourceUser#<init>", "error" : "unsupported entity"}, {"label" : "reader", "tail" : ": ProxiedCloseOnNeedReader", "member" : "scales.xml.parser.pull.CharacterSourceUser.reader", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#reader:scales.utils.io.ProxiedCloseOnNeedReader", "kind" : "val"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/parser\/pull\/CharacterSourceUser.html", "kind" : "case class"}, {"name" : "scales.xml.parser.pull.Iterate", "shortDescription" : "Iterates over a path of QNames producing XPaths for a given Iterator[PullType]", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/xml\/parser\/pull\/Iterate.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "step", "tail" : "(): xml.XmlPath", "member" : "scales.xml.parser.pull.Iterate.step", "link" : "scales\/xml\/parser\/pull\/Iterate.html#step:scales.xml.XmlPath", "kind" : "def"}, {"label" : "next", "tail" : "(): xml.XmlPath", "member" : "scales.xml.parser.pull.Iterate.next", "link" : "scales\/xml\/parser\/pull\/Iterate.html#next():scales.xml.XmlPath", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.xml.parser.pull.Iterate.hasNext", "link" : "scales\/xml\/parser\/pull\/Iterate.html#hasNext:Boolean", "kind" : "def"}, {"label" : "cur", "tail" : ": xml.XmlPath", "member" : "scales.xml.parser.pull.Iterate.cur", "link" : "scales\/xml\/parser\/pull\/Iterate.html#cur:scales.xml.XmlPath", "kind" : "var"}, {"label" : "getNext", "tail" : "(): xml.XmlPath", "member" : "scales.xml.parser.pull.Iterate.getNext", "link" : "scales\/xml\/parser\/pull\/Iterate.html#getNext:scales.xml.XmlPath", "kind" : "def"}, {"label" : "set", "tail" : "(before: List[(QName, Int)], focus: (QName, Int), toGo: List[(QName, Int)], proxies: TreeProxies, collecting: Boolean): Unit", "member" : "scales.xml.parser.pull.Iterate.set", "link" : "scales\/xml\/parser\/pull\/Iterate.html#set(before:List[(scales.xml.QName,Int)],focus:(scales.xml.QName,Int),toGo:List[(scales.xml.QName,Int)],proxies:scales.xml.impl.TreeProxies,collecting:Boolean):Unit", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "scales.xml.parser.pull.Iterate.reset", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reset:Unit", "kind" : "def"}, {"label" : "collecting", "tail" : ": Boolean", "member" : "scales.xml.parser.pull.Iterate.collecting", "link" : "scales\/xml\/parser\/pull\/Iterate.html#collecting:Boolean", "kind" : "var"}, {"label" : "proxies", "tail" : ": TreeProxies", "member" : "scales.xml.parser.pull.Iterate.proxies", "link" : "scales\/xml\/parser\/pull\/Iterate.html#proxies:scales.xml.impl.TreeProxies", "kind" : "var"}, {"label" : "toGo", "tail" : ": List[(QName, Int)]", "member" : "scales.xml.parser.pull.Iterate.toGo", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toGo:List[(scales.xml.QName,Int)]", "kind" : "var"}, {"label" : "focus", "tail" : ": (QName, Int)", "member" : "scales.xml.parser.pull.Iterate.focus", "link" : "scales\/xml\/parser\/pull\/Iterate.html#focus:(scales.xml.QName,Int)", "kind" : "var"}, {"label" : "before", "tail" : ": List[(QName, Int)]", "member" : "scales.xml.parser.pull.Iterate.before", "link" : "scales\/xml\/parser\/pull\/Iterate.html#before:List[(scales.xml.QName,Int)]", "kind" : "var"}, {"label" : "qnames", "tail" : ": List[QName]", "member" : "scales.xml.parser.pull.Iterate.qnames", "link" : "scales\/xml\/parser\/pull\/Iterate.html#qnames:List[scales.xml.QName]", "kind" : "val"}, {"member" : "scales.xml.parser.pull.Iterate#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.XmlPath]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.XmlPath]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/xml\/parser\/pull\/Iterate.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/xml\/parser\/pull\/Iterate.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/xml\/parser\/pull\/Iterate.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[xml.XmlPath], Iterator[xml.XmlPath])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/xml\/parser\/pull\/Iterate.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/xml\/parser\/pull\/Iterate.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/xml\/parser\/pull\/Iterate.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/xml\/parser\/pull\/Iterate.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[xml.XmlPath]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/xml\/parser\/pull\/Iterate.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/parser\/pull\/Iterate.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/parser\/pull\/Iterate.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.XmlPath) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/parser\/pull\/Iterate.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/parser\/pull\/Iterate.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Option[xml.XmlPath]", "member" : "scala.collection.Iterator.find", "link" : "scales\/xml\/parser\/pull\/Iterate.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/xml\/parser\/pull\/Iterate.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/xml\/parser\/pull\/Iterate.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/xml\/parser\/pull\/Iterate.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.XmlPath) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/xml\/parser\/pull\/Iterate.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/xml\/parser\/pull\/Iterate.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(xml.XmlPath, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/xml\/parser\/pull\/Iterate.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/xml\/parser\/pull\/Iterate.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(xml.XmlPath, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/xml\/parser\/pull\/Iterate.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/xml\/parser\/pull\/Iterate.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterator[xml.XmlPath], Iterator[xml.XmlPath])", "member" : "scala.collection.Iterator.span", "link" : "scales\/xml\/parser\/pull\/Iterate.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterator[xml.XmlPath], Iterator[xml.XmlPath])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/xml\/parser\/pull\/Iterate.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/xml\/parser\/pull\/Iterate.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/xml\/parser\/pull\/Iterate.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/xml\/parser\/pull\/Iterate.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.XmlPath, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/xml\/parser\/pull\/Iterate.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/xml\/parser\/pull\/Iterate.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/xml\/parser\/pull\/Iterate.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (xml.XmlPath, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/xml\/parser\/pull\/Iterate.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/xml\/parser\/pull\/Iterate.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/xml\/parser\/pull\/Iterate.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/xml\/parser\/pull\/Iterate.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.XmlPath) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/xml\/parser\/pull\/Iterate.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/xml\/parser\/pull\/Iterate.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/xml\/parser\/pull\/Iterate.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/xml\/parser\/pull\/Iterate.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.take", "link" : "scales\/xml\/parser\/pull\/Iterate.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/xml\/parser\/pull\/Iterate.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/xml\/parser\/pull\/Iterate.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/xml\/parser\/pull\/Iterate.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[xml.XmlPath]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/xml\/parser\/pull\/Iterate.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/parser\/pull\/Iterate.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.XmlPath, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.XmlPath, Col[xml.XmlPath]]): Col[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/xml\/parser\/pull\/Iterate.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/parser\/pull\/Iterate.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/parser\/pull\/Iterate.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/parser\/pull\/Iterate.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/parser\/pull\/Iterate.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/parser\/pull\/Iterate.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/parser\/pull\/Iterate.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/parser\/pull\/Iterate.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/parser\/pull\/Iterate.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/parser\/pull\/Iterate.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/parser\/pull\/Iterate.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.XmlPath) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/parser\/pull\/Iterate.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/parser\/pull\/Iterate.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.XmlPath, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.XmlPath) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/xml\/parser\/pull\/Iterate.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/parser\/pull\/Iterate.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/parser\/pull\/Iterate.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/parser\/pull\/Iterate.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.XmlPath, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/parser\/pull\/Iterate.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/parser\/pull\/Iterate.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/parser\/pull\/Iterate.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/parser\/pull\/Iterate.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/parser\/pull\/Iterate.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/parser\/pull\/Iterate.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/Iterate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/Iterate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/Iterate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/Iterate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/Iterate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/Iterate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/Iterate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/Iterate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/Iterate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/Iterate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/Iterate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/Iterate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/Iterate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/Iterate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/Iterate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/Iterate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/Iterate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/Iterate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/pull\/Iterate.html", "kind" : "class"}, {"name" : "scales.xml.parser.pull.PullIterateeFunctions", "shortDescription" : "", "members_class" : [{"label" : "skip", "tail" : "(downTo: ⇒ List[Int])(F: Monad[F]): IterateeT[xml.PullType, F, xml.PeekMatch]", "member" : "scales.xml.parser.pull.PullIterateeFunctions.skip", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#skip(downTo:=>List[Int])(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[scales.xml.PullType,F,scales.xml.PeekMatch]", "kind" : "def"}, {"label" : "skipv", "tail" : "(downTo: Int*)(F: Monad[F]): IterateeT[xml.PullType, F, xml.PeekMatch]", "member" : "scales.xml.parser.pull.PullIterateeFunctions.skipv", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#skipv(downTo:Int*)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[scales.xml.PullType,F,scales.xml.PeekMatch]", "kind" : "def"}, {"label" : "onQNamesI", "tail" : "(qnames: List[QName])(qe: Equal[QName], F: Monad[F]): ResumableIter[xml.PullType, F, xml.QNamesMatch]", "member" : "scales.xml.parser.pull.PullIterateeFunctions.onQNamesI", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#onQNamesI(qnames:List[scales.xml.QName])(implicitqe:scalaz.Equal[scales.xml.QName],implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[scales.xml.PullType,F,scales.xml.QNamesMatch]", "kind" : "def"}, {"label" : "onQNames", "tail" : "(qnames: List[QName])(F: Monad[F]): ResumableIter[xml.PullType, F, xml.QNamesMatch]", "member" : "scales.xml.parser.pull.PullIterateeFunctions.onQNames", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#onQNames(qnames:List[scales.xml.QName])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[scales.xml.PullType,F,scales.xml.QNamesMatch]", "kind" : "def"}, {"member" : "scales.xml.parser.pull.PullIterateeFunctions#<init>", "error" : "unsupported entity"}, {"label" : "F", "tail" : ": Monad[F]", "member" : "scales.xml.parser.pull.PullIterateeFunctions.F", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#F:scalaz.Monad[F]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/pull\/PullIterateeFunctions.html", "kind" : "class"}, {"name" : "scales.xml.parser.pull.PullIteratees", "members_trait" : [{"label" : "iterate", "tail" : "(path: List[QName], xml: Iterator[xml.PullType])(qe: Equal[QName]): FlatMapIterator[xml.XmlPath]", "member" : "scales.xml.parser.pull.PullIteratees.iterate", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#iterate(path:List[scales.xml.QName],xml:Iterator[scales.xml.PullType])(implicitqe:scalaz.Equal[scales.xml.QName]):scales.utils.collection.FlatMapIterator[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "iterate", "tail" : "(path: List[QName], xml: XmlPull)(qe: Equal[QName]): FlatMapIterator[xml.XmlPath]", "member" : "scales.xml.parser.pull.PullIteratees.iterate", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#iterate(path:List[scales.xml.QName],xml:scales.xml.parser.pull.XmlPull)(implicitqe:scalaz.Equal[scales.xml.QName]):scales.utils.collection.FlatMapIterator[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "skip", "tail" : "(downTo: ⇒ List[Int])(F: Monad[F]): IterateeT[xml.PullType, F, PeekMatch]", "member" : "scales.xml.parser.pull.PullIteratees.skip", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#skip[F[_]](downTo:=>List[Int])(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[scales.xml.PullType,F,PullIteratees.this.PeekMatch]", "kind" : "def"}, {"label" : "skipv", "tail" : "(downTo: Int*)(F: Monad[F]): IterateeT[xml.PullType, F, PeekMatch]", "member" : "scales.xml.parser.pull.PullIteratees.skipv", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#skipv[F[_]](downTo:Int*)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[scales.xml.PullType,F,PullIteratees.this.PeekMatch]", "kind" : "def"}, {"label" : "PeekMatch", "tail" : "", "member" : "scales.xml.parser.pull.PullIteratees.PeekMatch", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#PeekMatch=Option[scales.xml.XmlPath]", "kind" : "type"}, {"label" : "onQNamesI", "tail" : "(qnames: List[QName])(qe: Equal[QName], F: Monad[F]): ResumableIter[xml.PullType, F, QNamesMatch]", "member" : "scales.xml.parser.pull.PullIteratees.onQNamesI", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#onQNamesI[F[_]](qnames:List[scales.xml.QName])(implicitqe:scalaz.Equal[scales.xml.QName],implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[scales.xml.PullType,F,PullIteratees.this.QNamesMatch]", "kind" : "def"}, {"label" : "onQNames", "tail" : "(qnames: List[QName])(arg0: Monad[F]): ResumableIter[xml.PullType, F, QNamesMatch]", "member" : "scales.xml.parser.pull.PullIteratees.onQNames", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#onQNames[F[_]](qnames:List[scales.xml.QName])(implicitevidence$1:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[scales.xml.PullType,F,PullIteratees.this.QNamesMatch]", "kind" : "def"}, {"label" : "QNamesMatch", "tail" : "", "member" : "scales.xml.parser.pull.PullIteratees.QNamesMatch", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#QNamesMatch=(List[scales.xml.QName],Option[scales.xml.XmlPath])", "kind" : "type"}, {"label" : "idPullIteratees", "tail" : ": PullIterateeFunctions[scalaz.Id.Id]", "member" : "scales.xml.parser.pull.PullIteratees.idPullIteratees", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#idPullIteratees:scales.xml.parser.pull.PullIterateeFunctions[scalaz.Id.Id]", "kind" : "implicit val"}, {"label" : "trampolinePullIteratees", "tail" : ": PullIterateeFunctions[Trampoline]", "member" : "scales.xml.parser.pull.PullIteratees.trampolinePullIteratees", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#trampolinePullIteratees:scales.xml.parser.pull.PullIterateeFunctions[scalaz.Free.Trampoline]", "kind" : "implicit val"}, {"label" : "ioPullIteratees", "tail" : ": PullIterateeFunctions[IO]", "member" : "scales.xml.parser.pull.PullIteratees.ioPullIteratees", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#ioPullIteratees:scales.xml.parser.pull.PullIterateeFunctions[scalaz.effect.IO]", "kind" : "implicit val"}, {"label" : "pullIterateesOf", "tail" : "(F: Monad[F]): PullIterateeFunctions[F]", "member" : "scales.xml.parser.pull.PullIteratees.pullIterateesOf", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#pullIterateesOf[F[_]](implicitF:scalaz.Monad[F]):scales.xml.parser.pull.PullIterateeFunctions[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/PullIteratees.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Iteratees related to pull parsing", "trait" : "scales\/xml\/parser\/pull\/PullIteratees.html", "kind" : "trait"}, {"name" : "scales.xml.parser.pull.PullUtils", "shortDescription" : "", "object" : "scales\/xml\/parser\/pull\/PullUtils$.html", "members_object" : [{"label" : "pumpEvent", "tail" : "(parser: XMLStreamReader, strategy: MemoryOptimisationStrategy[Token], token: Token, prolog: Prolog, idepth: Int, strictPath: List[QName], ipath: List[QName])(otherEventHandler: (Either[Int, Throwable]) ⇒ xml.PullType): (xml.PullType, Int, Int, Prolog, List[QName])", "member" : "scales.xml.parser.pull.PullUtils.pumpEvent", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#pumpEvent[Token<:scales.xml.parser.strategies.OptimisationToken](parser:javax.xml.stream.XMLStreamReader,strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[Token],token:Token,prolog:scales.xml.Prolog,idepth:Int,strictPath:List[scales.xml.QName],ipath:List[scales.xml.QName])(otherEventHandler:Either[Int,Throwable]=>scales.xml.PullType):(scales.xml.PullType,Int,Int,scales.xml.Prolog,List[scales.xml.QName])", "kind" : "def"}, {"label" : "getElemQName", "tail" : "(parser: XMLStreamReader, strategy: MemoryOptimisationStrategy[Token], token: Token): QName", "member" : "scales.xml.parser.pull.PullUtils.getElemQName", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#getElemQName[Token<:scales.xml.parser.strategies.OptimisationToken](parser:javax.xml.stream.XMLStreamReader,strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[Token],token:Token):scales.xml.QName", "kind" : "def"}, {"label" : "getNamespaces", "tail" : "(parser: XMLStreamReader, strategy: MemoryOptimisationStrategy[Token], token: Token): Map[String, String]", "member" : "scales.xml.parser.pull.PullUtils.getNamespaces", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#getNamespaces[Token<:scales.xml.parser.strategies.OptimisationToken](parser:javax.xml.stream.XMLStreamReader,strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[Token],token:Token):Map[String,String]", "kind" : "def"}, {"label" : "getAttributes", "tail" : "(parser: XMLStreamReader, strategy: MemoryOptimisationStrategy[Token], token: Token): xml.Attributes", "member" : "scales.xml.parser.pull.PullUtils.getAttributes", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#getAttributes[Token<:scales.xml.parser.strategies.OptimisationToken](parser:javax.xml.stream.XMLStreamReader,strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[Token],token:Token):scales.xml.Attributes", "kind" : "def"}, {"label" : "getMisc", "tail" : "(c: xml.PullType, in: String): xml.Misc", "member" : "scales.xml.parser.pull.PullUtils.getMisc", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#getMisc(c:scales.xml.PullType,in:String):scales.xml.Misc", "kind" : "def"}, {"label" : "weAreInAParser", "tail" : ": FromParser", "member" : "scales.xml.parser.pull.PullUtils.weAreInAParser", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#weAreInAParser:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/PullUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.pull.SourceUser", "members_trait" : [{"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/SourceUser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getReader", "tail" : "(xf: XMLInputFactory): XMLStreamReader", "member" : "scales.xml.parser.pull.SourceUser.getReader", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#getReader(xf:javax.xml.stream.XMLInputFactory):javax.xml.stream.XMLStreamReader", "kind" : "abstract def"}, {"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.doClose", "link" : "scales\/xml\/parser\/pull\/SourceUser.html#doClose:Unit", "kind" : "abstract def"}], "shortDescription" : "We should give the stax what it needs to work best, especially with encoding issues, converting streams to readers etc is teh suxor", "trait" : "scales\/xml\/parser\/pull\/SourceUser.html", "kind" : "trait"}, {"name" : "scales.xml.parser.pull.XmlPull", "members_trait" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "pumpEvent", "tail" : "(): xml.PullType", "member" : "scales.xml.parser.pull.XmlPull.pumpEvent", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#pumpEvent:scales.xml.PullType", "kind" : "def"}, {"label" : "next", "tail" : "(): xml.PullType", "member" : "scales.xml.parser.pull.XmlPull.next", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#next():scales.xml.PullType", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.xml.parser.pull.XmlPull.hasNext", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#hasNext:Boolean", "kind" : "def"}, {"label" : "it", "tail" : ": Iterator[xml.PullType]", "member" : "scales.xml.parser.pull.XmlPull.it", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#it:Iterator[scales.xml.PullType]", "kind" : "final val"}, {"label" : "start", "tail" : "(): Unit", "member" : "scales.xml.parser.pull.XmlPull.start", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#start:Unit", "kind" : "def"}, {"label" : "haveRoot", "tail" : ": Boolean", "member" : "scales.xml.parser.pull.XmlPull.haveRoot", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#haveRoot:Boolean", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "scales.xml.parser.pull.XmlPull.depth", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#depth:Int", "kind" : "val"}, {"label" : "end", "tail" : "(): EndMisc", "member" : "scales.xml.parser.pull.XmlPull.end", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#end:scales.xml.EndMisc", "kind" : "def"}, {"label" : "prolog", "tail" : "(): Prolog", "member" : "scales.xml.parser.pull.XmlPull.prolog", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#prolog:scales.xml.Prolog", "kind" : "def"}, {"label" : "iStrictPath", "tail" : ": List[QName]", "member" : "scales.xml.parser.pull.XmlPull.iStrictPath", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#iStrictPath:List[scales.xml.QName]", "kind" : "val"}, {"label" : "internalClose", "tail" : "(): Unit", "member" : "scales.xml.parser.pull.XmlPull.internalClose", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#internalClose:Unit", "kind" : "def"}, {"label" : "weAreInAParser", "tail" : ": FromParser", "member" : "scales.xml.parser.pull.XmlPull.weAreInAParser", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#weAreInAParser:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.PullType]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.PullType]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[xml.PullType]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.PullType) ⇒ Boolean): Option[xml.PullType]", "member" : "scala.collection.Iterator.find", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.PullType) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(xml.PullType, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(xml.PullType, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.span", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.PullType, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (xml.PullType, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.PullType) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.take", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.PullType, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.PullType, Col[xml.PullType]]): Col[xml.PullType]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.PullType]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.PullType) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.PullType, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.PullType) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.PullType, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/XmlPull.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "token", "tail" : ": Token", "member" : "scales.xml.parser.pull.XmlPull.token", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#token:XmlPull.this.Token", "kind" : "abstract val"}, {"label" : "strategy", "tail" : ": MemoryOptimisationStrategy[Token]", "member" : "scales.xml.parser.pull.XmlPull.strategy", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[XmlPull.this.Token]", "kind" : "abstract val"}, {"label" : "resourceCloser", "tail" : ": () ⇒ Unit", "member" : "scales.xml.parser.pull.XmlPull.resourceCloser", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#resourceCloser:()=>Unit", "kind" : "abstract val"}, {"label" : "parser", "tail" : ": XMLStreamReader", "member" : "scales.xml.parser.pull.XmlPull.parser", "link" : "scales\/xml\/parser\/pull\/XmlPull.html#parser:javax.xml.stream.XMLStreamReader", "kind" : "abstract val"}, {"member" : "scales.xml.parser.pull.XmlPull.Token", "error" : "unsupported entity"}], "shortDescription" : "Basis for xmlpulls, an Iterator[PullType]", "trait" : "scales\/xml\/parser\/pull\/XmlPull.html", "kind" : "trait"}, {"name" : "scales.xml.parser.pull.XmlPulls", "members_trait" : [{"label" : "toRight", "tail" : "(ev: EndElem): Right[Nothing, EndElem]", "member" : "scales.xml.parser.pull.XmlPulls.toRight", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#toRight(ev:scales.xml.EndElem):scala.util.Right[Nothing,scales.xml.EndElem]", "kind" : "implicit def"}, {"label" : "toLeft", "tail" : "(ev: XmlEvent): Left[XmlEvent, Nothing]", "member" : "scales.xml.parser.pull.XmlPulls.toLeft", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#toLeft(ev:scales.xml.XmlEvent):scala.util.Left[scales.xml.XmlEvent,Nothing]", "kind" : "implicit def"}, {"label" : "PullType", "tail" : "", "member" : "scales.xml.parser.pull.XmlPulls.PullType", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#PullType=Either[scales.xml.XmlEvent,scales.xml.EndElem]", "kind" : "type"}, {"label" : "pullXmlReader", "tail" : "(reader: XMLStreamReader, defaultOptimisationStrategy: MemoryOptimisationStrategy[RToken]): XmlPull", "member" : "scales.xml.parser.pull.XmlPulls.pullXmlReader", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#pullXmlReader[RToken<:scales.xml.parser.strategies.OptimisationToken](reader:javax.xml.stream.XMLStreamReader,defaultOptimisationStrategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[RToken]):scales.xml.parser.pull.XmlPull", "kind" : "def"}, {"label" : "pullXml", "tail" : "(source: InputSource, optimisationStrategy: MemoryOptimisationStrategy[RToken], parserFactoryPool: Pool[XMLInputFactory], closeAfterUse: Boolean, strictPath: List[QName]): XmlPull with Closeable with IsClosed", "member" : "scales.xml.parser.pull.XmlPulls.pullXml", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#pullXml[RToken<:scales.xml.parser.strategies.OptimisationToken](source:org.xml.sax.InputSource,optimisationStrategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[RToken],parserFactoryPool:scales.utils.resources.Pool[javax.xml.stream.XMLInputFactory],closeAfterUse:Boolean,strictPath:List[scales.xml.QName]):scales.xml.parser.pull.XmlPullwithjava.io.Closeablewithscales.utils.resources.IsClosed", "kind" : "def"}, {"label" : "pullXmlResource", "tail" : "(source: InputSource, optimisationStrategy: MemoryOptimisationStrategy[RToken], parserFactoryPool: Pool[XMLInputFactory]): (CloseOnNeed, XmlPull)", "member" : "scales.xml.parser.pull.XmlPulls.pullXmlResource", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#pullXmlResource[RToken<:scales.xml.parser.strategies.OptimisationToken](source:org.xml.sax.InputSource,optimisationStrategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[RToken],parserFactoryPool:scales.utils.resources.Pool[javax.xml.stream.XMLInputFactory]):(scales.utils.resources.CloseOnNeed,scales.xml.parser.pull.XmlPull)", "kind" : "def"}, {"label" : "toTree", "tail" : "(pull: Iterator[PullType], strategy: PathOptimisationStrategy[RToken]): xml.XmlTree", "member" : "scales.xml.parser.pull.XmlPulls.toTree", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#toTree[RToken<:scales.xml.parser.strategies.OptimisationToken](pull:Iterator[XmlPulls.this.PullType],strategy:scales.xml.parser.strategies.PathOptimisationStrategy[RToken]):scales.xml.XmlTree", "kind" : "def"}, {"label" : "pullXmlCompletely", "tail" : "(source: InputSource, strategy: PathOptimisationStrategy[RToken], parserFactoryPool: Pool[XMLInputFactory], closeAfterUse: Boolean): Doc", "member" : "scales.xml.parser.pull.XmlPulls.pullXmlCompletely", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#pullXmlCompletely[RToken<:scales.xml.parser.strategies.OptimisationToken](source:org.xml.sax.InputSource,strategy:scales.xml.parser.strategies.PathOptimisationStrategy[RToken],parserFactoryPool:scales.utils.resources.Pool[javax.xml.stream.XMLInputFactory],closeAfterUse:Boolean):scales.xml.Doc", "kind" : "def"}, {"label" : "sourceUser", "tail" : "(source: InputSource): SourceUser with Product with Serializable", "member" : "scales.xml.parser.pull.XmlPulls.sourceUser", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#sourceUser(source:org.xml.sax.InputSource):scales.xml.parser.pull.SourceUserwithProductwithSerializable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/pull\/XmlPulls.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Wraps the stax cursor inteface (iterator just adds weight here).", "trait" : "scales\/xml\/parser\/pull\/XmlPulls.html", "kind" : "trait"}], "scales.xml.parser" : [], "scales.xml.impl" : [{"name" : "scales.xml.impl.DefaultDOMFactoryPool", "shortDescription" : "Default DOMFactory impl", "object" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html", "members_object" : [{"label" : "parsers", "tail" : ": Loaner[DocumentBuilder]", "member" : "scales.xml.impl.DefaultDOMFactoryPool.parsers", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#parsers:scales.utils.resources.Loaner[javax.xml.parsers.DocumentBuilder]", "kind" : "val"}, {"label" : "create", "tail" : "(): DocumentBuilderFactory", "member" : "scales.xml.impl.DefaultDOMFactoryPool.create", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#create:javax.xml.parsers.DocumentBuilderFactory", "kind" : "def"}, {"label" : "loan", "tail" : "(tThunk: (DocumentBuilderFactory) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): DocumentBuilderFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: DocumentBuilderFactory): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): DocumentBuilderFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultDOMFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.DefaultHashes", "shortDescription" : "", "object" : "scales\/xml\/impl\/DefaultHashes$.html", "members_object" : [{"label" : "emptyNamespacesHash", "tail" : ": Int", "member" : "scales.xml.impl.DefaultHashes.emptyNamespacesHash", "link" : "scales\/xml\/impl\/DefaultHashes$.html#emptyNamespacesHash:Int", "kind" : "val"}, {"label" : "emptyAttributesHash", "tail" : ": Int", "member" : "scales.xml.impl.DefaultHashes.emptyAttributesHash", "link" : "scales\/xml\/impl\/DefaultHashes$.html#emptyAttributesHash:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultHashes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultHashes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultHashes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultHashes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultHashes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultHashes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultHashes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultHashes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultHashes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultHashes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultHashes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultHashes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultHashes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultHashes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultHashes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultHashes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultHashes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultHashes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultHashes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.DefaultSAXParserFactoryPool", "shortDescription" : "Default SAXParser Factory", "object" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html", "members_object" : [{"label" : "parsers", "tail" : ": Loaner[SAXParser] with DefaultSaxSupport", "member" : "scales.xml.impl.DefaultSAXParserFactoryPool.parsers", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#parsers:scales.utils.resources.Loaner[javax.xml.parsers.SAXParser]withscales.xml.parser.sax.DefaultSaxSupport", "kind" : "val"}, {"label" : "create", "tail" : "(): SAXParserFactory", "member" : "scales.xml.impl.DefaultSAXParserFactoryPool.create", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#create:javax.xml.parsers.SAXParserFactory", "kind" : "def"}, {"label" : "loan", "tail" : "(tThunk: (SAXParserFactory) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): SAXParserFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: SAXParserFactory): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): SAXParserFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultSAXParserFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.DefaultStaxInputFactoryPool", "shortDescription" : "Default StaxInputFactory impl", "object" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html", "members_object" : [{"label" : "create", "tail" : "(): XMLInputFactory", "member" : "scales.xml.impl.DefaultStaxInputFactoryPool.create", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#create:javax.xml.stream.XMLInputFactory", "kind" : "def"}, {"label" : "cdata", "tail" : ": String", "member" : "scales.xml.impl.DefaultStaxInputFactoryPool.cdata", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#cdata:String", "kind" : "val"}, {"label" : "loan", "tail" : "(tThunk: (XMLInputFactory) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): XMLInputFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: XMLInputFactory): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): XMLInputFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultStaxInputFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.DefaultXMLReaderFactoryPool", "shortDescription" : "Default XMLReader Factory", "object" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html", "members_object" : [{"label" : "create", "tail" : "(): XMLReader", "member" : "scales.xml.impl.DefaultXMLReaderFactoryPool.create", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#create:org.xml.sax.XMLReader", "kind" : "def"}, {"label" : "getXmlVersion", "tail" : "(reader: XMLReader): AnyRef", "member" : "scales.xml.parser.sax.DefaultSaxSupport.getXmlVersion", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#getXmlVersion(reader:org.xml.sax.XMLReader):AnyRef", "kind" : "def"}, {"label" : "setLexicalHandler", "tail" : "(reader: XMLReader, handler: Handler[T]): Unit", "member" : "scales.xml.parser.sax.DefaultSaxSupport.setLexicalHandler", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#setLexicalHandler[T<:scales.xml.parser.strategies.OptimisationToken](reader:org.xml.sax.XMLReader,handler:scales.xml.parser.sax.Handler[T]):Unit", "kind" : "def"}, {"label" : "loan", "tail" : "(tThunk: (XMLReader) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): XMLReader", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: XMLReader): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): XMLReader", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultXMLReaderFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.DefaultXmlVersion", "members_trait" : [{"label" : "defaultVersion", "tail" : ": XmlVersion", "member" : "scales.xml.impl.DefaultXmlVersion.defaultVersion", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#defaultVersion:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultXmlVersion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/DefaultXmlVersion.html", "kind" : "trait"}, {"name" : "scales.xml.impl.DefaultXSDSchemaFactoryPool", "shortDescription" : "Default XSD SchemaFactory impl", "object" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html", "members_object" : [{"label" : "create", "tail" : "(): SchemaFactory", "member" : "scales.xml.impl.DefaultXSDSchemaFactoryPool.create", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#create:javax.xml.validation.SchemaFactory", "kind" : "def"}, {"label" : "loan", "tail" : "(tThunk: (SchemaFactory) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): SchemaFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: SchemaFactory): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): SchemaFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DefaultXSDSchemaFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.DocsUp", "shortDescription" : "exists only to provide Jaxen and JXPath with the same document root", "members_case class" : [{"member" : "scales.xml.impl.DocsUp#<init>", "error" : "unsupported entity"}, {"label" : "docroot", "tail" : ": DocumentRoot", "member" : "scales.xml.impl.DocsUp.docroot", "link" : "scales\/xml\/impl\/DocsUp.html#docroot:scales.xml.impl.DocumentRoot", "kind" : "val"}, {"label" : "what", "tail" : ": WHAT", "member" : "scales.xml.impl.DocsUp.what", "link" : "scales\/xml\/impl\/DocsUp.html#what:WHAT", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DocsUp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DocsUp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DocsUp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DocsUp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DocsUp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DocsUp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DocsUp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DocsUp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DocsUp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DocsUp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DocsUp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DocsUp.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DocsUp.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DocsUp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DocsUp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DocsUp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/impl\/DocsUp.html", "kind" : "case class"}, {"name" : "scales.xml.impl.DocumentRoot", "shortDescription" : "exists only to provide Jaxen and JXPath with a document \"root\"", "members_case class" : [{"member" : "scales.xml.impl.DocumentRoot#<init>", "error" : "unsupported entity"}, {"label" : "xmlPath", "tail" : ": xml.XmlPath", "member" : "scales.xml.impl.DocumentRoot.xmlPath", "link" : "scales\/xml\/impl\/DocumentRoot.html#xmlPath:scales.xml.XmlPath", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/DocumentRoot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/DocumentRoot.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/DocumentRoot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/DocumentRoot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/DocumentRoot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/DocumentRoot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/DocumentRoot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DocumentRoot.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DocumentRoot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/DocumentRoot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/DocumentRoot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/DocumentRoot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/DocumentRoot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/DocumentRoot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/DocumentRoot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/DocumentRoot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/impl\/DocumentRoot.html", "kind" : "case class"}, {"name" : "scales.xml.impl.ElemKey", "shortDescription" : "Allows quick lookups without creating elements, only use via copy and then don't change it", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.impl.ElemKey.hashCode", "link" : "scales\/xml\/impl\/ElemKey.html#hashCode():Int", "kind" : "def"}, {"label" : "lastHash", "tail" : ": Int", "member" : "scales.xml.impl.ElemKey.lastHash", "link" : "scales\/xml\/impl\/ElemKey.html#lastHash:Int", "kind" : "var"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.impl.ElemKey.equals", "link" : "scales\/xml\/impl\/ElemKey.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(): ElemKey", "member" : "scales.xml.impl.ElemKey.copy", "link" : "scales\/xml\/impl\/ElemKey.html#copy:scales.xml.impl.ElemKey", "kind" : "def"}, {"label" : "set", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], nameHash: Int): ElemKey", "member" : "scales.xml.impl.ElemKey.set", "link" : "scales\/xml\/impl\/ElemKey.html#set(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],nameHash:Int):scales.xml.impl.ElemKey", "kind" : "def"}, {"label" : "namespaces", "tail" : ": Map[String, String]", "member" : "scales.xml.impl.ElemKey.namespaces", "link" : "scales\/xml\/impl\/ElemKey.html#namespaces:Map[String,String]", "kind" : "var"}, {"label" : "attributes", "tail" : ": xml.Attributes", "member" : "scales.xml.impl.ElemKey.attributes", "link" : "scales\/xml\/impl\/ElemKey.html#attributes:scales.xml.Attributes", "kind" : "var"}, {"label" : "nameHash", "tail" : ": Int", "member" : "scales.xml.impl.ElemKey.nameHash", "link" : "scales\/xml\/impl\/ElemKey.html#nameHash:Int", "kind" : "var"}, {"label" : "name", "tail" : ": QName", "member" : "scales.xml.impl.ElemKey.name", "link" : "scales\/xml\/impl\/ElemKey.html#name:scales.xml.QName", "kind" : "var"}, {"member" : "scales.xml.impl.ElemKey#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/ElemKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/ElemKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/ElemKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/ElemKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/ElemKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/ElemKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/ElemKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ElemKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ElemKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ElemKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/ElemKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/ElemKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/ElemKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/ElemKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/ElemKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/ElemKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/ElemKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/impl\/ElemKey.html", "kind" : "class"}, {"name" : "scales.xml.impl.EqualsHelpers", "shortDescription" : "Needed to help with cyclic issues in multi threaded MODULE$ access, after startup no problem, but we can't gaurantee that.", "object" : "scales\/xml\/impl\/EqualsHelpers$.html", "members_object" : [{"label" : "toQNameF", "tail" : ": (Attribute) ⇒ QName", "member" : "scales.xml.impl.EqualsHelpers.toQNameF", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#toQNameF:scales.xml.Attribute=>scales.xml.QName", "kind" : "implicit val"}, {"label" : "toQName", "tail" : "(attribQName: xml.AttributeQName): QName", "member" : "scales.xml.impl.EqualsHelpers.toQName", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#toQName(attribQName:scales.xml.AttributeQName):scales.xml.QName", "kind" : "implicit def"}, {"label" : "qnameEquiv", "tail" : ": Equiv[QName]", "member" : "scales.xml.impl.EqualsHelpers.qnameEquiv", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#qnameEquiv:scales.utils.Equiv[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "aqnameEqual", "tail" : ": Equal[Attribute]", "member" : "scales.xml.impl.EqualsHelpers.aqnameEqual", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#aqnameEqual:scalaz.Equal[scales.xml.Attribute]", "kind" : "implicit val"}, {"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.equals.DefaultQNameEquals.qnameEqual", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/EqualsHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/EqualsHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.ExtraTypesImplicits", "shortDescription" : "", "object" : "scales\/xml\/impl\/ExtraTypesImplicits$.html", "members_object" : [{"label" : "toAttrN", "tail" : ": (xml.AttributeQName) ⇒ Attribute", "member" : "scales.xml.impl.ExtraTypesImplicits.toAttrN", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#toAttrN:scales.xml.AttributeQName=>scales.xml.Attribute", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/ExtraTypesImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.FromParser", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/FromParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/FromParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/FromParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/FromParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/FromParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/FromParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/FromParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/FromParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/FromParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/FromParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/FromParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/FromParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/FromParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/FromParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/FromParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/FromParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/FromParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/FromParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/FromParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Indicates if the Scales code is being called from within a parser or not.", "trait" : "scales\/xml\/impl\/FromParser.html", "kind" : "trait"}, {"name" : "scales.xml.impl.FullEqualQNameKey", "shortDescription" : "Provides a key that also checks ===, used in caching where youwant to remove all collision possibilities.", "members_class" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.impl.FullEqualQNameKey.hashCode", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#hashCode():Int", "kind" : "def"}, {"label" : "lastHash", "tail" : ": Int", "member" : "scales.xml.impl.FullEqualQNameKey.lastHash", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#lastHash:Int", "kind" : "var"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.impl.FullEqualQNameKey.equals", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "=:=", "tail" : "(other: FullEqualQNameKey): Boolean", "member" : "scales.xml.impl.FullEqualQNameKey.=:=", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#=:=(other:scales.xml.impl.FullEqualQNameKey):Boolean", "kind" : "def"}, {"label" : "setPrefixedQName", "tail" : "(nlocal: String, nnamespace: String, nprefix: String): FullEqualQNameKey", "member" : "scales.xml.impl.FullEqualQNameKey.setPrefixedQName", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#setPrefixedQName(nlocal:String,nnamespace:String,nprefix:String):scales.xml.impl.FullEqualQNameKey", "kind" : "def"}, {"label" : "setUnprefixedQName", "tail" : "(nlocal: String, nnamespace: String): FullEqualQNameKey", "member" : "scales.xml.impl.FullEqualQNameKey.setUnprefixedQName", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#setUnprefixedQName(nlocal:String,nnamespace:String):scales.xml.impl.FullEqualQNameKey", "kind" : "def"}, {"label" : "setNoNamespaceQName", "tail" : "(nlocal: String): FullEqualQNameKey", "member" : "scales.xml.impl.FullEqualQNameKey.setNoNamespaceQName", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#setNoNamespaceQName(nlocal:String):scales.xml.impl.FullEqualQNameKey", "kind" : "def"}, {"label" : "set", "tail" : "(qname: QName): FullEqualQNameKey", "member" : "scales.xml.impl.FullEqualQNameKey.set", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#set(qname:scales.xml.QName):scales.xml.impl.FullEqualQNameKey", "kind" : "def"}, {"label" : "copy", "tail" : "(): FullEqualQNameKey", "member" : "scales.xml.impl.FullEqualQNameKey.copy", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#copy:scales.xml.impl.FullEqualQNameKey", "kind" : "def"}, {"label" : "namespace", "tail" : ": String", "member" : "scales.xml.impl.FullEqualQNameKey.namespace", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#namespace:String", "kind" : "var"}, {"label" : "local", "tail" : ": String", "member" : "scales.xml.impl.FullEqualQNameKey.local", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#local:String", "kind" : "var"}, {"label" : "prefix", "tail" : ": String", "member" : "scales.xml.impl.FullEqualQNameKey.prefix", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#prefix:String", "kind" : "var"}, {"member" : "scales.xml.impl.FullEqualQNameKey#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/FullEqualQNameKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/impl\/FullEqualQNameKey.html", "kind" : "class"}, {"name" : "scales.xml.impl.NameCreators", "shortDescription" : "Given an optimisation strategy create QNames for elements and attributes.", "object" : "scales\/xml\/impl\/NameCreators$.html", "members_object" : [{"label" : "aqn", "tail" : "(uri: String, localName: String, qName: String, strategy: MemoryOptimisationStrategy[Token], token: Token): xml.AttributeQName", "member" : "scales.xml.impl.NameCreators.aqn", "link" : "scales\/xml\/impl\/NameCreators$.html#aqn[Token<:scales.xml.parser.strategies.OptimisationToken](uri:String,localName:String,qName:String,strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[Token],token:Token):scales.xml.AttributeQName", "kind" : "def"}, {"label" : "eqn", "tail" : "(uri: String, localName: String, qName: String, strategy: MemoryOptimisationStrategy[Token], token: Token): QName", "member" : "scales.xml.impl.NameCreators.eqn", "link" : "scales\/xml\/impl\/NameCreators$.html#eqn[Token<:scales.xml.parser.strategies.OptimisationToken](uri:String,localName:String,qName:String,strategy:scales.xml.parser.strategies.MemoryOptimisationStrategy[Token],token:Token):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/NameCreators$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/NameCreators$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/NameCreators$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/NameCreators$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/NameCreators$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/NameCreators$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/NameCreators$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NameCreators$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NameCreators$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NameCreators$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/NameCreators$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/NameCreators$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/NameCreators$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/NameCreators$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/NameCreators$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/NameCreators$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/NameCreators$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/NameCreators$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/NameCreators$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.NamespaceDefaults", "shortDescription" : "", "object" : "scales\/xml\/impl\/NamespaceDefaults$.html", "members_object" : [{"label" : "noNamespace", "tail" : ": EmptyNamespace.type", "member" : "scales.xml.impl.NamespaceDefaults.noNamespace", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#noNamespace:scales.xml.EmptyNamespace.type", "kind" : "val"}, {"label" : "namespace", "tail" : ": Namespace", "member" : "scales.xml.impl.NamespaceDefaults.namespace", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#namespace:scales.xml.Namespace", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/NamespaceDefaults$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.NotFromParser", "shortDescription" : "NotFromParser may be used explicitly to provide a FromParser instance in user code.", "object" : "scales\/xml\/impl\/NotFromParser$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/NotFromParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/NotFromParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/NotFromParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/NotFromParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/NotFromParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/NotFromParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/NotFromParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NotFromParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NotFromParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NotFromParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/NotFromParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/NotFromParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/NotFromParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/NotFromParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/NotFromParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/NotFromParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/NotFromParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.NoVersionSAXParserFactoryPool", "shortDescription" : "SAXParser Factory without version support", "object" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html", "members_object" : [{"label" : "parsers", "tail" : ": Loaner[SAXParser] with DefaultSaxSupport", "member" : "scales.xml.impl.NoVersionSAXParserFactoryPool.parsers", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#parsers:scales.utils.resources.Loaner[javax.xml.parsers.SAXParser]withscales.xml.parser.sax.DefaultSaxSupport", "kind" : "val"}, {"label" : "create", "tail" : "(): SAXParserFactory", "member" : "scales.xml.impl.NoVersionSAXParserFactoryPool.create", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#create:javax.xml.parsers.SAXParserFactory", "kind" : "def"}, {"label" : "loan", "tail" : "(tThunk: (SAXParserFactory) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): SAXParserFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: SAXParserFactory): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): SAXParserFactory", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/NoVersionSAXParserFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.NoVersionXmlReaderFactoryPool", "shortDescription" : "Aalto and others don't support getting the xml version, if your parser doesn't you could use loadXmlReader with this pool directly.", "object" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html", "members_object" : [{"label" : "create", "tail" : "(): XMLReader", "member" : "scales.xml.impl.NoVersionXmlReaderFactoryPool.create", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#create:org.xml.sax.XMLReader", "kind" : "def"}, {"label" : "getXmlVersion", "tail" : "(reader: XMLReader): AnyRef", "member" : "scales.xml.impl.NoVersionXmlReaderFactoryPool.getXmlVersion", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#getXmlVersion(reader:org.xml.sax.XMLReader):AnyRef", "kind" : "def"}, {"label" : "setLexicalHandler", "tail" : "(reader: XMLReader, handler: Handler[T]): Unit", "member" : "scales.xml.parser.sax.DefaultSaxSupport.setLexicalHandler", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#setLexicalHandler[T<:scales.xml.parser.strategies.OptimisationToken](reader:org.xml.sax.XMLReader,handler:scales.xml.parser.sax.Handler[T]):Unit", "kind" : "def"}, {"label" : "loan", "tail" : "(tThunk: (XMLReader) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): XMLReader", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: XMLReader): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): XMLReader", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/NoVersionXmlReaderFactoryPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.QNameCharUtils", "shortDescription" : "Follows the XML 1.0 spec and XML 1.1 spec, all underlying code provided by a copied version of the Xerces libs.", "object" : "scales\/xml\/impl\/QNameCharUtils$.html", "members_object" : [{"label" : "validateLocalName", "tail" : "(validLocal: String)(ver: XmlVersion): String", "member" : "scales.xml.impl.QNameCharUtils.validateLocalName", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#validateLocalName(validLocal:String)(implicitver:scales.xml.XmlVersion):String", "kind" : "def"}, {"label" : "validXmlNamespace", "tail" : "(namespace: String)(ver: XmlVersion): Boolean", "member" : "scales.xml.impl.QNameCharUtils.validXmlNamespace", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#validXmlNamespace(namespace:String)(implicitver:scales.xml.XmlVersion):Boolean", "kind" : "def"}, {"label" : "validXmlPrefix", "tail" : "(prefix: String)(ver: XmlVersion): Boolean", "member" : "scales.xml.impl.QNameCharUtils.validXmlPrefix", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#validXmlPrefix(prefix:String)(implicitver:scales.xml.XmlVersion):Boolean", "kind" : "def"}, {"label" : "validXmlName", "tail" : "(name: String)(ver: XmlVersion): Boolean", "member" : "scales.xml.impl.QNameCharUtils.validXmlName", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#validXmlName(name:String)(implicitver:scales.xml.XmlVersion):Boolean", "kind" : "def"}, {"label" : "validLocalName", "tail" : "(name: String)(ver: XmlVersion): Boolean", "member" : "scales.xml.impl.QNameCharUtils.validLocalName", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#validLocalName(name:String)(implicitver:scales.xml.XmlVersion):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/QNameCharUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/QNameCharUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.QNameImplicits", "members_trait" : [{"label" : "localStringToNSBuilder", "tail" : "(local: String)(ver: XmlVersion, fromParser: FromParser): StringToNSBuilder", "member" : "scales.xml.impl.QNameImplicits.localStringToNSBuilder", "link" : "scales\/xml\/impl\/QNameImplicits.html#localStringToNSBuilder(local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.impl.StringToNSBuilder", "kind" : "implicit def"}, {"label" : "stringToNoNamespace", "tail" : "(localOnly: String)(ver: XmlVersion, fromParser: FromParser): NoNamespaceQName", "member" : "scales.xml.impl.QNameImplicits.stringToNoNamespace", "link" : "scales\/xml\/impl\/QNameImplicits.html#stringToNoNamespace(localOnly:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.NoNamespaceQName", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/QNameImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/QNameImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/QNameImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/QNameImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/QNameImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/QNameImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/QNameImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/QNameImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/QNameImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/QNameImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/QNameImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/QNameImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/QNameImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/QNameImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/QNameImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/QNameImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/QNameImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/QNameImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/QNameImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/QNameImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.impl.ScalesXmlImplicits", "members_trait" : [{"label" : "ComparisonContextNames", "tail" : "", "member" : "scales.xml.equals.ComparisonContextImplicits.ComparisonContextNames", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#ComparisonContextNames", "kind" : "implicit object"}, {"label" : "BasicPathNames", "tail" : "", "member" : "scales.xml.equals.ComparisonContextImplicits.BasicPathNames", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#BasicPathNames", "kind" : "implicit object"}, {"label" : "DeclarationConverter", "tail" : "", "member" : "scales.xml.serializers.XmlPrinterImplicits.DeclarationConverter", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#DeclarationConverterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ToScales", "tail" : "", "member" : "scales.xml.impl.XmlUtilsImplicits.ToScales", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#ToScalesextendsAnyRef", "kind" : "class"}, {"label" : "fromCompToEq", "tail" : "(comp: XmlComparison[T]): Equal[T]", "member" : "scales.xml.equals.FromEqualsImplicit.fromCompToEq", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromCompToEq[T](implicitcomp:scales.xml.equals.XmlComparison[T]):scalaz.Equal[T]", "kind" : "implicit def"}, {"label" : "itrDocLikeWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[(Iterator[xml.PullType], DocLike)]", "member" : "scales.xml.equals.StreamComparableImplicits.itrDocLikeWrapper", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#itrDocLikeWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[(Iterator[scales.xml.PullType],scales.xml.DocLike)]", "kind" : "implicit def"}, {"label" : "closeablePullWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[xml.CloseablePull]", "member" : "scales.xml.equals.StreamComparableImplicits.closeablePullWrapper", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#closeablePullWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[scales.xml.CloseablePull]", "kind" : "implicit def"}, {"label" : "xmlPullWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[XmlPull]", "member" : "scales.xml.equals.StreamComparableImplicits.xmlPullWrapper", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xmlPullWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[scales.xml.XmlPull]", "kind" : "implicit def"}, {"label" : "docWrapper", "tail" : "(bodyComp: XmlComparison[xml.XmlTree]): DocLikeWrapper[Doc]", "member" : "scales.xml.equals.StreamComparableImplicits.docWrapper", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#docWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[scales.xml.XmlTree]):scales.xml.equals.DocLikeWrapper[scales.xml.Doc]", "kind" : "implicit def"}, {"label" : "itrDocLikeToStreamComparable", "tail" : "(t: (T, DocLike))(arg0: (T) ⇒ Iterator[xml.PullType]): StreamComparable[T]", "member" : "scales.xml.equals.StreamComparableImplicits.itrDocLikeToStreamComparable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#itrDocLikeToStreamComparable[T](t:(T,scales.xml.DocLike))(implicitevidence$4:T=>Iterator[scales.xml.PullType]):scales.xml.equals.StreamComparable[T]", "kind" : "implicit def"}, {"label" : "fromStreamToStreamComparable", "tail" : "(t: T)(arg0: (T) ⇒ Iterator[xml.PullType]): StreamComparable[T]", "member" : "scales.xml.equals.StreamComparableImplicits.fromStreamToStreamComparable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromStreamToStreamComparable[T](t:T)(implicitevidence$3:T=>Iterator[scales.xml.PullType]):scales.xml.equals.StreamComparable[T]", "kind" : "implicit def"}, {"label" : "xmlPathToComparable", "tail" : ": (xml.XmlPath) ⇒ StreamComparable[xml.XmlPath]", "member" : "scales.xml.equals.StreamComparableImplicits.xmlPathToComparable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xmlPathToComparable:scales.xml.XmlPath=>scales.xml.equals.StreamComparable[scales.xml.XmlPath]", "kind" : "implicit val"}, {"label" : "itrPlusDocAsAnIterator", "tail" : ": ((Iterator[xml.PullType], DocLike)) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.StreamComparableImplicits.itrPlusDocAsAnIterator", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#itrPlusDocAsAnIterator:((Iterator[scales.xml.PullType],scales.xml.DocLike))=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "xmlPullIsAn", "tail" : ": (XmlPull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.xmlPullIsAn", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xmlPullIsAn:scales.xml.XmlPull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "closeablePullIsAn", "tail" : ": (xml.CloseablePull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.closeablePullIsAn", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#closeablePullIsAn:scales.xml.CloseablePull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "defaultDocLikeComparison", "tail" : "(ic: XmlComparison[XmlItem], docWrapper: DocLikeWrapper[T]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultDocLikeEquals.defaultDocLikeComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultDocLikeComparison[T](implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitdocWrapper:scales.xml.equals.DocLikeWrapper[T]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "dslToStream", "tail" : "(ds: DslBuilder): Iterator[xml.PullType]", "member" : "scales.xml.trax.PullTypeConversionImplicits.dslToStream", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#dslToStream(ds:scales.xml.dsl.DslBuilder):Iterator[scales.xml.PullType]", "kind" : "implicit def"}, {"label" : "treeToStream", "tail" : "(tree: xml.XmlTree): Iterator[xml.PullType]", "member" : "scales.xml.trax.PullTypeConversionImplicits.treeToStream", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#treeToStream(tree:scales.xml.XmlTree):Iterator[scales.xml.PullType]", "kind" : "implicit def"}, {"label" : "BooleanToBoolean", "tail" : ": (Boolean) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.BooleanToBoolean", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#BooleanToBoolean:Boolean=>Boolean", "kind" : "implicit val"}, {"label" : "NumberToBoolean", "tail" : ": (Number) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.NumberToBoolean", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#NumberToBoolean:Number=>Boolean", "kind" : "implicit val"}, {"label" : "StringToBoolean", "tail" : ": (String) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.StringToBoolean", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#StringToBoolean:String=>Boolean", "kind" : "implicit val"}, {"label" : "IterableToBoolean", "tail" : ": (Iterable[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.IterableToBoolean", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#IterableToBoolean:Iterable[_]=>Boolean", "kind" : "implicit val"}, {"label" : "AttributePathsToBoolean", "tail" : ": (xpath.AttributePaths[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.AttributePathsToBoolean", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#AttributePathsToBoolean:scales.xml.xpath.AttributePaths[_]=>Boolean", "kind" : "implicit val"}, {"label" : "XPathToBoolean", "tail" : ": (xpath.XPath[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.XPathToBoolean", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#XPathToBoolean:scales.xml.xpath.XPath[_]=>Boolean", "kind" : "implicit val"}, {"label" : "fromAPathToAComparisoms", "tail" : "(path: xpath.AttributePath): AttributePathComparisoms", "member" : "scales.xml.xpath.XmlPathImplicits.fromAPathToAComparisoms", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromAPathToAComparisoms(path:scales.xml.xpath.AttributePath):scales.xml.xpath.AttributePathComparisoms", "kind" : "implicit def"}, {"label" : "fromPathToComparisoms", "tail" : "(path: xml.XmlPath): XmlPathComparisoms", "member" : "scales.xml.xpath.XmlPathImplicits.fromPathToComparisoms", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromPathToComparisoms(path:scales.xml.XmlPath):scales.xml.xpath.XmlPathComparisoms", "kind" : "implicit def"}, {"label" : "fromAttributePathsToIterable", "tail" : "(attrs: xpath.AttributePaths[T]): Iterable[xpath.AttributePath]", "member" : "scales.xml.xpath.XmlPathImplicits.fromAttributePathsToIterable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromAttributePathsToIterable[T<:Iterable[scales.xml.XmlPath]](attrs:scales.xml.xpath.AttributePaths[T]):Iterable[scales.xml.xpath.AttributePath]", "kind" : "implicit def"}, {"label" : "fromXPathToIterable", "tail" : "(xpath: xpath.XPath[_]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XmlPathImplicits.fromXPathToIterable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromXPathToIterable(xpath:scales.xml.xpath.XPath[_]):Iterable[scales.xml.XmlPath]", "kind" : "implicit def"}, {"label" : "fromXmlPathToXPath", "tail" : "(xmlPath: xml.XmlPath)(cbf: CanBuildFrom[List[xml.XmlPath], xml.XmlPath, List[xml.XmlPath]]): xpath.XPath[List[xml.XmlPath]]", "member" : "scales.xml.xpath.XmlPathImplicits.fromXmlPathToXPath", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromXmlPathToXPath(xmlPath:scales.xml.XmlPath)(implicitcbf:scala.collection.generic.CanBuildFrom[List[scales.xml.XmlPath],scales.xml.XmlPath,List[scales.xml.XmlPath]]):scales.xml.xpath.XPath[List[scales.xml.XmlPath]]", "kind" : "implicit def"}, {"label" : "fromAttrPathToAttribute", "tail" : "(attrPath: xpath.AttributePath): Attribute", "member" : "scales.xml.xpath.XmlPathImplicits.fromAttrPathToAttribute", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromAttrPathToAttribute(attrPath:scales.xml.xpath.AttributePath):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "samePath", "tail" : ": (xml.XmlPath, xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.samePath", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#samePath:(scales.xml.XmlPath,scales.xml.XmlPath)=>Boolean", "kind" : "implicit val"}, {"label" : "xpathToNames", "tail" : "(): Names[xpath.XPath[T]]", "member" : "scales.xml.xpath.NamesImplicits.xpathToNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xpathToNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsNames", "tail" : "(): Names[xpath.AttributePaths[T]]", "member" : "scales.xml.xpath.NamesImplicits.attribPathsNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#attribPathsNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslNames", "tail" : ": DslNames.type", "member" : "scales.xml.xpath.NamesImplicits.dslNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#dslNames:scales.xml.xpath.DslNames.type", "kind" : "implicit val"}, {"label" : "aqnameNames", "tail" : ": AQNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.aqnameNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#aqnameNames:scales.xml.xpath.AQNameNames.type", "kind" : "implicit val"}, {"label" : "qnameNames", "tail" : ": QNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.qnameNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#qnameNames:scales.xml.xpath.QNameNames.type", "kind" : "implicit val"}, {"label" : "xtreeNames", "tail" : ": XmlTreeNames.type", "member" : "scales.xml.xpath.NamesImplicits.xtreeNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xtreeNames:scales.xml.xpath.XmlTreeNames.type", "kind" : "implicit val"}, {"label" : "elemNames", "tail" : ": ElemNames.type", "member" : "scales.xml.xpath.NamesImplicits.elemNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#elemNames:scales.xml.xpath.ElemNames.type", "kind" : "implicit val"}, {"label" : "xpathNames", "tail" : ": XmlPathNames.type", "member" : "scales.xml.xpath.NamesImplicits.xpathNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xpathNames:scales.xml.xpath.XmlPathNames.type", "kind" : "implicit val"}, {"label" : "attributePathNames", "tail" : ": AttributePathNames.type", "member" : "scales.xml.xpath.NamesImplicits.attributePathNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#attributePathNames:scales.xml.xpath.AttributePathNames.type", "kind" : "implicit val"}, {"label" : "attribNames", "tail" : ": AttributeNames.type", "member" : "scales.xml.xpath.NamesImplicits.attribNames", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#attribNames:scales.xml.xpath.AttributeNames.type", "kind" : "implicit val"}, {"label" : "dif", "tail" : ": DIF", "member" : "scales.xml.xpath.NamesImplicits.dif", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#dif:scales.xml.xpath.DIF", "kind" : "implicit val"}, {"label" : "xpathToTextValue", "tail" : "(): TextValue[xpath.XPath[T]]", "member" : "scales.xml.xpath.TextImplicits.xpathToTextValue", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xpathToTextValue[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsText", "tail" : "(): TextValue[xpath.AttributePaths[T]]", "member" : "scales.xml.xpath.TextImplicits.attribPathsText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#attribPathsText[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslText", "tail" : ": DslText.type", "member" : "scales.xml.xpath.TextImplicits.dslText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#dslText:scales.xml.xpath.DslText.type", "kind" : "implicit val"}, {"label" : "itemOrElemText", "tail" : ": ItemOrElemText.type", "member" : "scales.xml.xpath.TextImplicits.itemOrElemText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#itemOrElemText:scales.xml.xpath.ItemOrElemText.type", "kind" : "implicit val"}, {"label" : "itemText", "tail" : ": XmlItemText.type", "member" : "scales.xml.xpath.TextImplicits.itemText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#itemText:scales.xml.xpath.XmlItemText.type", "kind" : "implicit val"}, {"label" : "xmlpathText", "tail" : ": XmlPathText.type", "member" : "scales.xml.xpath.TextImplicits.xmlpathText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xmlpathText:scales.xml.xpath.XmlPathText.type", "kind" : "implicit val"}, {"label" : "attribPathText", "tail" : ": AttributePathText.type", "member" : "scales.xml.xpath.TextImplicits.attribPathText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#attribPathText:scales.xml.xpath.AttributePathText.type", "kind" : "implicit val"}, {"label" : "attribText", "tail" : ": AttributeText.type", "member" : "scales.xml.xpath.TextImplicits.attribText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#attribText:scales.xml.xpath.AttributeText.type", "kind" : "implicit val"}, {"label" : "xtreeText", "tail" : ": XmlTreeText.type", "member" : "scales.xml.xpath.TextImplicits.xtreeText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xtreeText:scales.xml.xpath.XmlTreeText.type", "kind" : "implicit val"}, {"label" : "toWithWriter", "tail" : "(decl: Declaration): DeclarationConverter", "member" : "scales.xml.serializers.XmlPrinterImplicits.toWithWriter", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toWithWriter(decl:scales.xml.Declaration):XmlPrinterImplicits.this.DeclarationConverter", "kind" : "implicit def"}, {"label" : "defaultSerializerFactory", "tail" : ": SerializerFactory", "member" : "scales.xml.serializers.XmlPrinterImplicits.defaultSerializerFactory", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultSerializerFactory:scales.xml.serializers.SerializerFactory", "kind" : "implicit val"}, {"label" : "fromSerializeableToWriteTo", "tail" : "(it: T)(arg0: SerializeableXml[T]): WriteTo[T]", "member" : "scales.xml.serializers.XmlPrinterImplicits.fromSerializeableToWriteTo", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromSerializeableToWriteTo[T](it:T)(implicitevidence$1:scales.xml.serializers.SerializeableXml[T]):scales.xml.serializers.WriteTo[T]", "kind" : "implicit def"}, {"label" : "pullAndDocSerializeable", "tail" : ": SerializeableXml[(Iterator[xml.PullType], DocLike)]", "member" : "scales.xml.serializers.SerializerImplicits.pullAndDocSerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#pullAndDocSerializeable:scales.xml.serializers.SerializeableXml[(Iterator[scales.xml.PullType],scales.xml.DocLike)]", "kind" : "implicit val"}, {"label" : "pullOnlySerializeable", "tail" : ": SerializeableXml[XmlPull]", "member" : "scales.xml.serializers.SerializerImplicits.pullOnlySerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#pullOnlySerializeable:scales.xml.serializers.SerializeableXml[scales.xml.XmlPull]", "kind" : "implicit val"}, {"label" : "pullCloseableOnlySerializeable", "tail" : ": SerializeableXml[xml.CloseablePull]", "member" : "scales.xml.serializers.SerializerImplicits.pullCloseableOnlySerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#pullCloseableOnlySerializeable:scales.xml.serializers.SerializeableXml[scales.xml.CloseablePull]", "kind" : "implicit val"}, {"label" : "streamSerializeable", "tail" : ": SerializeableXml[Iterator[xml.PullType]]", "member" : "scales.xml.serializers.SerializerImplicits.streamSerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#streamSerializeable:scales.xml.serializers.SerializeableXml[Iterator[scales.xml.PullType]]", "kind" : "implicit val"}, {"label" : "elemSerializable", "tail" : ": SerializeableXml[Elem]", "member" : "scales.xml.serializers.SerializerImplicits.elemSerializable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#elemSerializable:scales.xml.serializers.SerializeableXml[scales.xml.Elem]", "kind" : "implicit val"}, {"label" : "docSerializeable", "tail" : ": SerializeableXml[Doc]", "member" : "scales.xml.serializers.SerializerImplicits.docSerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#docSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.Doc]", "kind" : "implicit val"}, {"label" : "builderSerializeable", "tail" : ": SerializeableXml[DslBuilder]", "member" : "scales.xml.serializers.SerializerImplicits.builderSerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#builderSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.dsl.DslBuilder]", "kind" : "implicit val"}, {"label" : "treeSerializeable", "tail" : ": SerializeableXml[xml.XmlTree]", "member" : "scales.xml.serializers.SerializerImplicits.treeSerializeable", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#treeSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.XmlTree]", "kind" : "implicit val"}, {"label" : "docToSource", "tail" : "(doc: Doc)(serf: SerializerFactory, sf: SerializeableXml[Doc]): Source", "member" : "scales.xml.trax.TraxConversionImplicits.docToSource", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#docToSource(doc:scales.xml.Doc)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsf:scales.xml.serializers.SerializeableXml[scales.xml.Doc]):javax.xml.transform.Source", "kind" : "implicit def"}, {"label" : "treeToSource", "tail" : "(tree: xml.XmlTree)(serf: SerializerFactory, sf: SerializeableXml[xml.XmlTree]): Source", "member" : "scales.xml.trax.TraxConversionImplicits.treeToSource", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#treeToSource(tree:scales.xml.XmlTree)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsf:scales.xml.serializers.SerializeableXml[scales.xml.XmlTree]):javax.xml.transform.Source", "kind" : "implicit def"}, {"label" : "urlToSource", "tail" : "(url: URL): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.urlToSource", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#urlToSource(url:java.net.URL):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "readerToSource", "tail" : "(source: Reader): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.readerToSource", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#readerToSource(source:java.io.Reader):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "streamToSource", "tail" : "(source: InputStream): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.streamToSource", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#streamToSource(source:java.io.InputStream):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "fromOptionalDslToOptionalTree", "tail" : "(optionalDsl: OptionalDslBuilder): Option[xml.ItemOrElem]", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromOptionalDslToOptionalTree", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromOptionalDslToOptionalTree(optionalDsl:scales.xml.dsl.OptionalDslBuilder):Option[scales.xml.ItemOrElem]", "kind" : "implicit def"}, {"label" : "fromPQNameToOptionalAttribute", "tail" : "(name: xml.AttributeQName): OptionalAttribute", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromPQNameToOptionalAttribute", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromPQNameToOptionalAttribute(name:scales.xml.AttributeQName):scales.xml.dsl.OptionalAttribute", "kind" : "implicit def"}, {"label" : "fromTreeToODsl", "tail" : "(tree: xml.XmlTree): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromTreeToODsl", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromTreeToODsl(tree:scales.xml.XmlTree):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromQNameToOptionalBuilder", "tail" : "(qname: QName): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromQNameToOptionalBuilder", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromQNameToOptionalBuilder(qname:scales.xml.QName):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromElemToOptionalBuilder", "tail" : "(elem: Elem): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromElemToOptionalBuilder", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromElemToOptionalBuilder(elem:scales.xml.Elem):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromNSToNSMPimper", "tail" : "(ns: Namespace): NSMPimper", "member" : "scales.xml.dsl.DslImplicits.fromNSToNSMPimper", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromNSToNSMPimper(ns:scales.xml.Namespace):scales.xml.dsl.NSMPimper", "kind" : "implicit def"}, {"label" : "fromTreeToDsl", "tail" : "(tree: xml.XmlTree): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromTreeToDsl", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromTreeToDsl(tree:scales.xml.XmlTree):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "fromQNameToQNamePimper", "tail" : "(qname: QName): QNameMPimper", "member" : "scales.xml.dsl.DslImplicits.fromQNameToQNamePimper", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromQNameToQNamePimper(qname:scales.xml.QName):scales.xml.dsl.QNameMPimper", "kind" : "implicit def"}, {"label" : "fromQNameToBuilder", "tail" : "(qname: QName): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromQNameToBuilder", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromQNameToBuilder(qname:scales.xml.QName):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "fromStringToText", "tail" : "(value: String): Text", "member" : "scales.xml.dsl.DslImplicits.fromStringToText", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromStringToText(value:String):scales.xml.Text", "kind" : "implicit def"}, {"label" : "fromElemToTree", "tail" : "(elem: Elem): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromElemToTree", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromElemToTree(elem:scales.xml.Elem):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromQNameToTree", "tail" : "(qname: QName): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromQNameToTree", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromQNameToTree(qname:scales.xml.QName):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromDslBuilderToTree", "tail" : "(dslB: DslBuilder): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromDslBuilderToTree", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromDslBuilderToTree(dslB:scales.xml.dsl.DslBuilder):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromQNamePairToAttribute", "tail" : "(pair: (PrefixedQName, String)): Attribute", "member" : "scales.xml.dsl.DslImplicits.fromQNamePairToAttribute", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromQNamePairToAttribute(pair:(scales.xml.PrefixedQName,String)):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "fromElemToBuilder", "tail" : "(elem: Elem): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromElemToBuilder", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromElemToBuilder(elem:scales.xml.Elem):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "toScalesXml", "tail" : "(elem: scala.xml.Elem)(xmlVer: XmlVersion): ToScales", "member" : "scales.xml.impl.XmlUtilsImplicits.toScalesXml", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toScalesXml(elem:scala.xml.Elem)(implicitxmlVer:scales.xml.XmlVersion):XmlUtilsImplicits.this.ToScales", "kind" : "implicit def"}, {"label" : "localStringToNSBuilder", "tail" : "(local: String)(ver: XmlVersion, fromParser: FromParser): StringToNSBuilder", "member" : "scales.xml.impl.QNameImplicits.localStringToNSBuilder", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#localStringToNSBuilder(local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.impl.StringToNSBuilder", "kind" : "implicit def"}, {"label" : "stringToNoNamespace", "tail" : "(localOnly: String)(ver: XmlVersion, fromParser: FromParser): NoNamespaceQName", "member" : "scales.xml.impl.QNameImplicits.stringToNoNamespace", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#stringToNoNamespace(localOnly:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.NoNamespaceQName", "kind" : "implicit def"}, {"label" : "defaultVersion", "tail" : ": XmlVersion", "member" : "scales.xml.impl.DefaultXmlVersion.defaultVersion", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#defaultVersion:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "toAttrS", "tail" : "(local: String)(ver: XmlVersion): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrS", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toAttrS(local:String)(implicitver:scales.xml.XmlVersion):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "fromParserDefault", "tail" : ": FromParser", "member" : "scales.xml.impl.XmlTypesImplicits.fromParserDefault", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#fromParserDefault:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "xpathSortingClassManifest", "tail" : ": ClassManifest[(Position[XmlItem, Elem, xml.XCC], xml.XmlPath)]", "member" : "scales.xml.impl.XmlTypesImplicits.xpathSortingClassManifest", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#xpathSortingClassManifest:reflect.ClassManifest[(scales.utils.collection.path.Position[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XmlPath)]", "kind" : "implicit val"}, {"label" : "docToTree", "tail" : "(doc: Doc): xml.XmlTree", "member" : "scales.xml.impl.XmlTypesImplicits.docToTree", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#docToTree(doc:scales.xml.Doc):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "aqpairToAttribute", "tail" : "(pair: (xml.AttributeQName, String)): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.aqpairToAttribute", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#aqpairToAttribute(pair:(scales.xml.AttributeQName,String)):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "toQName", "tail" : "(attribQName: xml.AttributeQName): QName", "member" : "scales.xml.impl.XmlTypesImplicits.toQName", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toQName(attribQName:scales.xml.AttributeQName):scales.xml.QName", "kind" : "implicit def"}, {"label" : "qnameEquiv", "tail" : ": Equiv[QName]", "member" : "scales.xml.impl.XmlTypesImplicits.qnameEquiv", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#qnameEquiv:scales.utils.Equiv[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "toQNameF", "tail" : ": (Attribute) ⇒ QName", "member" : "scales.xml.impl.XmlTypesImplicits.toQNameF", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toQNameF:scales.xml.Attribute=>scales.xml.QName", "kind" : "implicit val"}, {"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.impl.XmlTypesImplicits.qnameEqual", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "toAttr", "tail" : "(pair: (String, String))(ver: XmlVersion, fromParser: FromParser): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.toAttr", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toAttr(pair:(String,String))(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "toAttrQNameP", "tail" : "(prens: PrefixedQName): xml.AttributeQName", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrQNameP", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toAttrQNameP(prens:scales.xml.PrefixedQName):scales.xml.AttributeQName", "kind" : "implicit def"}, {"label" : "toAttrQNameN", "tail" : "(nons: NoNamespaceQName): xml.AttributeQName", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrQNameN", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toAttrQNameN(nons:scales.xml.NoNamespaceQName):scales.xml.AttributeQName", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/ScalesXmlImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/ScalesXmlImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.impl.StringToNSBuilder", "shortDescription" : "Pimps a string for namespace handling", "members_class" : [{"label" : "localOnly", "tail" : "(ver: XmlVersion, fromParser: FromParser): NoNamespaceQName", "member" : "scales.xml.impl.StringToNSBuilder.localOnly", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#localOnly(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "l", "tail" : "(ver: XmlVersion, fromParser: FromParser): NoNamespaceQName", "member" : "scales.xml.impl.StringToNSBuilder.l", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#l(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "::", "tail" : "(namespace: String): UnprefixedQName", "member" : "scales.xml.impl.StringToNSBuilder.::", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#::(namespace:String):scales.xml.UnprefixedQName", "kind" : "def"}, {"member" : "scales.xml.impl.StringToNSBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/StringToNSBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/StringToNSBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/impl\/StringToNSBuilder.html", "kind" : "class"}, {"name" : "scales.xml.impl.TreeProxies", "shortDescription" : "Mutable list that keeps the item creation to a minimum, no extra garbage here until the parse is done...", "members_class" : [{"label" : "tree", "tail" : "(): xml.XmlTree", "member" : "scales.xml.impl.TreeProxies.tree", "link" : "scales\/xml\/impl\/TreeProxies.html#tree:scales.xml.XmlTree", "kind" : "def"}, {"label" : "beginSub", "tail" : "(elem: Elem, builder: ⇒ xml.XmlBuilder): Unit", "member" : "scales.xml.impl.TreeProxies.beginSub", "link" : "scales\/xml\/impl\/TreeProxies.html#beginSub(elem:scales.xml.Elem,builder:=>scales.xml.XmlBuilder):Unit", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(): Unit", "member" : "scales.xml.impl.TreeProxies.elementEnd", "link" : "scales\/xml\/impl\/TreeProxies.html#elementEnd():Unit", "kind" : "def"}, {"label" : "addChild", "tail" : "(i: XmlItem): Unit", "member" : "scales.xml.impl.TreeProxies.addChild", "link" : "scales\/xml\/impl\/TreeProxies.html#addChild(i:scales.xml.XmlItem):Unit", "kind" : "def"}, {"label" : "proxy", "tail" : "(depth: Int): TreeProxy", "member" : "scales.xml.impl.TreeProxies.proxy", "link" : "scales\/xml\/impl\/TreeProxies.html#proxy(depth:Int):scales.xml.impl.TreeProxy", "kind" : "def"}, {"label" : "depth_=", "tail" : "(newDepth: Int): Unit", "member" : "scales.xml.impl.TreeProxies.depth_=", "link" : "scales\/xml\/impl\/TreeProxies.html#depth_=(newDepth:Int):Unit", "kind" : "def"}, {"label" : "depth", "tail" : "(): Int", "member" : "scales.xml.impl.TreeProxies.depth", "link" : "scales\/xml\/impl\/TreeProxies.html#depth:Int", "kind" : "def"}, {"label" : "current_=", "tail" : "(tp: TreeProxy): Unit", "member" : "scales.xml.impl.TreeProxies.current_=", "link" : "scales\/xml\/impl\/TreeProxies.html#current_=(tp:scales.xml.impl.TreeProxy):Unit", "kind" : "def"}, {"label" : "current", "tail" : "(): TreeProxy", "member" : "scales.xml.impl.TreeProxies.current", "link" : "scales\/xml\/impl\/TreeProxies.html#current:scales.xml.impl.TreeProxy", "kind" : "def"}, {"label" : "reuse", "tail" : "(): TreeProxies", "member" : "scales.xml.impl.TreeProxies.reuse", "link" : "scales\/xml\/impl\/TreeProxies.html#reuse():scales.xml.impl.TreeProxies", "kind" : "def"}, {"label" : "proxyRemoveAndUp", "tail" : "(): TreeProxies", "member" : "scales.xml.impl.TreeProxies.proxyRemoveAndUp", "link" : "scales\/xml\/impl\/TreeProxies.html#proxyRemoveAndUp():scales.xml.impl.TreeProxies", "kind" : "def"}, {"label" : "proxyPath", "tail" : "(): xml.XmlPath", "member" : "scales.xml.impl.TreeProxies.proxyPath", "link" : "scales\/xml\/impl\/TreeProxies.html#proxyPath():scales.xml.XmlPath", "kind" : "def"}, {"label" : "rootTree", "tail" : ": xml.XmlTree", "member" : "scales.xml.impl.TreeProxies.rootTree", "link" : "scales\/xml\/impl\/TreeProxies.html#rootTree:scales.xml.XmlTree", "kind" : "var"}, {"member" : "scales.xml.impl.TreeProxies#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/TreeProxies.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/TreeProxies.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/TreeProxies.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/TreeProxies.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/TreeProxies.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/TreeProxies.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/TreeProxies.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/TreeProxies.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/TreeProxies.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/TreeProxies.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/TreeProxies.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/TreeProxies.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/TreeProxies.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/TreeProxies.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/TreeProxies.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/TreeProxies.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/TreeProxies.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/TreeProxies.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/TreeProxies.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/impl\/TreeProxies.html", "kind" : "class"}, {"name" : "scales.xml.impl.TreeProxy", "shortDescription" : "", "members_class" : [{"label" : "builder", "tail" : "(): xml.XmlBuilder", "member" : "scales.xml.impl.TreeProxy.builder", "link" : "scales\/xml\/impl\/TreeProxy.html#builder:scales.xml.XmlBuilder", "kind" : "def"}, {"label" : "setElem", "tail" : "(elem: Elem): Unit", "member" : "scales.xml.impl.TreeProxy.setElem", "link" : "scales\/xml\/impl\/TreeProxy.html#setElem(elem:scales.xml.Elem):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(): Elem", "member" : "scales.xml.impl.TreeProxy.elem", "link" : "scales\/xml\/impl\/TreeProxy.html#elem:scales.xml.Elem", "kind" : "def"}, {"member" : "scales.xml.impl.TreeProxy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/TreeProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/TreeProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/TreeProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/TreeProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/TreeProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/TreeProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/TreeProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/TreeProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/TreeProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/TreeProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/TreeProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/TreeProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/TreeProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/TreeProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/TreeProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/TreeProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/TreeProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/TreeProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/TreeProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/impl\/TreeProxy.html", "kind" : "class"}, {"name" : "scales.xml.impl.Versions", "shortDescription" : "Lazy val needed to trap impl, need pluggable (slf4j style) to swap out differentlogic, defaulting to sun jaxp ?  For a future version, env property is enough for now.", "object" : "scales\/xml\/impl\/Versions$.html", "members_object" : [{"label" : "newSchemaShouldSerialize", "tail" : ": Boolean", "member" : "scales.xml.impl.Versions.newSchemaShouldSerialize", "link" : "scales\/xml\/impl\/Versions$.html#newSchemaShouldSerialize:Boolean", "kind" : "lazy val"}, {"label" : "traxSourceShouldSerialize", "tail" : ": Boolean", "member" : "scales.xml.impl.Versions.traxSourceShouldSerialize", "link" : "scales\/xml\/impl\/Versions$.html#traxSourceShouldSerialize:Boolean", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/Versions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/Versions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/Versions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/Versions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/Versions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/Versions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/Versions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/Versions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/Versions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/Versions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/Versions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/Versions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/Versions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/Versions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/Versions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/Versions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/Versions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/Versions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/Versions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.impl.Whitespace", "members_trait" : [{"label" : "joinTextNodes", "tail" : "(children: xml.XmlChildren): xml.XmlChildren", "member" : "scales.xml.impl.Whitespace.joinTextNodes", "link" : "scales\/xml\/impl\/Whitespace.html#joinTextNodes(children:scales.xml.XmlChildren):scales.xml.XmlChildren", "kind" : "def"}, {"label" : "joinTextNodes", "tail" : "(tree: xml.XmlTree): xml.XmlTree", "member" : "scales.xml.impl.Whitespace.joinTextNodes", "link" : "scales\/xml\/impl\/Whitespace.html#joinTextNodes(tree:scales.xml.XmlTree):scales.xml.XmlTree", "kind" : "def"}, {"label" : "mergeAdjacentText", "tail" : ": ((Option[XmlItem], xml.XmlChildren), xml.ItemOrElem) ⇒ (Option[XmlItem], xml.XmlChildren)", "member" : "scales.xml.impl.Whitespace.mergeAdjacentText", "link" : "scales\/xml\/impl\/Whitespace.html#mergeAdjacentText:((Option[scales.xml.XmlItem],scales.xml.XmlChildren),scales.xml.ItemOrElem)=>(Option[scales.xml.XmlItem],scales.xml.XmlChildren)", "kind" : "val"}, {"label" : "normalizeSpaceS", "tail" : "(str: String): String", "member" : "scales.xml.impl.Whitespace.normalizeSpaceS", "link" : "scales\/xml\/impl\/Whitespace.html#normalizeSpaceS(str:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/Whitespace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/Whitespace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/Whitespace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/Whitespace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/Whitespace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/Whitespace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/Whitespace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/Whitespace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/Whitespace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/Whitespace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/Whitespace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/Whitespace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/Whitespace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/Whitespace.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/Whitespace.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/Whitespace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/Whitespace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/Whitespace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/Whitespace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A collection of whitespace related functions", "trait" : "scales\/xml\/impl\/Whitespace.html", "kind" : "trait"}, {"name" : "scales.xml.impl.XmlFactories", "members_trait" : [{"label" : "newSchema", "tail" : "(source: Source, factory: Loaner[SchemaFactory]): Schema", "member" : "scales.xml.impl.XmlFactories.newSchema", "link" : "scales\/xml\/impl\/XmlFactories.html#newSchema(source:javax.xml.transform.Source,factory:scales.utils.resources.Loaner[javax.xml.validation.SchemaFactory]):javax.xml.validation.Schema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/XmlFactories.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/XmlFactories.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/XmlFactories.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/XmlFactories.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/XmlFactories.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/XmlFactories.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/XmlFactories.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlFactories.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlFactories.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlFactories.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/XmlFactories.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/XmlFactories.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/XmlFactories.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/XmlFactories.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/XmlFactories.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/XmlFactories.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/XmlFactories.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/XmlFactories.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/XmlFactories.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Most of the JAXP, STAX and DOM apis don't mention much aboutthread safety but the dominant xerces is completely unsafe with regardsto threads.", "trait" : "scales\/xml\/impl\/XmlFactories.html", "kind" : "trait"}, {"name" : "scales.xml.impl.XmlTypes", "members_trait" : [{"label" : "addChild", "tail" : "(path: XmlPath, child: XmlItem): Path[XmlItem, Elem, XCC]", "member" : "scales.xml.impl.XmlTypes.addChild", "link" : "scales\/xml\/impl\/XmlTypes.html#addChild(path:XmlTypes.this.XmlPath,child:scales.xml.XmlItem):scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,XmlTypes.this.XCC]", "kind" : "final def"}, {"label" : "addAndFocus", "tail" : "(path: XmlPath, elem: Elem, dchildren: XmlChildren): Path[XmlItem, Elem, XCC]", "member" : "scales.xml.impl.XmlTypes.addAndFocus", "link" : "scales\/xml\/impl\/XmlTypes.html#addAndFocus(path:XmlTypes.this.XmlPath,elem:scales.xml.Elem,dchildren:XmlTypes.this.XmlChildren):scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,XmlTypes.this.XCC]", "kind" : "final def"}, {"label" : "ElemMatcher", "tail" : "(name: QName, attributes: AttributeQName*): AnyRef { ... \/* 2 definitions in type refinement *\/ }", "member" : "scales.xml.impl.XmlTypes.ElemMatcher", "link" : "scales\/xml\/impl\/XmlTypes.html#ElemMatcher(name:scales.xml.QName,attributes:XmlTypes.this.AttributeQName*):AnyRef{defmatchAttribs(elem:scales.xml.Elem):Seq[scales.xml.Attribute];defunapply(elem:scales.xml.Elem):Option[(scales.xml.Elem,List[scales.xml.Attribute])]}", "kind" : "def"}, {"label" : "XmlPath", "tail" : "", "member" : "scales.xml.impl.XmlTypes.XmlPath", "link" : "scales\/xml\/impl\/XmlTypes.html#XmlPath=scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,XmlTypes.this.XCC]", "kind" : "type"}, {"label" : "noXmlPath", "tail" : ": XmlPath", "member" : "scales.xml.impl.XmlTypes.noXmlPath", "link" : "scales\/xml\/impl\/XmlTypes.html#noXmlPath:XmlTypes.this.XmlPath", "kind" : "val"}, {"label" : "emptyChildren", "tail" : ": XmlChildren", "member" : "scales.xml.impl.XmlTypes.emptyChildren", "link" : "scales\/xml\/impl\/XmlTypes.html#emptyChildren:XmlTypes.this.XmlChildren", "kind" : "val"}, {"label" : "emptyNamespaces", "tail" : ": Map[String, String]", "member" : "scales.xml.impl.XmlTypes.emptyNamespaces", "link" : "scales\/xml\/impl\/XmlTypes.html#emptyNamespaces:Map[String,String]", "kind" : "val"}, {"label" : "emptyAttributes", "tail" : ": Attributes", "member" : "scales.xml.impl.XmlTypes.emptyAttributes", "link" : "scales\/xml\/impl\/XmlTypes.html#emptyAttributes:XmlTypes.this.Attributes", "kind" : "val"}, {"label" : "emptyMiscs", "tail" : ": Miscs", "member" : "scales.xml.impl.XmlTypes.emptyMiscs", "link" : "scales\/xml\/impl\/XmlTypes.html#emptyMiscs:XmlTypes.this.Miscs", "kind" : "val"}, {"label" : "Attributes", "tail" : "", "member" : "scales.xml.impl.XmlTypes.Attributes", "link" : "scales\/xml\/impl\/XmlTypes.html#Attributes=scales.utils.collection.ListSet[scales.xml.Attribute]", "kind" : "type"}, {"label" : "Miscs", "tail" : "", "member" : "scales.xml.impl.XmlTypes.Miscs", "link" : "scales\/xml\/impl\/XmlTypes.html#Miscs=Seq[XmlTypes.this.Misc]", "kind" : "type"}, {"label" : "Misc", "tail" : "", "member" : "scales.xml.impl.XmlTypes.Misc", "link" : "scales\/xml\/impl\/XmlTypes.html#Misc=Either[scales.xml.Comment,scales.xml.PI]", "kind" : "type"}, {"label" : "xmlSeqLikeThing", "tail" : ": SeqLikeThing[ImmutableArrayProxy[_], ItemOrElem, ImmutableArrayProxy]", "member" : "scales.xml.impl.XmlTypes.xmlSeqLikeThing", "link" : "scales\/xml\/impl\/XmlTypes.html#xmlSeqLikeThing:scales.utils.collection.SeqLikeThing[scales.utils.collection.ImmutableArrayProxy[_],XmlTypes.this.ItemOrElem,scales.utils.collection.ImmutableArrayProxy]", "kind" : "val"}, {"label" : "XCC", "tail" : "", "member" : "scales.xml.impl.XmlTypes.XCC", "link" : "scales\/xml\/impl\/XmlTypes.html#XCC[T]=scales.utils.collection.ImmutableArrayProxy[T]", "kind" : "type"}, {"label" : "XmlChildren", "tail" : "", "member" : "scales.xml.impl.XmlTypes.XmlChildren", "link" : "scales\/xml\/impl\/XmlTypes.html#XmlChildren=XmlTypes.this.XCC[XmlTypes.this.ItemOrElem]", "kind" : "type"}, {"label" : "ItemOrElem", "tail" : "", "member" : "scales.xml.impl.XmlTypes.ItemOrElem", "link" : "scales\/xml\/impl\/XmlTypes.html#ItemOrElem=scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,XmlTypes.this.XCC]", "kind" : "type"}, {"label" : "XmlTree", "tail" : "", "member" : "scales.xml.impl.XmlTypes.XmlTree", "link" : "scales\/xml\/impl\/XmlTypes.html#XmlTree=scales.utils.collection.Tree[scales.xml.XmlItem,scales.xml.Elem,XmlTypes.this.XCC]", "kind" : "type"}, {"label" : "XmlBuilder", "tail" : "(): XmlBuilder", "member" : "scales.xml.impl.XmlTypes.XmlBuilder", "link" : "scales\/xml\/impl\/XmlTypes.html#XmlBuilder():XmlTypes.this.XmlBuilder", "kind" : "def"}, {"label" : "XmlBuilder", "tail" : "", "member" : "scales.xml.impl.XmlTypes.XmlBuilder", "link" : "scales\/xml\/impl\/XmlTypes.html#XmlBuilder=scala.collection.mutable.Builder[XmlTypes.this.ItemOrElem,XmlTypes.this.XmlChildren]", "kind" : "type"}, {"label" : "AttributeQName", "tail" : "", "member" : "scales.xml.impl.XmlTypes.AttributeQName", "link" : "scales\/xml\/impl\/XmlTypes.html#AttributeQName=scales.utils.EitherLike[scales.xml.PrefixedQName,scales.xml.NoNamespaceQName]", "kind" : "type"}, {"label" : "XmlCBF", "tail" : "", "member" : "scales.xml.impl.XmlTypes.XmlCBF", "link" : "scales\/xml\/impl\/XmlTypes.html#XmlCBF=scales.utils.TreeCBF[scales.xml.XmlItem,scales.xml.Elem,XmlTypes.this.XCC]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/XmlTypes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/XmlTypes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/XmlTypes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/XmlTypes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/XmlTypes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/XmlTypes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/XmlTypes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlTypes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlTypes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlTypes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/XmlTypes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/XmlTypes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/XmlTypes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/XmlTypes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/XmlTypes.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/XmlTypes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/XmlTypes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/XmlTypes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/XmlTypes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/XmlTypes.html", "kind" : "trait"}, {"name" : "scales.xml.impl.XmlTypesImplicits", "members_trait" : [{"label" : "toAttrS", "tail" : "(local: String)(ver: XmlVersion): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrS", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toAttrS(local:String)(implicitver:scales.xml.XmlVersion):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "fromParserDefault", "tail" : ": FromParser", "member" : "scales.xml.impl.XmlTypesImplicits.fromParserDefault", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#fromParserDefault:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "xpathSortingClassManifest", "tail" : ": ClassManifest[(Position[XmlItem, Elem, xml.XCC], xml.XmlPath)]", "member" : "scales.xml.impl.XmlTypesImplicits.xpathSortingClassManifest", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#xpathSortingClassManifest:reflect.ClassManifest[(scales.utils.collection.path.Position[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XmlPath)]", "kind" : "implicit val"}, {"label" : "docToTree", "tail" : "(doc: Doc): xml.XmlTree", "member" : "scales.xml.impl.XmlTypesImplicits.docToTree", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#docToTree(doc:scales.xml.Doc):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "aqpairToAttribute", "tail" : "(pair: (xml.AttributeQName, String)): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.aqpairToAttribute", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#aqpairToAttribute(pair:(scales.xml.AttributeQName,String)):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "toQName", "tail" : "(attribQName: xml.AttributeQName): QName", "member" : "scales.xml.impl.XmlTypesImplicits.toQName", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toQName(attribQName:scales.xml.AttributeQName):scales.xml.QName", "kind" : "implicit def"}, {"label" : "qnameEquiv", "tail" : ": Equiv[QName]", "member" : "scales.xml.impl.XmlTypesImplicits.qnameEquiv", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#qnameEquiv:scales.utils.Equiv[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "toQNameF", "tail" : ": (Attribute) ⇒ QName", "member" : "scales.xml.impl.XmlTypesImplicits.toQNameF", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toQNameF:scales.xml.Attribute=>scales.xml.QName", "kind" : "implicit val"}, {"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.impl.XmlTypesImplicits.qnameEqual", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "toAttr", "tail" : "(pair: (String, String))(ver: XmlVersion, fromParser: FromParser): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.toAttr", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toAttr(pair:(String,String))(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "toAttrQNameP", "tail" : "(prens: PrefixedQName): xml.AttributeQName", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrQNameP", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toAttrQNameP(prens:scales.xml.PrefixedQName):scales.xml.AttributeQName", "kind" : "implicit def"}, {"label" : "toAttrQNameN", "tail" : "(nons: NoNamespaceQName): xml.AttributeQName", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrQNameN", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toAttrQNameN(nons:scales.xml.NoNamespaceQName):scales.xml.AttributeQName", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/XmlTypesImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/XmlTypesImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.impl.XmlUtils", "members_trait" : [{"label" : "isNil", "tail" : "(tree: xml.XmlTree): Boolean", "member" : "scales.xml.impl.XmlUtils.isNil", "link" : "scales\/xml\/impl\/XmlUtils.html#isNil(tree:scales.xml.XmlTree):Boolean", "kind" : "def"}, {"label" : "xsiNil", "tail" : ": xml.AttributeQName", "member" : "scales.xml.impl.XmlUtils.xsiNil", "link" : "scales\/xml\/impl\/XmlUtils.html#xsiNil:scales.xml.AttributeQName", "kind" : "val"}, {"label" : "isEmptyTree", "tail" : "(tree: xml.XmlTree): Boolean", "member" : "scales.xml.impl.XmlUtils.isEmptyTree", "link" : "scales\/xml\/impl\/XmlUtils.html#isEmptyTree(tree:scales.xml.XmlTree):Boolean", "kind" : "def"}, {"label" : "convertFromScalaXml", "tail" : "(elem: scala.xml.Elem, parsers: Loaner[XMLReader] with SaxSupport, optimisationStrategy: PathOptimisationStrategy[Token], encoding: String)(xmlVer: XmlVersion): Doc", "member" : "scales.xml.impl.XmlUtils.convertFromScalaXml", "link" : "scales\/xml\/impl\/XmlUtils.html#convertFromScalaXml[Token<:scales.xml.parser.strategies.OptimisationToken](elem:scala.xml.Elem,parsers:scales.utils.resources.Loaner[org.xml.sax.XMLReader]withscales.xml.parser.sax.SaxSupport,optimisationStrategy:scales.xml.parser.strategies.PathOptimisationStrategy[Token],encoding:String)(implicitxmlVer:scales.xml.XmlVersion):scales.xml.Doc", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/XmlUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/XmlUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/XmlUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/XmlUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/XmlUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/XmlUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/XmlUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/XmlUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/XmlUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/XmlUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/XmlUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/XmlUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/XmlUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/XmlUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/XmlUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/XmlUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/XmlUtils.html", "kind" : "trait"}, {"name" : "scales.xml.impl.XmlUtilsImplicits", "members_trait" : [{"label" : "toScalesXml", "tail" : "(elem: scala.xml.Elem)(xmlVer: XmlVersion): ToScales", "member" : "scales.xml.impl.XmlUtilsImplicits.toScalesXml", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#toScalesXml(elem:scala.xml.Elem)(implicitxmlVer:scales.xml.XmlVersion):XmlUtilsImplicits.this.ToScales", "kind" : "implicit def"}, {"label" : "ToScales", "tail" : "", "member" : "scales.xml.impl.XmlUtilsImplicits.ToScales", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#ToScalesextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/impl\/XmlUtilsImplicits.html", "kind" : "trait"}], "scales.xml" : [{"name" : "scales.xml.<", "shortDescription" : "Creates DslBuilder instances", "object" : "scales\/xml\/$less$.html", "members_object" : [{"label" : "apply", "tail" : "(elem: Elem): DslBuilder", "member" : "scales.xml.<.apply", "link" : "scales\/xml\/$less$.html#apply(elem:scales.xml.Elem):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(qname: QName): DslBuilder", "member" : "scales.xml.<.apply", "link" : "scales\/xml\/$less$.html#apply(qname:scales.xml.QName):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/$less$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/$less$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/$less$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/$less$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/$less$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/$less$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/$less$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/$less$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/$less$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/$less$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/$less$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/$less$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/$less$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/$less$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/$less$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/$less$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/$less$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/$less$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/$less$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.?<", "shortDescription" : "Creates OptionalDslBuilder instances.", "object" : "scales\/xml\/$qmark$less$.html", "members_object" : [{"label" : "apply", "tail" : "(elem: Elem): OptionalDslBuilder", "member" : "scales.xml.?<.apply", "link" : "scales\/xml\/$qmark$less$.html#apply(elem:scales.xml.Elem):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(qname: QName): OptionalDslBuilder", "member" : "scales.xml.?<.apply", "link" : "scales\/xml\/$qmark$less$.html#apply(qname:scales.xml.QName):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/$qmark$less$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/$qmark$less$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/$qmark$less$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/$qmark$less$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/$qmark$less$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/$qmark$less$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/$qmark$less$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/$qmark$less$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/$qmark$less$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/$qmark$less$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/$qmark$less$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/$qmark$less$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/$qmark$less$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/$qmark$less$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/$qmark$less$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/$qmark$less$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/$qmark$less$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/$qmark$less$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/$qmark$less$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.Attr", "shortDescription" : "Allows easy patterns for attribute values", "object" : "scales\/xml\/Attr$.html", "members_object" : [{"label" : "unapply", "tail" : "(attr: Attribute): Some[String]", "member" : "scales.xml.Attr.unapply", "link" : "scales\/xml\/Attr$.html#unapply(attr:scales.xml.Attribute):Some[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Attr$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Attr$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Attr$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Attr$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Attr$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Attr$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Attr$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attr$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attr$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attr$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Attr$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Attr$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Attr$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Attr$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Attr$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/Attr$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Attr$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Attr$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Attr$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.Attribs", "shortDescription" : "Simple constructor for Attributes", "object" : "scales\/xml\/Attribs$.html", "members_object" : [{"label" : "apply", "tail" : "(attribs: Attribute*): xml.Attributes", "member" : "scales.xml.Attribs.apply", "link" : "scales\/xml\/Attribs$.html#apply(attribs:scales.xml.Attribute*):scales.xml.Attributes", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Attribs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Attribs$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Attribs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Attribs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Attribs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Attribs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Attribs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attribs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attribs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attribs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Attribs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Attribs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Attribs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Attribs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Attribs$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/Attribs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Attribs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Attribs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Attribs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.Attribute", "shortDescription" : "Attributes can only work with either a prefixed qname or an empty ns name", "members_case class" : [{"member" : "scales.xml.Attribute#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "scales.xml.Attribute.value", "link" : "scales\/xml\/Attribute.html#value:String", "kind" : "val"}, {"label" : "name", "tail" : ": xml.AttributeQName", "member" : "scales.xml.Attribute.name", "link" : "scales\/xml\/Attribute.html#name:scales.xml.AttributeQName", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Attribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Attribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Attribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Attribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Attribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Attribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Attribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attribute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Attribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Attribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Attribute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Attribute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Attribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Attribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Attribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/Attribute.html", "kind" : "case class"}, {"name" : "scales.xml.CanHavePrefix", "members_trait" : [{"label" : "withPrefix", "tail" : "(prefix: String)(ver: XmlVersion, fromParser: FromParser): PrefixedQName", "member" : "scales.xml.CanHavePrefix.withPrefix", "link" : "scales\/xml\/CanHavePrefix.html#withPrefix(prefix:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/CanHavePrefix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/CanHavePrefix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/CanHavePrefix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/CanHavePrefix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/CanHavePrefix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/CanHavePrefix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/CanHavePrefix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CanHavePrefix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CanHavePrefix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CanHavePrefix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/CanHavePrefix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/CanHavePrefix.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/CanHavePrefix.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/CanHavePrefix.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/CanHavePrefix.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/CanHavePrefix.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/CanHavePrefix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/CanHavePrefix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/CanHavePrefix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "prefix", "tail" : "(): Option[String]", "member" : "scales.xml.CanHavePrefix.prefix", "link" : "scales\/xml\/CanHavePrefix.html#prefix:Option[String]", "kind" : "abstract def"}, {"label" : "namespace", "tail" : ": Namespace", "member" : "scales.xml.CanHavePrefix.namespace", "link" : "scales\/xml\/CanHavePrefix.html#namespace:scales.xml.Namespace", "kind" : "abstract val"}, {"label" : "local", "tail" : ": String", "member" : "scales.xml.CanHavePrefix.local", "link" : "scales\/xml\/CanHavePrefix.html#local:String", "kind" : "abstract val"}], "shortDescription" : "Mixed in to Prefixed and Unprefixed", "trait" : "scales\/xml\/CanHavePrefix.html", "kind" : "trait"}, {"name" : "scales.xml.CData", "members_trait" : [{"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.CData.equals", "link" : "scales\/xml\/CData.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "doEquals", "tail" : "(other: Any, clazz: Class[_]): Boolean", "member" : "scales.xml.XmlItem.doEquals", "link" : "scales\/xml\/CData.html#doEquals(other:Any,clazz:Class[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.XmlItem.hashCode", "link" : "scales\/xml\/CData.html#hashCode():Int", "kind" : "def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/xml\/CData.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/xml\/CData.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.get", "link" : "scales\/xml\/CData.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/xml\/CData.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/xml\/CData.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/xml\/CData.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/xml\/CData.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/xml\/CData.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/CData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/CData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/CData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/CData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/CData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/CData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/CData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/CData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/CData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/CData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/CData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/CData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/CData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/CData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : ": String", "member" : "scales.xml.XmlItem.value", "link" : "scales\/xml\/CData.html#value:String", "kind" : "abstract val"}], "shortDescription" : "Might be tempting to use, but think twice, XOM removes it for agood reason, and I'm sorely tempted to, but I've worked with enoughapplications that really thought they needed it.", "object" : "scales\/xml\/CData$.html", "members_object" : [{"label" : "unapply", "tail" : "(cmt: CData): Some[String]", "member" : "scales.xml.CData.unapply", "link" : "scales\/xml\/CData$.html#unapply(cmt:scales.xml.CData):Some[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(valuei: String)(fromParser: FromParser): CData", "member" : "scales.xml.CData.apply", "link" : "scales\/xml\/CData$.html#apply(valuei:String)(implicitfromParser:scales.xml.impl.FromParser):scales.xml.CData", "kind" : "def"}, {"label" : "cdataClass", "tail" : ": Class[_ <: CData]", "member" : "scales.xml.CData.cdataClass", "link" : "scales\/xml\/CData$.html#cdataClass:Class[_<:scales.xml.CData]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/CData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/CData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/CData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/CData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/CData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/CData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/CData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/CData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/CData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/CData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/CData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/CData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/CData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/CData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/CData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/CData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/CData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/CData.html", "kind" : "trait"}, {"name" : "scales.xml.Comment", "members_trait" : [{"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.Comment.equals", "link" : "scales\/xml\/Comment.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "doEquals", "tail" : "(other: Any, clazz: Class[_]): Boolean", "member" : "scales.xml.XmlItem.doEquals", "link" : "scales\/xml\/Comment.html#doEquals(other:Any,clazz:Class[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.XmlItem.hashCode", "link" : "scales\/xml\/Comment.html#hashCode():Int", "kind" : "def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/xml\/Comment.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/xml\/Comment.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.get", "link" : "scales\/xml\/Comment.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/xml\/Comment.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/xml\/Comment.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/xml\/Comment.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/xml\/Comment.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/xml\/Comment.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Comment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Comment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Comment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Comment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Comment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Comment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Comment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Comment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Comment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Comment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Comment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Comment.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Comment.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Comment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Comment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Comment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Comment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : ": String", "member" : "scales.xml.XmlItem.value", "link" : "scales\/xml\/Comment.html#value:String", "kind" : "abstract val"}], "shortDescription" : "Comments aren't escaped and will throw a CommentCannotBeEncoded error if the contents cannot be serialized, xalan just tries to serialize directly which can't work.", "object" : "scales\/xml\/Comment$.html", "members_object" : [{"label" : "unapply", "tail" : "(cmt: Comment): Some[String]", "member" : "scales.xml.Comment.unapply", "link" : "scales\/xml\/Comment$.html#unapply(cmt:scales.xml.Comment):Some[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(valuei: String)(fromParser: FromParser): Comment", "member" : "scales.xml.Comment.apply", "link" : "scales\/xml\/Comment$.html#apply(valuei:String)(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Comment", "kind" : "def"}, {"label" : "commentClass", "tail" : ": Class[_ <: Comment]", "member" : "scales.xml.Comment.commentClass", "link" : "scales\/xml\/Comment$.html#commentClass:Class[_<:scales.xml.Comment]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Comment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Comment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Comment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Comment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Comment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Comment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Comment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Comment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Comment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Comment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Comment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Comment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Comment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Comment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Comment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/Comment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Comment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Comment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Comment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/Comment.html", "kind" : "trait"}, {"name" : "scales.xml.Declaration", "shortDescription" : "Xml declaration", "members_case class" : [{"member" : "scales.xml.Declaration#<init>", "error" : "unsupported entity"}, {"label" : "standalone", "tail" : ": Boolean", "member" : "scales.xml.Declaration.standalone", "link" : "scales\/xml\/Declaration.html#standalone:Boolean", "kind" : "val"}, {"label" : "encoding", "tail" : ": Charset", "member" : "scales.xml.Declaration.encoding", "link" : "scales\/xml\/Declaration.html#encoding:java.nio.charset.Charset", "kind" : "val"}, {"label" : "version", "tail" : ": XmlVersion", "member" : "scales.xml.Declaration.version", "link" : "scales\/xml\/Declaration.html#version:scales.xml.XmlVersion", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Declaration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Declaration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Declaration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Declaration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Declaration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Declaration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Declaration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Declaration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Declaration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Declaration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Declaration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Declaration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Declaration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Declaration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Declaration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Declaration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/Declaration.html", "kind" : "case class"}, {"name" : "scales.xml.Doc", "shortDescription" : "Tree based document", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "scales.xml.Doc.toString", "link" : "scales\/xml\/Doc.html#toString():String", "kind" : "def"}, {"member" : "scales.xml.Doc#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": EndMisc", "member" : "scales.xml.Doc.end", "link" : "scales\/xml\/Doc.html#end:scales.xml.EndMisc", "kind" : "val"}, {"label" : "prolog", "tail" : ": Prolog", "member" : "scales.xml.Doc.prolog", "link" : "scales\/xml\/Doc.html#prolog:scales.xml.Prolog", "kind" : "val"}, {"label" : "rootElem", "tail" : ": xml.XmlTree", "member" : "scales.xml.Doc.rootElem", "link" : "scales\/xml\/Doc.html#rootElem:scales.xml.XmlTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Doc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Doc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Doc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Doc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Doc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Doc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Doc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Doc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Doc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Doc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Doc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Doc.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Doc.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Doc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Doc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Doc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/Doc.html", "kind" : "case class"}, {"name" : "scales.xml.DocLike", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/DocLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/DocLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/DocLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/DocLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/DocLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/DocLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/DocLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/DocLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/DocLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/DocLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/DocLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/DocLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/DocLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/DocLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/DocLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/DocLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/DocLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/DocLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/DocLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "end", "tail" : "(): EndMisc", "member" : "scales.xml.DocLike.end", "link" : "scales\/xml\/DocLike.html#end:scales.xml.EndMisc", "kind" : "abstract def"}, {"label" : "prolog", "tail" : "(): Prolog", "member" : "scales.xml.DocLike.prolog", "link" : "scales\/xml\/DocLike.html#prolog:scales.xml.Prolog", "kind" : "abstract def"}], "shortDescription" : "All documents look similar to this, even when stream", "trait" : "scales\/xml\/DocLike.html", "kind" : "trait"}, {"name" : "scales.xml.DTD", "shortDescription" : "DTD is not part of the tree, nor a stream, it can only occur once and as such is neither an XmlEvent nor an XmlItem directly", "members_case class" : [{"member" : "scales.xml.DTD#<init>", "error" : "unsupported entity"}, {"label" : "systemId", "tail" : ": String", "member" : "scales.xml.DTD.systemId", "link" : "scales\/xml\/DTD.html#systemId:String", "kind" : "val"}, {"label" : "publicId", "tail" : ": String", "member" : "scales.xml.DTD.publicId", "link" : "scales\/xml\/DTD.html#publicId:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scales.xml.DTD.name", "link" : "scales\/xml\/DTD.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/DTD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/DTD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/DTD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/DTD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/DTD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/DTD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/DTD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/DTD.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/DTD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/DTD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/DTD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/DTD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/DTD.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/DTD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/DTD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/DTD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/DTD.html", "kind" : "case class"}, {"name" : "scales.xml.Elem", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "scales.xml.Elem.toString", "link" : "scales\/xml\/Elem.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.Elem.hashCode", "link" : "scales\/xml\/Elem.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.Elem.equals", "link" : "scales\/xml\/Elem.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "namespaces", "tail" : "(): Map[String, String]", "member" : "scales.xml.Elem.namespaces", "link" : "scales\/xml\/Elem.html#namespaces:scala.collection.immutable.Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Elem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Elem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Elem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Elem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Elem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Elem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Elem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Elem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Elem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Elem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Elem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Elem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Elem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Elem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Elem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Elem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String])(fromParser: FromParser): Elem", "member" : "scales.xml.Elem.copy", "link" : "scales\/xml\/Elem.html#copy(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:scala.collection.immutable.Map[String,String])(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Elem", "kind" : "abstract def"}, {"label" : "attributes", "tail" : "(): xml.Attributes", "member" : "scales.xml.Elem.attributes", "link" : "scales\/xml\/Elem.html#attributes:scales.xml.Attributes", "kind" : "abstract def"}, {"label" : "name", "tail" : ": QName", "member" : "scales.xml.Elem.name", "link" : "scales\/xml\/Elem.html#name:scales.xml.QName", "kind" : "abstract val"}], "shortDescription" : "", "object" : "scales\/xml\/Elem$.html", "members_object" : [{"label" : "unapply", "tail" : "(el: Elem): Some[(QName, xml.Attributes, Map[String, String])]", "member" : "scales.xml.Elem.unapply", "link" : "scales\/xml\/Elem$.html#unapply(el:scales.xml.Elem):Some[(scales.xml.QName,scales.xml.Attributes,scala.collection.immutable.Map[String,String])]", "kind" : "def"}, {"label" : "apply", "tail" : "(namei: QName, attributesi: xml.Attributes, namespacesi: Map[String, String])(fromParser: FromParser): Elem", "member" : "scales.xml.Elem.apply", "link" : "scales\/xml\/Elem$.html#apply(namei:scales.xml.QName,attributesi:scales.xml.Attributes,namespacesi:scala.collection.immutable.Map[String,String])(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Elem", "kind" : "def"}, {"label" : "apply", "tail" : "(name: QName, attributes: xml.Attributes, namespace: PrefixedNamespace, namespaces: PrefixedNamespace*)(fromParser: FromParser): Elem", "member" : "scales.xml.Elem.apply", "link" : "scales\/xml\/Elem$.html#apply(name:scales.xml.QName,attributes:scales.xml.Attributes,namespace:scales.xml.PrefixedNamespace,namespaces:scales.xml.PrefixedNamespace*)(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Elem", "kind" : "def"}, {"label" : "apply", "tail" : "(name: QName, namespace: PrefixedNamespace, namespaces: PrefixedNamespace*)(fromParser: FromParser): Elem", "member" : "scales.xml.Elem.apply", "link" : "scales\/xml\/Elem$.html#apply(name:scales.xml.QName,namespace:scales.xml.PrefixedNamespace,namespaces:scales.xml.PrefixedNamespace*)(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Elem", "kind" : "def"}, {"label" : "apply", "tail" : "(name: QName, namespaces: Iterable[PrefixedNamespace])(fromParser: FromParser): Elem", "member" : "scales.xml.Elem.apply", "link" : "scales\/xml\/Elem$.html#apply(name:scales.xml.QName,namespaces:Iterable[scales.xml.PrefixedNamespace])(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Elem", "kind" : "def"}, {"label" : "apply", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Iterable[PrefixedNamespace])(fromParser: FromParser): Elem", "member" : "scales.xml.Elem.apply", "link" : "scales\/xml\/Elem$.html#apply(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Iterable[scales.xml.PrefixedNamespace])(implicitfromParser:scales.xml.impl.FromParser):scales.xml.Elem", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Elem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Elem$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Elem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Elem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Elem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Elem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Elem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Elem$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Elem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Elem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Elem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Elem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Elem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Elem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Elem$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/Elem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Elem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Elem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Elem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/Elem.html", "kind" : "trait"}, {"name" : "scales.xml.EmptyDoc", "shortDescription" : "Provides a simple empty document for streams etc", "members_case class" : [{"member" : "scales.xml.EmptyDoc#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": EndMisc", "member" : "scales.xml.EmptyDoc.end", "link" : "scales\/xml\/EmptyDoc.html#end:scales.xml.EndMisc", "kind" : "val"}, {"label" : "prolog", "tail" : ": Prolog", "member" : "scales.xml.EmptyDoc.prolog", "link" : "scales\/xml\/EmptyDoc.html#prolog:scales.xml.Prolog", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/EmptyDoc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/EmptyDoc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/EmptyDoc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/EmptyDoc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/EmptyDoc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/EmptyDoc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/EmptyDoc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EmptyDoc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EmptyDoc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EmptyDoc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/EmptyDoc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/EmptyDoc.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/EmptyDoc.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/EmptyDoc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/EmptyDoc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/EmptyDoc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/EmptyDoc.html", "kind" : "case class"}, {"name" : "scales.xml.EmptyNamespace", "shortDescription" : "Special case for empty namespaces", "object" : "scales\/xml\/EmptyNamespace$.html", "members_object" : [{"label" : "uri", "tail" : ": String(\"\")", "member" : "scales.xml.EmptyNamespace.uri", "link" : "scales\/xml\/EmptyNamespace$.html#uri:String(\"\")", "kind" : "final val"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.UnderlyingNamespace.equals", "link" : "scales\/xml\/EmptyNamespace$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.UnderlyingNamespace.hashCode", "link" : "scales\/xml\/EmptyNamespace$.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/EmptyNamespace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/EmptyNamespace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/EmptyNamespace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/EmptyNamespace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/EmptyNamespace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/EmptyNamespace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/EmptyNamespace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EmptyNamespace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EmptyNamespace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EmptyNamespace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/EmptyNamespace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/EmptyNamespace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/EmptyNamespace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/EmptyNamespace$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/EmptyNamespace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/EmptyNamespace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/EmptyNamespace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.EndElem", "shortDescription" : "Exists purely to satisfy staxs events and indicate to the client code that the xml \"stack\" should be popped", "members_case class" : [{"member" : "scales.xml.EndElem#<init>", "error" : "unsupported entity"}, {"label" : "namespaces", "tail" : ": Map[String, String]", "member" : "scales.xml.EndElem.namespaces", "link" : "scales\/xml\/EndElem.html#namespaces:scala.collection.immutable.Map[String,String]", "kind" : "val"}, {"label" : "name", "tail" : ": QName", "member" : "scales.xml.EndElem.name", "link" : "scales\/xml\/EndElem.html#name:scales.xml.QName", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/EndElem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/EndElem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/EndElem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/EndElem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/EndElem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/EndElem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/EndElem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EndElem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EndElem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EndElem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/EndElem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/EndElem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/EndElem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/EndElem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/EndElem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/EndElem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/EndElem.html", "kind" : "case class"}, {"name" : "scales.xml.EndMisc", "shortDescription" : "The information after the root elem", "members_case class" : [{"member" : "scales.xml.EndMisc#<init>", "error" : "unsupported entity"}, {"label" : "misc", "tail" : ": xml.Miscs", "member" : "scales.xml.EndMisc.misc", "link" : "scales\/xml\/EndMisc.html#misc:scales.xml.Miscs", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/EndMisc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/EndMisc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/EndMisc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/EndMisc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/EndMisc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/EndMisc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/EndMisc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EndMisc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EndMisc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/EndMisc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/EndMisc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/EndMisc.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/EndMisc.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/EndMisc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/EndMisc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/EndMisc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/EndMisc.html", "kind" : "case class"}, {"name" : "scales.xml.Namespace", "members_trait" : [{"label" : "prefixed", "tail" : "(prefix: String, local: String)(ver: XmlVersion, fromParser: FromParser): PrefixedQName", "member" : "scales.xml.Namespace.prefixed", "link" : "scales\/xml\/Namespace.html#prefixed(prefix:String,local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "prefixed", "tail" : "(prefix: String)(ver: XmlVersion, fromParser: FromParser): PrefixedNamespace", "member" : "scales.xml.Namespace.prefixed", "link" : "scales\/xml\/Namespace.html#prefixed(prefix:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedNamespace", "kind" : "def"}, {"label" : "apply", "tail" : "(prefix: String, local: String)(ver: XmlVersion, fromParser: FromParser): PrefixedQName { final val prefix: Some[String] }", "member" : "scales.xml.Namespace.apply", "link" : "scales\/xml\/Namespace.html#apply(prefix:String,local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName{finalvalprefix:Some[String]}", "kind" : "def"}, {"label" : "apply", "tail" : "(local: String)(ver: XmlVersion, fromParser: FromParser): UnprefixedQName", "member" : "scales.xml.Namespace.apply", "link" : "scales\/xml\/Namespace.html#apply(local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.UnderlyingNamespace.equals", "link" : "scales\/xml\/Namespace.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.UnderlyingNamespace.hashCode", "link" : "scales\/xml\/Namespace.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Namespace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Namespace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Namespace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Namespace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Namespace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Namespace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Namespace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Namespace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Namespace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Namespace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Namespace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Namespace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Namespace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Namespace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Namespace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Namespace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Namespace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "uri", "tail" : ": String", "member" : "scales.xml.UnderlyingNamespace.uri", "link" : "scales\/xml\/Namespace.html#uri:String", "kind" : "abstract val"}], "shortDescription" : "Represents a XML Namespace spec compliant Namespace.", "object" : "scales\/xml\/Namespace$.html", "members_object" : [{"label" : "unapply", "tail" : "(n: Namespace): Some[String]", "member" : "scales.xml.Namespace.unapply", "link" : "scales\/xml\/Namespace$.html#unapply(n:scales.xml.Namespace):Some[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(validUri: String)(ver: XmlVersion, fromParser: FromParser): Namespace", "member" : "scales.xml.Namespace.apply", "link" : "scales\/xml\/Namespace$.html#apply(validUri:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.Namespace", "kind" : "def"}, {"label" : "xsi", "tail" : ": Namespace", "member" : "scales.xml.Namespace.xsi", "link" : "scales\/xml\/Namespace$.html#xsi:scales.xml.Namespace", "kind" : "val"}, {"label" : "xml", "tail" : ": Namespace", "member" : "scales.xml.Namespace.xml", "link" : "scales\/xml\/Namespace$.html#xml:scales.xml.Namespace", "kind" : "val"}, {"label" : "xmlns", "tail" : ": Namespace", "member" : "scales.xml.Namespace.xmlns", "link" : "scales\/xml\/Namespace$.html#xmlns:scales.xml.Namespace", "kind" : "val"}, {"label" : "xsiNS", "tail" : ": String", "member" : "scales.xml.Namespace.xsiNS", "link" : "scales\/xml\/Namespace$.html#xsiNS:String", "kind" : "val"}, {"label" : "xmlnsNS", "tail" : ": String", "member" : "scales.xml.Namespace.xmlnsNS", "link" : "scales\/xml\/Namespace$.html#xmlnsNS:String", "kind" : "val"}, {"label" : "xmlNS", "tail" : ": String", "member" : "scales.xml.Namespace.xmlNS", "link" : "scales\/xml\/Namespace$.html#xmlNS:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Namespace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Namespace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Namespace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Namespace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Namespace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Namespace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Namespace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Namespace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Namespace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Namespace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Namespace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Namespace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/Namespace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Namespace$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Namespace$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/Namespace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Namespace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Namespace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Namespace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/Namespace.html", "kind" : "trait"}, {"name" : "scales.xml.NoNamespaceQName", "members_trait" : [{"label" : "namespace", "tail" : "(): EmptyNamespace.type", "member" : "scales.xml.NoNamespaceQName.namespace", "link" : "scales\/xml\/NoNamespaceQName.html#namespace:scales.xml.EmptyNamespace.type", "kind" : "final def"}, {"label" : "prefix", "tail" : "(): None.type", "member" : "scales.xml.NoNamespaceQName.prefix", "link" : "scales\/xml\/NoNamespaceQName.html#prefix:None.type", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): PrefixedQName", "member" : "scales.utils.RightLike.getLeft", "link" : "scales\/xml\/NoNamespaceQName.html#getLeft:L", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): NoNamespaceQName", "member" : "scales.utils.RightLike.getRight", "link" : "scales\/xml\/NoNamespaceQName.html#getRight:R", "kind" : "final def"}, {"label" : "get", "tail" : "(): NoNamespaceQName", "member" : "scales.utils.RightLike.get", "link" : "scales\/xml\/NoNamespaceQName.html#get:R", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[NoNamespaceQName]", "member" : "scales.utils.RightLike.right", "link" : "scales\/xml\/NoNamespaceQName.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[PrefixedQName]", "member" : "scales.utils.RightLike.left", "link" : "scales\/xml\/NoNamespaceQName.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (PrefixedQName) ⇒ X, fr: (NoNamespaceQName) ⇒ X): X", "member" : "scales.utils.RightLike.fold", "link" : "scales\/xml\/NoNamespaceQName.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isRight", "link" : "scales\/xml\/NoNamespaceQName.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isLeft", "link" : "scales\/xml\/NoNamespaceQName.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.QName.hashCode", "link" : "scales\/xml\/NoNamespaceQName.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.QName.equals", "link" : "scales\/xml\/NoNamespaceQName.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "=:=", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.=:=", "link" : "scales\/xml\/NoNamespaceQName.html#=:=(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "====", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.====", "link" : "scales\/xml\/NoNamespaceQName.html#====(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scales.xml.QName.toString", "link" : "scales\/xml\/NoNamespaceQName.html#toString():String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(): String", "member" : "scales.xml.QName.qualifiedName", "link" : "scales\/xml\/NoNamespaceQName.html#qualifiedName:String", "kind" : "def"}, {"label" : "pqName", "tail" : "(): String", "member" : "scales.xml.QName.pqName", "link" : "scales\/xml\/NoNamespaceQName.html#pqName:String", "kind" : "def"}, {"label" : "qName", "tail" : "(): String", "member" : "scales.xml.QName.qName", "link" : "scales\/xml\/NoNamespaceQName.html#qName:String", "kind" : "def"}, {"label" : "hasPrefix", "tail" : "(): Boolean", "member" : "scales.xml.QName.hasPrefix", "link" : "scales\/xml\/NoNamespaceQName.html#hasPrefix:Boolean", "kind" : "def"}, {"label" : "qNameVersion", "tail" : "(): XmlVersion", "member" : "scales.xml.QName.qNameVersion", "link" : "scales\/xml\/NoNamespaceQName.html#qNameVersion:scales.xml.XmlVersion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/NoNamespaceQName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/NoNamespaceQName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/NoNamespaceQName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/NoNamespaceQName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/NoNamespaceQName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/NoNamespaceQName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/NoNamespaceQName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/NoNamespaceQName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/NoNamespaceQName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/NoNamespaceQName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/NoNamespaceQName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/NoNamespaceQName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/NoNamespaceQName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/NoNamespaceQName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/NoNamespaceQName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/NoNamespaceQName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "local", "tail" : ": String", "member" : "scales.xml.QName.local", "link" : "scales\/xml\/NoNamespaceQName.html#local:String", "kind" : "abstract val"}], "shortDescription" : "Has neither a prefix nor a namespace (e.g.", "object" : "scales\/xml\/NoNamespaceQName$.html", "members_object" : [{"label" : "unapply", "tail" : "(n: NoNamespaceQName): Some[String]", "member" : "scales.xml.NoNamespaceQName.unapply", "link" : "scales\/xml\/NoNamespaceQName$.html#unapply(n:scales.xml.NoNamespaceQName):Some[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(locali: String)(ver: XmlVersion, fromParser: FromParser): NoNamespaceQName", "member" : "scales.xml.NoNamespaceQName.apply", "link" : "scales\/xml\/NoNamespaceQName$.html#apply(locali:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/NoNamespaceQName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/NoNamespaceQName$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/NoNamespaceQName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/NoNamespaceQName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/NoNamespaceQName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/NoNamespaceQName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/NoNamespaceQName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/NoNamespaceQName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/NoNamespaceQName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/NoNamespaceQName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/NoNamespaceQName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/NoNamespaceQName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/NoNamespaceQName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/NoNamespaceQName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/NoNamespaceQName$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/NoNamespaceQName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/NoNamespaceQName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/NoNamespaceQName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/NoNamespaceQName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/NoNamespaceQName.html", "kind" : "trait"}, {"name" : "scales.xml.PI", "members_trait" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.PI.hashCode", "link" : "scales\/xml\/PI.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.PI.equals", "link" : "scales\/xml\/PI.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "doEquals", "tail" : "(other: Any, clazz: Class[_]): Boolean", "member" : "scales.xml.XmlItem.doEquals", "link" : "scales\/xml\/PI.html#doEquals(other:Any,clazz:Class[_]):Boolean", "kind" : "def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/xml\/PI.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/xml\/PI.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.get", "link" : "scales\/xml\/PI.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/xml\/PI.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/xml\/PI.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/xml\/PI.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/xml\/PI.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/xml\/PI.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/PI.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/PI.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/PI.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/PI.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/PI.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/PI.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/PI.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PI.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PI.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PI.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/PI.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/PI.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/PI.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/PI.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/PI.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/PI.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/PI.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "target", "tail" : ": String", "member" : "scales.xml.PI.target", "link" : "scales\/xml\/PI.html#target:String", "kind" : "abstract val"}, {"label" : "value", "tail" : ": String", "member" : "scales.xml.XmlItem.value", "link" : "scales\/xml\/PI.html#value:String", "kind" : "abstract val"}], "shortDescription" : "", "object" : "scales\/xml\/PI$.html", "members_object" : [{"label" : "unapply", "tail" : "(pi: PI): Some[(String, String)]", "member" : "scales.xml.PI.unapply", "link" : "scales\/xml\/PI$.html#unapply(pi:scales.xml.PI):Some[(String,String)]", "kind" : "def"}, {"label" : "apply", "tail" : "(targeti: String, valuei: String)(fromParser: FromParser): PI", "member" : "scales.xml.PI.apply", "link" : "scales\/xml\/PI$.html#apply(targeti:String,valuei:String)(implicitfromParser:scales.xml.impl.FromParser):scales.xml.PI", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/PI$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/PI$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/PI$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/PI$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/PI$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/PI$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/PI$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PI$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PI$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PI$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/PI$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/PI$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/PI$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/PI$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/PI$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/PI$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/PI$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/PI$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/PI$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/PI.html", "kind" : "trait"}, {"name" : "scales.xml.PrefixedNamespace", "members_trait" : [{"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.PrefixedNamespace.equals", "link" : "scales\/xml\/PrefixedNamespace.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.PrefixedNamespace.hashCode", "link" : "scales\/xml\/PrefixedNamespace.html#hashCode():Int", "kind" : "def"}, {"label" : "apply", "tail" : "(local: String)(ver: XmlVersion, fromParser: FromParser): PrefixedQName { final val prefix: Some[String] }", "member" : "scales.xml.PrefixedNamespace.apply", "link" : "scales\/xml\/PrefixedNamespace.html#apply(local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName{finalvalprefix:Some[String]}", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/PrefixedNamespace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/PrefixedNamespace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/PrefixedNamespace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/PrefixedNamespace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/PrefixedNamespace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/PrefixedNamespace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/PrefixedNamespace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedNamespace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedNamespace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedNamespace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/PrefixedNamespace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/PrefixedNamespace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/PrefixedNamespace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/PrefixedNamespace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/PrefixedNamespace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/PrefixedNamespace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/PrefixedNamespace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "prefix", "tail" : ": String", "member" : "scales.xml.PrefixedNamespace.prefix", "link" : "scales\/xml\/PrefixedNamespace.html#prefix:String", "kind" : "abstract val"}, {"label" : "ns", "tail" : ": Namespace", "member" : "scales.xml.PrefixedNamespace.ns", "link" : "scales\/xml\/PrefixedNamespace.html#ns:scales.xml.Namespace", "kind" : "abstract val"}], "shortDescription" : "", "object" : "scales\/xml\/PrefixedNamespace$.html", "members_object" : [{"label" : "unapply", "tail" : "(p: PrefixedNamespace): Some[(Namespace, String)]", "member" : "scales.xml.PrefixedNamespace.unapply", "link" : "scales\/xml\/PrefixedNamespace$.html#unapply(p:scales.xml.PrefixedNamespace):Some[(scales.xml.Namespace,String)]", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace: Namespace, nsprefix: String)(ver: XmlVersion, fromParser: FromParser): PrefixedNamespace", "member" : "scales.xml.PrefixedNamespace.apply", "link" : "scales\/xml\/PrefixedNamespace$.html#apply(namespace:scales.xml.Namespace,nsprefix:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedNamespace", "kind" : "def"}, {"label" : "xmlPRE", "tail" : ": String", "member" : "scales.xml.PrefixedNamespace.xmlPRE", "link" : "scales\/xml\/PrefixedNamespace$.html#xmlPRE:String", "kind" : "val"}, {"label" : "xmlnsPRE", "tail" : ": String", "member" : "scales.xml.PrefixedNamespace.xmlnsPRE", "link" : "scales\/xml\/PrefixedNamespace$.html#xmlnsPRE:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/PrefixedNamespace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/PrefixedNamespace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/PrefixedNamespace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/PrefixedNamespace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/PrefixedNamespace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/PrefixedNamespace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/PrefixedNamespace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedNamespace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedNamespace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedNamespace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/PrefixedNamespace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/PrefixedNamespace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/PrefixedNamespace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/PrefixedNamespace$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/PrefixedNamespace$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/PrefixedNamespace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/PrefixedNamespace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/PrefixedNamespace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/PrefixedNamespace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/PrefixedNamespace.html", "kind" : "trait"}, {"name" : "scales.xml.PrefixedQName", "members_trait" : [{"label" : "getRight", "tail" : "(): NoNamespaceQName", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/xml\/PrefixedQName.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): PrefixedQName", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/xml\/PrefixedQName.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): PrefixedQName", "member" : "scales.utils.LeftLike.get", "link" : "scales\/xml\/PrefixedQName.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[NoNamespaceQName]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/xml\/PrefixedQName.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[PrefixedQName]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/xml\/PrefixedQName.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (PrefixedQName) ⇒ X, fr: (NoNamespaceQName) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/xml\/PrefixedQName.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/xml\/PrefixedQName.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/xml\/PrefixedQName.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "withPrefix", "tail" : "(prefix: String)(ver: XmlVersion, fromParser: FromParser): PrefixedQName", "member" : "scales.xml.CanHavePrefix.withPrefix", "link" : "scales\/xml\/PrefixedQName.html#withPrefix(prefix:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.QName.hashCode", "link" : "scales\/xml\/PrefixedQName.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.QName.equals", "link" : "scales\/xml\/PrefixedQName.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "=:=", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.=:=", "link" : "scales\/xml\/PrefixedQName.html#=:=(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "====", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.====", "link" : "scales\/xml\/PrefixedQName.html#====(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scales.xml.QName.toString", "link" : "scales\/xml\/PrefixedQName.html#toString():String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(): String", "member" : "scales.xml.QName.qualifiedName", "link" : "scales\/xml\/PrefixedQName.html#qualifiedName:String", "kind" : "def"}, {"label" : "pqName", "tail" : "(): String", "member" : "scales.xml.QName.pqName", "link" : "scales\/xml\/PrefixedQName.html#pqName:String", "kind" : "def"}, {"label" : "qName", "tail" : "(): String", "member" : "scales.xml.QName.qName", "link" : "scales\/xml\/PrefixedQName.html#qName:String", "kind" : "def"}, {"label" : "hasPrefix", "tail" : "(): Boolean", "member" : "scales.xml.QName.hasPrefix", "link" : "scales\/xml\/PrefixedQName.html#hasPrefix:Boolean", "kind" : "def"}, {"label" : "qNameVersion", "tail" : "(): XmlVersion", "member" : "scales.xml.QName.qNameVersion", "link" : "scales\/xml\/PrefixedQName.html#qNameVersion:scales.xml.XmlVersion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/PrefixedQName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/PrefixedQName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/PrefixedQName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/PrefixedQName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/PrefixedQName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/PrefixedQName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/PrefixedQName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedQName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedQName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedQName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/PrefixedQName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/PrefixedQName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/PrefixedQName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/PrefixedQName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/PrefixedQName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/PrefixedQName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "prefix", "tail" : "(): Option[String]", "member" : "scales.xml.CanHavePrefix.prefix", "link" : "scales\/xml\/PrefixedQName.html#prefix:Option[String]", "kind" : "abstract def"}, {"label" : "namespace", "tail" : ": Namespace", "member" : "scales.xml.CanHavePrefix.namespace", "link" : "scales\/xml\/PrefixedQName.html#namespace:scales.xml.Namespace", "kind" : "abstract val"}, {"label" : "local", "tail" : ": String", "member" : "scales.xml.CanHavePrefix.local", "link" : "scales\/xml\/PrefixedQName.html#local:String", "kind" : "abstract val"}], "shortDescription" : "Has both a namespace and a prefix (e.g.", "object" : "scales\/xml\/PrefixedQName$.html", "members_object" : [{"label" : "unapply", "tail" : "(n: PrefixedQName): Some[(String, String, Namespace)]", "member" : "scales.xml.PrefixedQName.unapply", "link" : "scales\/xml\/PrefixedQName$.html#unapply(n:scales.xml.PrefixedQName):Some[(String,String,scales.xml.Namespace)]", "kind" : "def"}, {"label" : "apply", "tail" : "(locali: String, prefixedNamespace: PrefixedNamespace)(ver: XmlVersion, fromParser: FromParser): PrefixedQName { final val prefix: Some[String] }", "member" : "scales.xml.PrefixedQName.apply", "link" : "scales\/xml\/PrefixedQName$.html#apply(locali:String,prefixedNamespace:scales.xml.PrefixedNamespace)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName{finalvalprefix:Some[String]}", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/PrefixedQName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/PrefixedQName$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/PrefixedQName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/PrefixedQName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/PrefixedQName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/PrefixedQName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/PrefixedQName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedQName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedQName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/PrefixedQName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/PrefixedQName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/PrefixedQName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/PrefixedQName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/PrefixedQName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/PrefixedQName$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/PrefixedQName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/PrefixedQName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/PrefixedQName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/PrefixedQName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/PrefixedQName.html", "kind" : "trait"}, {"name" : "scales.xml.Prolog", "shortDescription" : "Includes all information before the root elem", "members_case class" : [{"member" : "scales.xml.Prolog#<init>", "error" : "unsupported entity"}, {"label" : "dtd", "tail" : ": Option[DTD]", "member" : "scales.xml.Prolog.dtd", "link" : "scales\/xml\/Prolog.html#dtd:Option[scales.xml.DTD]", "kind" : "val"}, {"label" : "misc", "tail" : ": xml.Miscs", "member" : "scales.xml.Prolog.misc", "link" : "scales\/xml\/Prolog.html#misc:scales.xml.Miscs", "kind" : "val"}, {"label" : "decl", "tail" : ": Declaration", "member" : "scales.xml.Prolog.decl", "link" : "scales\/xml\/Prolog.html#decl:scales.xml.Declaration", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Prolog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Prolog.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Prolog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Prolog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Prolog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Prolog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Prolog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Prolog.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Prolog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Prolog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Prolog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Prolog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Prolog.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Prolog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Prolog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Prolog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/Prolog.html", "kind" : "case class"}, {"name" : "scales.xml.QName", "members_trait" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.QName.hashCode", "link" : "scales\/xml\/QName.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.QName.equals", "link" : "scales\/xml\/QName.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "=:=", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.=:=", "link" : "scales\/xml\/QName.html#=:=(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "====", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.====", "link" : "scales\/xml\/QName.html#====(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scales.xml.QName.toString", "link" : "scales\/xml\/QName.html#toString():String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(): String", "member" : "scales.xml.QName.qualifiedName", "link" : "scales\/xml\/QName.html#qualifiedName:String", "kind" : "def"}, {"label" : "pqName", "tail" : "(): String", "member" : "scales.xml.QName.pqName", "link" : "scales\/xml\/QName.html#pqName:String", "kind" : "def"}, {"label" : "qName", "tail" : "(): String", "member" : "scales.xml.QName.qName", "link" : "scales\/xml\/QName.html#qName:String", "kind" : "def"}, {"label" : "hasPrefix", "tail" : "(): Boolean", "member" : "scales.xml.QName.hasPrefix", "link" : "scales\/xml\/QName.html#hasPrefix:Boolean", "kind" : "def"}, {"label" : "qNameVersion", "tail" : "(): XmlVersion", "member" : "scales.xml.QName.qNameVersion", "link" : "scales\/xml\/QName.html#qNameVersion:scales.xml.XmlVersion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/QName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/QName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/QName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/QName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/QName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/QName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/QName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/QName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/QName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/QName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/QName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/QName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/QName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/QName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/QName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/QName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "prefix", "tail" : "(): Option[String]", "member" : "scales.xml.QName.prefix", "link" : "scales\/xml\/QName.html#prefix:Option[String]", "kind" : "abstract def"}, {"label" : "namespace", "tail" : "(): UnderlyingNamespace", "member" : "scales.xml.QName.namespace", "link" : "scales\/xml\/QName.html#namespace:scales.xml.UnderlyingNamespace", "kind" : "abstract def"}, {"label" : "local", "tail" : ": String", "member" : "scales.xml.QName.local", "link" : "scales\/xml\/QName.html#local:String", "kind" : "abstract val"}], "shortDescription" : "QNames together with a tree structure form the basis of XML, what type of QName is available depends on Attribute (either no namespace or prefxied - fully qualified) or Elem (attribute's options and non prefixed but still qualified)", "trait" : "scales\/xml\/QName.html", "kind" : "trait"}, {"name" : "scales.xml.ScalesXml", "shortDescription" : "", "object" : "scales\/xml\/ScalesXml$.html", "members_object" : [{"label" : "ComparisonContextNames", "tail" : "", "member" : "scales.xml.equals.ComparisonContextImplicits.ComparisonContextNames", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#ComparisonContextNames", "kind" : "implicit object"}, {"label" : "BasicPathNames", "tail" : "", "member" : "scales.xml.equals.ComparisonContextImplicits.BasicPathNames", "link" : "scales\/xml\/equals\/ComparisonContextImplicits.html#BasicPathNames", "kind" : "implicit object"}, {"label" : "DeclarationConverter", "tail" : "", "member" : "scales.xml.serializers.XmlPrinterImplicits.DeclarationConverter", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#DeclarationConverterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ToScales", "tail" : "", "member" : "scales.xml.impl.XmlUtilsImplicits.ToScales", "link" : "scales\/xml\/impl\/XmlUtilsImplicits.html#ToScalesextendsAnyRef", "kind" : "class"}, {"label" : "fromCompToEq", "tail" : "(comp: XmlComparison[T]): Equal[T]", "member" : "scales.xml.equals.FromEqualsImplicit.fromCompToEq", "link" : "scales\/xml\/ScalesXml$.html#fromCompToEq[T](implicitcomp:scales.xml.equals.XmlComparison[T]):scalaz.Equal[T]", "kind" : "implicit def"}, {"label" : "itrDocLikeWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[(Iterator[xml.PullType], DocLike)]", "member" : "scales.xml.equals.StreamComparableImplicits.itrDocLikeWrapper", "link" : "scales\/xml\/ScalesXml$.html#itrDocLikeWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[(Iterator[scales.xml.PullType],scales.xml.DocLike)]", "kind" : "implicit def"}, {"label" : "closeablePullWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[xml.CloseablePull]", "member" : "scales.xml.equals.StreamComparableImplicits.closeablePullWrapper", "link" : "scales\/xml\/ScalesXml$.html#closeablePullWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[scales.xml.CloseablePull]", "kind" : "implicit def"}, {"label" : "xmlPullWrapper", "tail" : "(bodyComp: XmlComparison[Iterator[xml.PullType]]): DocLikeWrapper[XmlPull]", "member" : "scales.xml.equals.StreamComparableImplicits.xmlPullWrapper", "link" : "scales\/xml\/ScalesXml$.html#xmlPullWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[Iterator[scales.xml.PullType]]):scales.xml.equals.DocLikeWrapper[scales.xml.XmlPull]", "kind" : "implicit def"}, {"label" : "docWrapper", "tail" : "(bodyComp: XmlComparison[xml.XmlTree]): DocLikeWrapper[Doc]", "member" : "scales.xml.equals.StreamComparableImplicits.docWrapper", "link" : "scales\/xml\/ScalesXml$.html#docWrapper(implicitbodyComp:scales.xml.equals.XmlComparison[scales.xml.XmlTree]):scales.xml.equals.DocLikeWrapper[scales.xml.Doc]", "kind" : "implicit def"}, {"label" : "itrDocLikeToStreamComparable", "tail" : "(t: (T, DocLike))(arg0: (T) ⇒ Iterator[xml.PullType]): StreamComparable[T]", "member" : "scales.xml.equals.StreamComparableImplicits.itrDocLikeToStreamComparable", "link" : "scales\/xml\/ScalesXml$.html#itrDocLikeToStreamComparable[T](t:(T,scales.xml.DocLike))(implicitevidence$4:T=>Iterator[scales.xml.PullType]):scales.xml.equals.StreamComparable[T]", "kind" : "implicit def"}, {"label" : "fromStreamToStreamComparable", "tail" : "(t: T)(arg0: (T) ⇒ Iterator[xml.PullType]): StreamComparable[T]", "member" : "scales.xml.equals.StreamComparableImplicits.fromStreamToStreamComparable", "link" : "scales\/xml\/ScalesXml$.html#fromStreamToStreamComparable[T](t:T)(implicitevidence$3:T=>Iterator[scales.xml.PullType]):scales.xml.equals.StreamComparable[T]", "kind" : "implicit def"}, {"label" : "xmlPathToComparable", "tail" : ": (xml.XmlPath) ⇒ StreamComparable[xml.XmlPath]", "member" : "scales.xml.equals.StreamComparableImplicits.xmlPathToComparable", "link" : "scales\/xml\/ScalesXml$.html#xmlPathToComparable:scales.xml.XmlPath=>scales.xml.equals.StreamComparable[scales.xml.XmlPath]", "kind" : "implicit val"}, {"label" : "itrPlusDocAsAnIterator", "tail" : ": ((Iterator[xml.PullType], DocLike)) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.StreamComparableImplicits.itrPlusDocAsAnIterator", "link" : "scales\/xml\/ScalesXml$.html#itrPlusDocAsAnIterator:((Iterator[scales.xml.PullType],scales.xml.DocLike))=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "xmlPullIsAn", "tail" : ": (XmlPull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.xmlPullIsAn", "link" : "scales\/xml\/ScalesXml$.html#xmlPullIsAn:scales.xml.XmlPull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "closeablePullIsAn", "tail" : ": (xml.CloseablePull) ⇒ Iterator[xml.PullType]", "member" : "scales.xml.equals.TheyReallyAreIterators.closeablePullIsAn", "link" : "scales\/xml\/ScalesXml$.html#closeablePullIsAn:scales.xml.CloseablePull=>Iterator[scales.xml.PullType]", "kind" : "implicit val"}, {"label" : "defaultDocLikeComparison", "tail" : "(ic: XmlComparison[XmlItem], docWrapper: DocLikeWrapper[T]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultDocLikeEquals.defaultDocLikeComparison", "link" : "scales\/xml\/ScalesXml$.html#defaultDocLikeComparison[T](implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitdocWrapper:scales.xml.equals.DocLikeWrapper[T]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultQNameTokenComparison", "tail" : ": Option[(ComparisonContext, String, String) ⇒ Boolean]", "member" : "scales.xml.equals.DefaultQNameToken.defaultQNameTokenComparison", "link" : "scales\/xml\/ScalesXml$.html#defaultQNameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]", "kind" : "implicit val"}, {"label" : "qnameComparison", "tail" : "(qe: Equal[QName]): XmlComparison[QName]", "member" : "scales.xml.equals.QNameEquals.qnameComparison", "link" : "scales\/xml\/ScalesXml$.html#qnameComparison(implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.QName]", "kind" : "implicit def"}, {"label" : "toDefaultStreamComparison", "tail" : "(tv: (T) ⇒ StreamComparable[T], ic: XmlComparison[XmlItem], ec: XmlComparison[Elem], qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[T]", "member" : "scales.xml.equals.DefaultStreamEquals.toDefaultStreamComparison", "link" : "scales\/xml\/ScalesXml$.html#toDefaultStreamComparison[T](implicittv:T=>scales.xml.equals.StreamComparable[T],implicitic:scales.xml.equals.XmlComparison[scales.xml.XmlItem],implicitec:scales.xml.equals.XmlComparison[scales.xml.Elem],implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[T]", "kind" : "implicit def"}, {"label" : "defaultElemComparison", "tail" : "(ae: XmlComparison[xml.Attributes], qe: Equal[QName]): XmlComparison[Elem]", "member" : "scales.xml.equals.DefaultElemEquals.defaultElemComparison", "link" : "scales\/xml\/ScalesXml$.html#defaultElemComparison(implicitae:scales.xml.equals.XmlComparison[scales.xml.Attributes],implicitqe:scalaz.Equal[scales.xml.QName]):scales.xml.equals.XmlComparison[scales.xml.Elem]", "kind" : "implicit def"}, {"label" : "defaultAttributesComparison", "tail" : "(ac: XmlComparison[Attribute]): XmlComparison[xml.Attributes]", "member" : "scales.xml.equals.DefaultAttributesEquals.defaultAttributesComparison", "link" : "scales\/xml\/ScalesXml$.html#defaultAttributesComparison(implicitac:scales.xml.equals.XmlComparison[scales.xml.Attribute]):scales.xml.equals.XmlComparison[scales.xml.Attributes]", "kind" : "implicit def"}, {"label" : "defaultAttributeComparison", "tail" : "(qe: Equal[QName], qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[Attribute]", "member" : "scales.xml.equals.DefaultAttributeEquals.defaultAttributeComparison", "link" : "scales\/xml\/ScalesXml$.html#defaultAttributeComparison(implicitqe:scalaz.Equal[scales.xml.QName],implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.Attribute]", "kind" : "implicit def"}, {"label" : "defaultXmlItemComparison", "tail" : "(qnameTokenComparison: Option[(ComparisonContext, String, String) ⇒ Boolean]): XmlComparison[XmlItem]", "member" : "scales.xml.equals.DefaultItemEquals.defaultXmlItemComparison", "link" : "scales\/xml\/ScalesXml$.html#defaultXmlItemComparison(implicitqnameTokenComparison:Option[(scales.xml.equals.ComparisonContext,String,String)=>Boolean]):scales.xml.equals.XmlComparison[scales.xml.XmlItem]", "kind" : "implicit def"}, {"label" : "dslToStream", "tail" : "(ds: DslBuilder): Iterator[xml.PullType]", "member" : "scales.xml.trax.PullTypeConversionImplicits.dslToStream", "link" : "scales\/xml\/ScalesXml$.html#dslToStream(ds:scales.xml.dsl.DslBuilder):Iterator[scales.xml.PullType]", "kind" : "implicit def"}, {"label" : "treeToStream", "tail" : "(tree: xml.XmlTree): Iterator[xml.PullType]", "member" : "scales.xml.trax.PullTypeConversionImplicits.treeToStream", "link" : "scales\/xml\/ScalesXml$.html#treeToStream(tree:scales.xml.XmlTree):Iterator[scales.xml.PullType]", "kind" : "implicit def"}, {"label" : "BooleanToBoolean", "tail" : ": (Boolean) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.BooleanToBoolean", "link" : "scales\/xml\/ScalesXml$.html#BooleanToBoolean:Boolean=>Boolean", "kind" : "implicit val"}, {"label" : "NumberToBoolean", "tail" : ": (Number) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.NumberToBoolean", "link" : "scales\/xml\/ScalesXml$.html#NumberToBoolean:Number=>Boolean", "kind" : "implicit val"}, {"label" : "StringToBoolean", "tail" : ": (String) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.StringToBoolean", "link" : "scales\/xml\/ScalesXml$.html#StringToBoolean:String=>Boolean", "kind" : "implicit val"}, {"label" : "IterableToBoolean", "tail" : ": (Iterable[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.IterableToBoolean", "link" : "scales\/xml\/ScalesXml$.html#IterableToBoolean:Iterable[_]=>Boolean", "kind" : "implicit val"}, {"label" : "AttributePathsToBoolean", "tail" : ": (xpath.AttributePaths[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.AttributePathsToBoolean", "link" : "scales\/xml\/ScalesXml$.html#AttributePathsToBoolean:scales.xml.xpath.AttributePaths[_]=>Boolean", "kind" : "implicit val"}, {"label" : "XPathToBoolean", "tail" : ": (xpath.XPath[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.XPathToBoolean", "link" : "scales\/xml\/ScalesXml$.html#XPathToBoolean:scales.xml.xpath.XPath[_]=>Boolean", "kind" : "implicit val"}, {"label" : "fromAPathToAComparisoms", "tail" : "(path: xpath.AttributePath): AttributePathComparisoms", "member" : "scales.xml.xpath.XmlPathImplicits.fromAPathToAComparisoms", "link" : "scales\/xml\/ScalesXml$.html#fromAPathToAComparisoms(path:scales.xml.xpath.AttributePath):scales.xml.xpath.AttributePathComparisoms", "kind" : "implicit def"}, {"label" : "fromPathToComparisoms", "tail" : "(path: xml.XmlPath): XmlPathComparisoms", "member" : "scales.xml.xpath.XmlPathImplicits.fromPathToComparisoms", "link" : "scales\/xml\/ScalesXml$.html#fromPathToComparisoms(path:scales.xml.XmlPath):scales.xml.xpath.XmlPathComparisoms", "kind" : "implicit def"}, {"label" : "fromAttributePathsToIterable", "tail" : "(attrs: xpath.AttributePaths[T]): Iterable[xpath.AttributePath]", "member" : "scales.xml.xpath.XmlPathImplicits.fromAttributePathsToIterable", "link" : "scales\/xml\/ScalesXml$.html#fromAttributePathsToIterable[T<:Iterable[scales.xml.XmlPath]](attrs:scales.xml.xpath.AttributePaths[T]):Iterable[scales.xml.xpath.AttributePath]", "kind" : "implicit def"}, {"label" : "fromXPathToIterable", "tail" : "(xpath: xpath.XPath[_]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XmlPathImplicits.fromXPathToIterable", "link" : "scales\/xml\/ScalesXml$.html#fromXPathToIterable(xpath:scales.xml.xpath.XPath[_]):Iterable[scales.xml.XmlPath]", "kind" : "implicit def"}, {"label" : "fromXmlPathToXPath", "tail" : "(xmlPath: xml.XmlPath)(cbf: CanBuildFrom[List[xml.XmlPath], xml.XmlPath, List[xml.XmlPath]]): xpath.XPath[List[xml.XmlPath]]", "member" : "scales.xml.xpath.XmlPathImplicits.fromXmlPathToXPath", "link" : "scales\/xml\/ScalesXml$.html#fromXmlPathToXPath(xmlPath:scales.xml.XmlPath)(implicitcbf:scala.collection.generic.CanBuildFrom[List[scales.xml.XmlPath],scales.xml.XmlPath,List[scales.xml.XmlPath]]):scales.xml.xpath.XPath[List[scales.xml.XmlPath]]", "kind" : "implicit def"}, {"label" : "fromAttrPathToAttribute", "tail" : "(attrPath: xpath.AttributePath): Attribute", "member" : "scales.xml.xpath.XmlPathImplicits.fromAttrPathToAttribute", "link" : "scales\/xml\/ScalesXml$.html#fromAttrPathToAttribute(attrPath:scales.xml.xpath.AttributePath):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "samePath", "tail" : ": (xml.XmlPath, xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.samePath", "link" : "scales\/xml\/ScalesXml$.html#samePath:(scales.xml.XmlPath,scales.xml.XmlPath)=>Boolean", "kind" : "implicit val"}, {"label" : "xpathToNames", "tail" : "(): Names[xpath.XPath[T]]", "member" : "scales.xml.xpath.NamesImplicits.xpathToNames", "link" : "scales\/xml\/ScalesXml$.html#xpathToNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsNames", "tail" : "(): Names[xpath.AttributePaths[T]]", "member" : "scales.xml.xpath.NamesImplicits.attribPathsNames", "link" : "scales\/xml\/ScalesXml$.html#attribPathsNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslNames", "tail" : ": DslNames.type", "member" : "scales.xml.xpath.NamesImplicits.dslNames", "link" : "scales\/xml\/ScalesXml$.html#dslNames:scales.xml.xpath.DslNames.type", "kind" : "implicit val"}, {"label" : "aqnameNames", "tail" : ": AQNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.aqnameNames", "link" : "scales\/xml\/ScalesXml$.html#aqnameNames:scales.xml.xpath.AQNameNames.type", "kind" : "implicit val"}, {"label" : "qnameNames", "tail" : ": QNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.qnameNames", "link" : "scales\/xml\/ScalesXml$.html#qnameNames:scales.xml.xpath.QNameNames.type", "kind" : "implicit val"}, {"label" : "xtreeNames", "tail" : ": XmlTreeNames.type", "member" : "scales.xml.xpath.NamesImplicits.xtreeNames", "link" : "scales\/xml\/ScalesXml$.html#xtreeNames:scales.xml.xpath.XmlTreeNames.type", "kind" : "implicit val"}, {"label" : "elemNames", "tail" : ": ElemNames.type", "member" : "scales.xml.xpath.NamesImplicits.elemNames", "link" : "scales\/xml\/ScalesXml$.html#elemNames:scales.xml.xpath.ElemNames.type", "kind" : "implicit val"}, {"label" : "xpathNames", "tail" : ": XmlPathNames.type", "member" : "scales.xml.xpath.NamesImplicits.xpathNames", "link" : "scales\/xml\/ScalesXml$.html#xpathNames:scales.xml.xpath.XmlPathNames.type", "kind" : "implicit val"}, {"label" : "attributePathNames", "tail" : ": AttributePathNames.type", "member" : "scales.xml.xpath.NamesImplicits.attributePathNames", "link" : "scales\/xml\/ScalesXml$.html#attributePathNames:scales.xml.xpath.AttributePathNames.type", "kind" : "implicit val"}, {"label" : "attribNames", "tail" : ": AttributeNames.type", "member" : "scales.xml.xpath.NamesImplicits.attribNames", "link" : "scales\/xml\/ScalesXml$.html#attribNames:scales.xml.xpath.AttributeNames.type", "kind" : "implicit val"}, {"label" : "dif", "tail" : ": DIF", "member" : "scales.xml.xpath.NamesImplicits.dif", "link" : "scales\/xml\/ScalesXml$.html#dif:scales.xml.xpath.DIF", "kind" : "implicit val"}, {"label" : "xpathToTextValue", "tail" : "(): TextValue[xpath.XPath[T]]", "member" : "scales.xml.xpath.TextImplicits.xpathToTextValue", "link" : "scales\/xml\/ScalesXml$.html#xpathToTextValue[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsText", "tail" : "(): TextValue[xpath.AttributePaths[T]]", "member" : "scales.xml.xpath.TextImplicits.attribPathsText", "link" : "scales\/xml\/ScalesXml$.html#attribPathsText[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslText", "tail" : ": DslText.type", "member" : "scales.xml.xpath.TextImplicits.dslText", "link" : "scales\/xml\/ScalesXml$.html#dslText:scales.xml.xpath.DslText.type", "kind" : "implicit val"}, {"label" : "itemOrElemText", "tail" : ": ItemOrElemText.type", "member" : "scales.xml.xpath.TextImplicits.itemOrElemText", "link" : "scales\/xml\/ScalesXml$.html#itemOrElemText:scales.xml.xpath.ItemOrElemText.type", "kind" : "implicit val"}, {"label" : "itemText", "tail" : ": XmlItemText.type", "member" : "scales.xml.xpath.TextImplicits.itemText", "link" : "scales\/xml\/ScalesXml$.html#itemText:scales.xml.xpath.XmlItemText.type", "kind" : "implicit val"}, {"label" : "xmlpathText", "tail" : ": XmlPathText.type", "member" : "scales.xml.xpath.TextImplicits.xmlpathText", "link" : "scales\/xml\/ScalesXml$.html#xmlpathText:scales.xml.xpath.XmlPathText.type", "kind" : "implicit val"}, {"label" : "attribPathText", "tail" : ": AttributePathText.type", "member" : "scales.xml.xpath.TextImplicits.attribPathText", "link" : "scales\/xml\/ScalesXml$.html#attribPathText:scales.xml.xpath.AttributePathText.type", "kind" : "implicit val"}, {"label" : "attribText", "tail" : ": AttributeText.type", "member" : "scales.xml.xpath.TextImplicits.attribText", "link" : "scales\/xml\/ScalesXml$.html#attribText:scales.xml.xpath.AttributeText.type", "kind" : "implicit val"}, {"label" : "xtreeText", "tail" : ": XmlTreeText.type", "member" : "scales.xml.xpath.TextImplicits.xtreeText", "link" : "scales\/xml\/ScalesXml$.html#xtreeText:scales.xml.xpath.XmlTreeText.type", "kind" : "implicit val"}, {"label" : "toWithWriter", "tail" : "(decl: Declaration): DeclarationConverter", "member" : "scales.xml.serializers.XmlPrinterImplicits.toWithWriter", "link" : "scales\/xml\/ScalesXml$.html#toWithWriter(decl:scales.xml.Declaration):XmlPrinterImplicits.this.DeclarationConverter", "kind" : "implicit def"}, {"label" : "defaultSerializerFactory", "tail" : ": SerializerFactory", "member" : "scales.xml.serializers.XmlPrinterImplicits.defaultSerializerFactory", "link" : "scales\/xml\/ScalesXml$.html#defaultSerializerFactory:scales.xml.serializers.SerializerFactory", "kind" : "implicit val"}, {"label" : "fromSerializeableToWriteTo", "tail" : "(it: T)(arg0: SerializeableXml[T]): WriteTo[T]", "member" : "scales.xml.serializers.XmlPrinterImplicits.fromSerializeableToWriteTo", "link" : "scales\/xml\/ScalesXml$.html#fromSerializeableToWriteTo[T](it:T)(implicitevidence$1:scales.xml.serializers.SerializeableXml[T]):scales.xml.serializers.WriteTo[T]", "kind" : "implicit def"}, {"label" : "pullAndDocSerializeable", "tail" : ": SerializeableXml[(Iterator[xml.PullType], DocLike)]", "member" : "scales.xml.serializers.SerializerImplicits.pullAndDocSerializeable", "link" : "scales\/xml\/ScalesXml$.html#pullAndDocSerializeable:scales.xml.serializers.SerializeableXml[(Iterator[scales.xml.PullType],scales.xml.DocLike)]", "kind" : "implicit val"}, {"label" : "pullOnlySerializeable", "tail" : ": SerializeableXml[XmlPull]", "member" : "scales.xml.serializers.SerializerImplicits.pullOnlySerializeable", "link" : "scales\/xml\/ScalesXml$.html#pullOnlySerializeable:scales.xml.serializers.SerializeableXml[scales.xml.XmlPull]", "kind" : "implicit val"}, {"label" : "pullCloseableOnlySerializeable", "tail" : ": SerializeableXml[xml.CloseablePull]", "member" : "scales.xml.serializers.SerializerImplicits.pullCloseableOnlySerializeable", "link" : "scales\/xml\/ScalesXml$.html#pullCloseableOnlySerializeable:scales.xml.serializers.SerializeableXml[scales.xml.CloseablePull]", "kind" : "implicit val"}, {"label" : "streamSerializeable", "tail" : ": SerializeableXml[Iterator[xml.PullType]]", "member" : "scales.xml.serializers.SerializerImplicits.streamSerializeable", "link" : "scales\/xml\/ScalesXml$.html#streamSerializeable:scales.xml.serializers.SerializeableXml[Iterator[scales.xml.PullType]]", "kind" : "implicit val"}, {"label" : "elemSerializable", "tail" : ": SerializeableXml[Elem]", "member" : "scales.xml.serializers.SerializerImplicits.elemSerializable", "link" : "scales\/xml\/ScalesXml$.html#elemSerializable:scales.xml.serializers.SerializeableXml[scales.xml.Elem]", "kind" : "implicit val"}, {"label" : "docSerializeable", "tail" : ": SerializeableXml[Doc]", "member" : "scales.xml.serializers.SerializerImplicits.docSerializeable", "link" : "scales\/xml\/ScalesXml$.html#docSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.Doc]", "kind" : "implicit val"}, {"label" : "builderSerializeable", "tail" : ": SerializeableXml[DslBuilder]", "member" : "scales.xml.serializers.SerializerImplicits.builderSerializeable", "link" : "scales\/xml\/ScalesXml$.html#builderSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.dsl.DslBuilder]", "kind" : "implicit val"}, {"label" : "treeSerializeable", "tail" : ": SerializeableXml[xml.XmlTree]", "member" : "scales.xml.serializers.SerializerImplicits.treeSerializeable", "link" : "scales\/xml\/ScalesXml$.html#treeSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.XmlTree]", "kind" : "implicit val"}, {"label" : "docToSource", "tail" : "(doc: Doc)(serf: SerializerFactory, sf: SerializeableXml[Doc]): Source", "member" : "scales.xml.trax.TraxConversionImplicits.docToSource", "link" : "scales\/xml\/ScalesXml$.html#docToSource(doc:scales.xml.Doc)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsf:scales.xml.serializers.SerializeableXml[scales.xml.Doc]):javax.xml.transform.Source", "kind" : "implicit def"}, {"label" : "treeToSource", "tail" : "(tree: xml.XmlTree)(serf: SerializerFactory, sf: SerializeableXml[xml.XmlTree]): Source", "member" : "scales.xml.trax.TraxConversionImplicits.treeToSource", "link" : "scales\/xml\/ScalesXml$.html#treeToSource(tree:scales.xml.XmlTree)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsf:scales.xml.serializers.SerializeableXml[scales.xml.XmlTree]):javax.xml.transform.Source", "kind" : "implicit def"}, {"label" : "urlToSource", "tail" : "(url: URL): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.urlToSource", "link" : "scales\/xml\/ScalesXml$.html#urlToSource(url:java.net.URL):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "readerToSource", "tail" : "(source: Reader): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.readerToSource", "link" : "scales\/xml\/ScalesXml$.html#readerToSource(source:java.io.Reader):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "streamToSource", "tail" : "(source: InputStream): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.streamToSource", "link" : "scales\/xml\/ScalesXml$.html#streamToSource(source:java.io.InputStream):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "fromOptionalDslToOptionalTree", "tail" : "(optionalDsl: OptionalDslBuilder): Option[xml.ItemOrElem]", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromOptionalDslToOptionalTree", "link" : "scales\/xml\/ScalesXml$.html#fromOptionalDslToOptionalTree(optionalDsl:scales.xml.dsl.OptionalDslBuilder):Option[scales.xml.ItemOrElem]", "kind" : "implicit def"}, {"label" : "fromPQNameToOptionalAttribute", "tail" : "(name: xml.AttributeQName): OptionalAttribute", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromPQNameToOptionalAttribute", "link" : "scales\/xml\/ScalesXml$.html#fromPQNameToOptionalAttribute(name:scales.xml.AttributeQName):scales.xml.dsl.OptionalAttribute", "kind" : "implicit def"}, {"label" : "fromTreeToODsl", "tail" : "(tree: xml.XmlTree): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromTreeToODsl", "link" : "scales\/xml\/ScalesXml$.html#fromTreeToODsl(tree:scales.xml.XmlTree):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromQNameToOptionalBuilder", "tail" : "(qname: QName): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromQNameToOptionalBuilder", "link" : "scales\/xml\/ScalesXml$.html#fromQNameToOptionalBuilder(qname:scales.xml.QName):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromElemToOptionalBuilder", "tail" : "(elem: Elem): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromElemToOptionalBuilder", "link" : "scales\/xml\/ScalesXml$.html#fromElemToOptionalBuilder(elem:scales.xml.Elem):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromNSToNSMPimper", "tail" : "(ns: Namespace): NSMPimper", "member" : "scales.xml.dsl.DslImplicits.fromNSToNSMPimper", "link" : "scales\/xml\/ScalesXml$.html#fromNSToNSMPimper(ns:scales.xml.Namespace):scales.xml.dsl.NSMPimper", "kind" : "implicit def"}, {"label" : "fromTreeToDsl", "tail" : "(tree: xml.XmlTree): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromTreeToDsl", "link" : "scales\/xml\/ScalesXml$.html#fromTreeToDsl(tree:scales.xml.XmlTree):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "fromQNameToQNamePimper", "tail" : "(qname: QName): QNameMPimper", "member" : "scales.xml.dsl.DslImplicits.fromQNameToQNamePimper", "link" : "scales\/xml\/ScalesXml$.html#fromQNameToQNamePimper(qname:scales.xml.QName):scales.xml.dsl.QNameMPimper", "kind" : "implicit def"}, {"label" : "fromQNameToBuilder", "tail" : "(qname: QName): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromQNameToBuilder", "link" : "scales\/xml\/ScalesXml$.html#fromQNameToBuilder(qname:scales.xml.QName):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "fromStringToText", "tail" : "(value: String): Text", "member" : "scales.xml.dsl.DslImplicits.fromStringToText", "link" : "scales\/xml\/ScalesXml$.html#fromStringToText(value:String):scales.xml.Text", "kind" : "implicit def"}, {"label" : "fromElemToTree", "tail" : "(elem: Elem): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromElemToTree", "link" : "scales\/xml\/ScalesXml$.html#fromElemToTree(elem:scales.xml.Elem):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromQNameToTree", "tail" : "(qname: QName): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromQNameToTree", "link" : "scales\/xml\/ScalesXml$.html#fromQNameToTree(qname:scales.xml.QName):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromDslBuilderToTree", "tail" : "(dslB: DslBuilder): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromDslBuilderToTree", "link" : "scales\/xml\/ScalesXml$.html#fromDslBuilderToTree(dslB:scales.xml.dsl.DslBuilder):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromQNamePairToAttribute", "tail" : "(pair: (PrefixedQName, String)): Attribute", "member" : "scales.xml.dsl.DslImplicits.fromQNamePairToAttribute", "link" : "scales\/xml\/ScalesXml$.html#fromQNamePairToAttribute(pair:(scales.xml.PrefixedQName,String)):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "fromElemToBuilder", "tail" : "(elem: Elem): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromElemToBuilder", "link" : "scales\/xml\/ScalesXml$.html#fromElemToBuilder(elem:scales.xml.Elem):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "toScalesXml", "tail" : "(elem: scala.xml.Elem)(xmlVer: XmlVersion): ToScales", "member" : "scales.xml.impl.XmlUtilsImplicits.toScalesXml", "link" : "scales\/xml\/ScalesXml$.html#toScalesXml(elem:scala.xml.Elem)(implicitxmlVer:scales.xml.XmlVersion):XmlUtilsImplicits.this.ToScales", "kind" : "implicit def"}, {"label" : "localStringToNSBuilder", "tail" : "(local: String)(ver: XmlVersion, fromParser: FromParser): StringToNSBuilder", "member" : "scales.xml.impl.QNameImplicits.localStringToNSBuilder", "link" : "scales\/xml\/ScalesXml$.html#localStringToNSBuilder(local:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.impl.StringToNSBuilder", "kind" : "implicit def"}, {"label" : "stringToNoNamespace", "tail" : "(localOnly: String)(ver: XmlVersion, fromParser: FromParser): NoNamespaceQName", "member" : "scales.xml.impl.QNameImplicits.stringToNoNamespace", "link" : "scales\/xml\/ScalesXml$.html#stringToNoNamespace(localOnly:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.NoNamespaceQName", "kind" : "implicit def"}, {"label" : "defaultVersion", "tail" : ": XmlVersion", "member" : "scales.xml.impl.DefaultXmlVersion.defaultVersion", "link" : "scales\/xml\/ScalesXml$.html#defaultVersion:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "toAttrS", "tail" : "(local: String)(ver: XmlVersion): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrS", "link" : "scales\/xml\/ScalesXml$.html#toAttrS(local:String)(implicitver:scales.xml.XmlVersion):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "fromParserDefault", "tail" : ": FromParser", "member" : "scales.xml.impl.XmlTypesImplicits.fromParserDefault", "link" : "scales\/xml\/ScalesXml$.html#fromParserDefault:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "xpathSortingClassManifest", "tail" : ": ClassManifest[(Position[XmlItem, Elem, xml.XCC], xml.XmlPath)]", "member" : "scales.xml.impl.XmlTypesImplicits.xpathSortingClassManifest", "link" : "scales\/xml\/ScalesXml$.html#xpathSortingClassManifest:reflect.ClassManifest[(scales.utils.collection.path.Position[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XmlPath)]", "kind" : "implicit val"}, {"label" : "docToTree", "tail" : "(doc: Doc): xml.XmlTree", "member" : "scales.xml.impl.XmlTypesImplicits.docToTree", "link" : "scales\/xml\/ScalesXml$.html#docToTree(doc:scales.xml.Doc):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "aqpairToAttribute", "tail" : "(pair: (xml.AttributeQName, String)): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.aqpairToAttribute", "link" : "scales\/xml\/ScalesXml$.html#aqpairToAttribute(pair:(scales.xml.AttributeQName,String)):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "toQName", "tail" : "(attribQName: xml.AttributeQName): QName", "member" : "scales.xml.impl.XmlTypesImplicits.toQName", "link" : "scales\/xml\/ScalesXml$.html#toQName(attribQName:scales.xml.AttributeQName):scales.xml.QName", "kind" : "implicit def"}, {"label" : "qnameEquiv", "tail" : ": Equiv[QName]", "member" : "scales.xml.impl.XmlTypesImplicits.qnameEquiv", "link" : "scales\/xml\/ScalesXml$.html#qnameEquiv:scales.utils.Equiv[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "toQNameF", "tail" : ": (Attribute) ⇒ QName", "member" : "scales.xml.impl.XmlTypesImplicits.toQNameF", "link" : "scales\/xml\/ScalesXml$.html#toQNameF:scales.xml.Attribute=>scales.xml.QName", "kind" : "implicit val"}, {"label" : "qnameEqual", "tail" : ": Equal[QName]", "member" : "scales.xml.impl.XmlTypesImplicits.qnameEqual", "link" : "scales\/xml\/ScalesXml$.html#qnameEqual:scalaz.Equal[scales.xml.QName]", "kind" : "implicit val"}, {"label" : "toAttr", "tail" : "(pair: (String, String))(ver: XmlVersion, fromParser: FromParser): Attribute", "member" : "scales.xml.impl.XmlTypesImplicits.toAttr", "link" : "scales\/xml\/ScalesXml$.html#toAttr(pair:(String,String))(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "toAttrQNameP", "tail" : "(prens: PrefixedQName): xml.AttributeQName", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrQNameP", "link" : "scales\/xml\/ScalesXml$.html#toAttrQNameP(prens:scales.xml.PrefixedQName):scales.xml.AttributeQName", "kind" : "implicit def"}, {"label" : "toAttrQNameN", "tail" : "(nons: NoNamespaceQName): xml.AttributeQName", "member" : "scales.xml.impl.XmlTypesImplicits.toAttrQNameN", "link" : "scales\/xml\/ScalesXml$.html#toAttrQNameN(nons:scales.xml.NoNamespaceQName):scales.xml.AttributeQName", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/ScalesXml$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/ScalesXml$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/ScalesXml$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/ScalesXml$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/ScalesXml$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/ScalesXml$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/ScalesXml$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/ScalesXml$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/ScalesXml$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/ScalesXml$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/ScalesXml$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/ScalesXml$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/ScalesXml$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/ScalesXml$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/ScalesXml$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/ScalesXml$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/ScalesXml$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/ScalesXml$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/ScalesXml$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.Text", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.Text#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "scales.xml.Text.value", "link" : "scales\/xml\/Text.html#value:String", "kind" : "val"}, {"label" : "doEquals", "tail" : "(other: Any, clazz: Class[_]): Boolean", "member" : "scales.xml.XmlItem.doEquals", "link" : "scales\/xml\/Text.html#doEquals(other:Any,clazz:Class[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.XmlItem.hashCode", "link" : "scales\/xml\/Text.html#hashCode():Int", "kind" : "def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/xml\/Text.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/xml\/Text.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.get", "link" : "scales\/xml\/Text.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/xml\/Text.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/xml\/Text.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/xml\/Text.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/xml\/Text.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/xml\/Text.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Text.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Text.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Text.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Text.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Text.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Text.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Text.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Text.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Text.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Text.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Text.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Text.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Text.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Text.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Text.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Text.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/Text.html", "kind" : "case class"}, {"name" : "scales.xml.UnderlyingNamespace", "members_trait" : [{"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.UnderlyingNamespace.equals", "link" : "scales\/xml\/UnderlyingNamespace.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.UnderlyingNamespace.hashCode", "link" : "scales\/xml\/UnderlyingNamespace.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/UnderlyingNamespace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/UnderlyingNamespace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/UnderlyingNamespace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/UnderlyingNamespace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/UnderlyingNamespace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/UnderlyingNamespace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/UnderlyingNamespace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnderlyingNamespace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnderlyingNamespace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnderlyingNamespace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/UnderlyingNamespace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/UnderlyingNamespace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/UnderlyingNamespace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/UnderlyingNamespace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/UnderlyingNamespace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/UnderlyingNamespace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/UnderlyingNamespace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "uri", "tail" : ": String", "member" : "scales.xml.UnderlyingNamespace.uri", "link" : "scales\/xml\/UnderlyingNamespace.html#uri:String", "kind" : "abstract val"}], "shortDescription" : "Seperate the notion of a normal Namespace and that of the \"empty namespace\" - no default namespace", "trait" : "scales\/xml\/UnderlyingNamespace.html", "kind" : "trait"}, {"name" : "scales.xml.UnprefixedQName", "members_trait" : [{"label" : "prefix", "tail" : "(): None.type", "member" : "scales.xml.UnprefixedQName.prefix", "link" : "scales\/xml\/UnprefixedQName.html#prefix:None.type", "kind" : "def"}, {"label" : "withPrefix", "tail" : "(prefix: String)(ver: XmlVersion, fromParser: FromParser): PrefixedQName", "member" : "scales.xml.CanHavePrefix.withPrefix", "link" : "scales\/xml\/UnprefixedQName.html#withPrefix(prefix:String)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.QName.hashCode", "link" : "scales\/xml\/UnprefixedQName.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scales.xml.QName.equals", "link" : "scales\/xml\/UnprefixedQName.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "=:=", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.=:=", "link" : "scales\/xml\/UnprefixedQName.html#=:=(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "====", "tail" : "(other: QName): Boolean", "member" : "scales.xml.QName.====", "link" : "scales\/xml\/UnprefixedQName.html#====(other:scales.xml.QName):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scales.xml.QName.toString", "link" : "scales\/xml\/UnprefixedQName.html#toString():String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(): String", "member" : "scales.xml.QName.qualifiedName", "link" : "scales\/xml\/UnprefixedQName.html#qualifiedName:String", "kind" : "def"}, {"label" : "pqName", "tail" : "(): String", "member" : "scales.xml.QName.pqName", "link" : "scales\/xml\/UnprefixedQName.html#pqName:String", "kind" : "def"}, {"label" : "qName", "tail" : "(): String", "member" : "scales.xml.QName.qName", "link" : "scales\/xml\/UnprefixedQName.html#qName:String", "kind" : "def"}, {"label" : "hasPrefix", "tail" : "(): Boolean", "member" : "scales.xml.QName.hasPrefix", "link" : "scales\/xml\/UnprefixedQName.html#hasPrefix:Boolean", "kind" : "def"}, {"label" : "qNameVersion", "tail" : "(): XmlVersion", "member" : "scales.xml.QName.qNameVersion", "link" : "scales\/xml\/UnprefixedQName.html#qNameVersion:scales.xml.XmlVersion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/UnprefixedQName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/UnprefixedQName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/UnprefixedQName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/UnprefixedQName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/UnprefixedQName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/UnprefixedQName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/UnprefixedQName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnprefixedQName.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnprefixedQName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnprefixedQName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/UnprefixedQName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/UnprefixedQName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/UnprefixedQName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/UnprefixedQName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/UnprefixedQName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/UnprefixedQName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "namespace", "tail" : ": Namespace", "member" : "scales.xml.CanHavePrefix.namespace", "link" : "scales\/xml\/UnprefixedQName.html#namespace:scales.xml.Namespace", "kind" : "abstract val"}, {"label" : "local", "tail" : ": String", "member" : "scales.xml.CanHavePrefix.local", "link" : "scales\/xml\/UnprefixedQName.html#local:String", "kind" : "abstract val"}], "shortDescription" : "Has no prefix but a namespace (e.g.", "object" : "scales\/xml\/UnprefixedQName$.html", "members_object" : [{"label" : "unapply", "tail" : "(n: UnprefixedQName): Some[(String, Namespace)]", "member" : "scales.xml.UnprefixedQName.unapply", "link" : "scales\/xml\/UnprefixedQName$.html#unapply(n:scales.xml.UnprefixedQName):Some[(String,scales.xml.Namespace)]", "kind" : "def"}, {"label" : "apply", "tail" : "(locali: String, namespacei: Namespace)(ver: XmlVersion, fromParser: FromParser): UnprefixedQName", "member" : "scales.xml.UnprefixedQName.apply", "link" : "scales\/xml\/UnprefixedQName$.html#apply(locali:String,namespacei:scales.xml.Namespace)(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/UnprefixedQName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/UnprefixedQName$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/UnprefixedQName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/UnprefixedQName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/UnprefixedQName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/UnprefixedQName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/UnprefixedQName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnprefixedQName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnprefixedQName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/UnprefixedQName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/UnprefixedQName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/UnprefixedQName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/UnprefixedQName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/UnprefixedQName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/UnprefixedQName$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/UnprefixedQName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/UnprefixedQName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/UnprefixedQName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/UnprefixedQName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/UnprefixedQName.html", "kind" : "trait"}, {"name" : "scales.xml.Xml10", "shortDescription" : "", "object" : "scales\/xml\/Xml10$.html", "members_object" : [{"label" : "version", "tail" : ": String", "member" : "scales.xml.Xml10.version", "link" : "scales\/xml\/Xml10$.html#version:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Xml10$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Xml10$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Xml10$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Xml10$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Xml10$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Xml10$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Xml10$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Xml10$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Xml10$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Xml10$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Xml10$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Xml10$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Xml10$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Xml10$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Xml10$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Xml10$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Xml10$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.Xml11", "shortDescription" : "", "object" : "scales\/xml\/Xml11$.html", "members_object" : [{"label" : "version", "tail" : ": String", "member" : "scales.xml.Xml11.version", "link" : "scales\/xml\/Xml11$.html#version:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/Xml11$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/Xml11$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/Xml11$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/Xml11$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/Xml11$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/Xml11$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/Xml11$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Xml11$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Xml11$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/Xml11$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/Xml11$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/Xml11$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/Xml11$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/Xml11$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/Xml11$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/Xml11$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/Xml11$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.XmlEvent", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/XmlEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/XmlEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/XmlEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/XmlEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/XmlEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/XmlEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/XmlEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/XmlEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/XmlEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/XmlEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/XmlEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/XmlEvent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/XmlEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/XmlEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/XmlEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/XmlEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Basis for typed pull api", "trait" : "scales\/xml\/XmlEvent.html", "kind" : "trait"}, {"name" : "scales.xml.XmlItem", "members_trait" : [{"label" : "doEquals", "tail" : "(other: Any, clazz: Class[_]): Boolean", "member" : "scales.xml.XmlItem.doEquals", "link" : "scales\/xml\/XmlItem.html#doEquals(other:Any,clazz:Class[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scales.xml.XmlItem.hashCode", "link" : "scales\/xml\/XmlItem.html#hashCode():Int", "kind" : "def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/xml\/XmlItem.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/xml\/XmlItem.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): XmlItem", "member" : "scales.utils.LeftLike.get", "link" : "scales\/xml\/XmlItem.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/xml\/XmlItem.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/xml\/XmlItem.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/xml\/XmlItem.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/xml\/XmlItem.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/xml\/XmlItem.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/XmlItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/XmlItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/XmlItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/XmlItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/XmlItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/XmlItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/XmlItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/XmlItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/XmlItem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/XmlItem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/XmlItem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/XmlItem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/XmlItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/XmlItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/XmlItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : ": String", "member" : "scales.xml.XmlItem.value", "link" : "scales\/xml\/XmlItem.html#value:String", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "scales\/xml\/XmlItem.html", "kind" : "trait"}, {"name" : "scales.xml.XmlVersion", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/XmlVersion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/XmlVersion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/XmlVersion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/XmlVersion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/XmlVersion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/XmlVersion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/XmlVersion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlVersion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlVersion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/XmlVersion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/XmlVersion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/XmlVersion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/XmlVersion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/XmlVersion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/XmlVersion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/XmlVersion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/XmlVersion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/XmlVersion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/XmlVersion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "version", "tail" : ": String", "member" : "scales.xml.XmlVersion.version", "link" : "scales\/xml\/XmlVersion.html#version:String", "kind" : "abstract val"}], "shortDescription" : "Scales supports many aspects of Xml10 and Xml11, verification of serialization and values takes place with the XmlVersion ADT.", "trait" : "scales\/xml\/XmlVersion.html", "kind" : "trait"}], "scales.xml.serializers" : [{"name" : "scales.xml.serializers.CannotBeEncoded", "shortDescription" : "", "members_class" : [{"member" : "scales.xml.serializers.CannotBeEncoded#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.CannotBeEncoded.what", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/CannotBeEncoded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/serializers\/CannotBeEncoded.html", "kind" : "class"}, {"name" : "scales.xml.serializers.CannotSerialize", "shortDescription" : "For a given content it could not be serialized in the document.", "members_case class" : [{"member" : "scales.xml.serializers.CannotSerialize#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.CannotSerialize.what", "link" : "scales\/xml\/serializers\/CannotSerialize.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/CannotSerialize.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/CannotSerialize.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/CannotSerialize.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/CannotSerialize.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/CannotSerialize.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CannotSerialize.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CannotSerialize.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CannotSerialize.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/CannotSerialize.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/CannotSerialize.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/CannotSerialize.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/CannotSerialize.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/CannotSerialize.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/CannotSerialize.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/CannotSerialize.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/CannotSerialize.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/CannotSerialize.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/CannotSerialize.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/CannotSerialize.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/CannotSerialize.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CannotSerialize.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CannotSerialize.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CannotSerialize.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/CannotSerialize.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/CannotSerialize.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/CannotSerialize.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/CannotSerialize.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/CannotSerialize.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/CannotSerialize.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/CannotSerialize.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.CDataCannotBeEncoded", "shortDescription" : "The CData content must be split due to encoding issues, which isn't supported (due to bad CData handling on Sun JRE and differences with Xalan.", "members_case class" : [{"member" : "scales.xml.serializers.CDataCannotBeEncoded#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.CDataCannotBeEncoded.what", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/CDataCannotBeEncoded.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.CommentCannotBeEncoded", "shortDescription" : "Comments don't support & recognition, which means you can't escape the encoding, either they encode or they do not", "members_case class" : [{"member" : "scales.xml.serializers.CommentCannotBeEncoded#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.CommentCannotBeEncoded.what", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/CommentCannotBeEncoded.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.IncompatibleQNameVersions", "shortDescription" : "Result of trying to serialize a 1.1 ncname into a 1.0 document", "members_case class" : [{"member" : "scales.xml.serializers.IncompatibleQNameVersions#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.IncompatibleQNameVersions.what", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/IncompatibleQNameVersions.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.InvalidCharacterInMarkup", "shortDescription" : "The serialization encoding cannot support the characters in a given markup (attribute name or element name.", "members_case class" : [{"member" : "scales.xml.serializers.InvalidCharacterInMarkup#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.InvalidCharacterInMarkup.what", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/InvalidCharacterInMarkup.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.LSSerializer", "members_trait" : [{"label" : "xmlDeclaration", "tail" : "(encoding: Charset, version: XmlVersion): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.xmlDeclaration", "link" : "scales\/xml\/serializers\/LSSerializer.html#xmlDeclaration(encoding:java.nio.charset.Charset,version:scales.xml.XmlVersion):Option[Throwable]", "kind" : "def"}, {"label" : "endElement", "tail" : "(qName: QName, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.endElement", "link" : "scales\/xml\/serializers\/LSSerializer.html#endElement(qName:scales.xml.QName,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "startElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.startElement", "link" : "scales\/xml\/serializers\/LSSerializer.html#startElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.emptyElement", "link" : "scales\/xml\/serializers\/LSSerializer.html#emptyElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "doElem", "tail" : "(qName: QName, attribs: Traversable[Attribute], ns: Map[String, String], declareDefaultNS: Option[String]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.doElem", "link" : "scales\/xml\/serializers\/LSSerializer.html#doElem(qName:scales.xml.QName,attribs:Traversable[scales.xml.Attribute],ns:Map[String,String],declareDefaultNS:Option[String]):Option[Throwable]", "kind" : "def"}, {"label" : "writeAttr", "tail" : "(before: ⇒ String, toCt: ⇒ String, after: ⇒ String): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.writeAttr", "link" : "scales\/xml\/serializers\/LSSerializer.html#writeAttr(before:=>String,toCt:=>String,after:=>String):Option[Throwable]", "kind" : "def"}, {"label" : "item", "tail" : "(item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.item", "link" : "scales\/xml\/serializers\/LSSerializer.html#item(item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "writeNonText", "tail" : "(item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.writeNonText", "link" : "scales\/xml\/serializers\/LSSerializer.html#writeNonText(item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "ct", "tail" : "(t: ⇒ Boolean, s: ⇒ String): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.ct", "link" : "scales\/xml\/serializers\/LSSerializer.html#ct(t:=>Boolean,s:=>String):Option[Throwable]", "kind" : "def"}, {"label" : "canEncode", "tail" : ": (String) ⇒ Boolean", "member" : "scales.xml.serializers.LSSerializer.canEncode", "link" : "scales\/xml\/serializers\/LSSerializer.html#canEncode:String=>Boolean", "kind" : "lazy val"}, {"label" : "encoder", "tail" : ": CharsetEncoder", "member" : "scales.xml.serializers.LSSerializer.encoder", "link" : "scales\/xml\/serializers\/LSSerializer.html#encoder:java.nio.charset.CharsetEncoder", "kind" : "lazy val"}, {"label" : "textNode", "tail" : ": org.w3c.dom.Text", "member" : "scales.xml.serializers.LSSerializer.textNode", "link" : "scales\/xml\/serializers\/LSSerializer.html#textNode:org.w3c.dom.Text", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "encMap", "tail" : ": (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.encMap", "link" : "scales\/xml\/serializers\/LSSerializer.html#encMap:String=>Option[Throwable]", "kind" : "abstract val"}, {"label" : "lsaout", "tail" : ": LSOutput", "member" : "scales.xml.serializers.LSSerializer.lsaout", "link" : "scales\/xml\/serializers\/LSSerializer.html#lsaout:org.w3c.dom.ls.LSOutput", "kind" : "abstract val"}, {"label" : "lss", "tail" : ": org.w3c.dom.ls.LSSerializer", "member" : "scales.xml.serializers.LSSerializer.lss", "link" : "scales\/xml\/serializers\/LSSerializer.html#lss:org.w3c.dom.ls.LSSerializer", "kind" : "abstract val"}, {"label" : "lsout", "tail" : ": LSOutput", "member" : "scales.xml.serializers.LSSerializer.lsout", "link" : "scales\/xml\/serializers\/LSSerializer.html#lsout:org.w3c.dom.ls.LSOutput", "kind" : "abstract val"}, {"label" : "impl", "tail" : ": DOMImplementationLS", "member" : "scales.xml.serializers.LSSerializer.impl", "link" : "scales\/xml\/serializers\/LSSerializer.html#impl:org.w3c.dom.ls.DOMImplementationLS", "kind" : "abstract val"}, {"label" : "doc", "tail" : ": Document", "member" : "scales.xml.serializers.LSSerializer.doc", "link" : "scales\/xml\/serializers\/LSSerializer.html#doc:org.w3c.dom.Document", "kind" : "abstract val"}, {"label" : "docBuilderF", "tail" : ": DocumentBuilderFactory", "member" : "scales.xml.serializers.LSSerializer.docBuilderF", "link" : "scales\/xml\/serializers\/LSSerializer.html#docBuilderF:javax.xml.parsers.DocumentBuilderFactory", "kind" : "abstract val"}, {"label" : "data", "tail" : ": SerializerData", "member" : "scales.xml.serializers.LSSerializer.data", "link" : "scales\/xml\/serializers\/LSSerializer.html#data:scales.xml.serializers.SerializerData", "kind" : "abstract val"}], "shortDescription" : "Default serializer, correctness first.", "trait" : "scales\/xml\/serializers\/LSSerializer.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory", "members_trait" : [{"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.encF", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "val"}, {"label" : "globalEncMap", "tail" : ": ConcurrentHashMap[String, ConcurrentHashMap[Charset, Once[Option[Throwable]]]]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.globalEncMap", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#globalEncMap:java.util.concurrent.ConcurrentHashMap[String,java.util.concurrent.ConcurrentHashMap[java.nio.charset.Charset,scales.utils.collection.Once[Option[Throwable]]]]", "kind" : "val"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactory.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.LSSerializerConcurrentCacheFactoryXHTML", "members_trait" : [{"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactoryXHTML.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.encF", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "val"}, {"label" : "globalEncMap", "tail" : ": ConcurrentHashMap[String, ConcurrentHashMap[Charset, Once[Option[Throwable]]]]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.globalEncMap", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#globalEncMap:java.util.concurrent.ConcurrentHashMap[String,java.util.concurrent.ConcurrentHashMap[java.nio.charset.Charset,scales.utils.collection.Once[Option[Throwable]]]]", "kind" : "val"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/serializers\/LSSerializerConcurrentCacheFactoryXHTML.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.LSSerializerFactory", "shortDescription" : "Default implmementation of serialization", "object" : "scales\/xml\/serializers\/LSSerializerFactory$.html", "members_object" : [{"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.encF", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "val"}, {"label" : "globalEncMap", "tail" : ": ConcurrentHashMap[String, ConcurrentHashMap[Charset, Once[Option[Throwable]]]]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.globalEncMap", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#globalEncMap:java.util.concurrent.ConcurrentHashMap[String,java.util.concurrent.ConcurrentHashMap[java.nio.charset.Charset,scales.utils.collection.Once[Option[Throwable]]]]", "kind" : "val"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.serializers.LSSerializerFactoryBase", "members_trait" : [{"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerFactoryBase.encF", "link" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "abstract val"}], "shortDescription" : "Base implementation for a correct serializer using LSSerializer to provide escape character references.", "trait" : "scales\/xml\/serializers\/LSSerializerFactoryBase.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.LSSerializerFactoryXHTML", "shortDescription" : "XHTML serialization extra touches", "object" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html", "members_object" : [{"label" : "canBeEmpty", "tail" : ": Set[String]", "member" : "scales.xml.serializers.LSSerializerFactoryXHTML.canBeEmpty", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#canBeEmpty:scala.collection.immutable.Set[String]", "kind" : "val"}, {"label" : "xhtmlNS", "tail" : ": String", "member" : "scales.xml.serializers.LSSerializerFactoryXHTML.xhtmlNS", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#xhtmlNS:String", "kind" : "val"}, {"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactoryXHTML.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.encF", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "val"}, {"label" : "globalEncMap", "tail" : ": ConcurrentHashMap[String, ConcurrentHashMap[Charset, Once[Option[Throwable]]]]", "member" : "scales.xml.serializers.LSSerializerConcurrentCacheFactory.globalEncMap", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#globalEncMap:java.util.concurrent.ConcurrentHashMap[String,java.util.concurrent.ConcurrentHashMap[java.nio.charset.Charset,scales.utils.collection.Once[Option[Throwable]]]]", "kind" : "val"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerFactoryXHTML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.serializers.LSSerializerNoCacheFactory", "shortDescription" : "", "object" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html", "members_object" : [{"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerNoCacheFactoryT.encF", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "val"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.serializers.LSSerializerNoCacheFactoryT", "members_trait" : [{"label" : "encF", "tail" : ": (Charset) ⇒ (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializerNoCacheFactoryT.encF", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#encF:java.nio.charset.Charset=>(String=>Option[Throwable])", "kind" : "val"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.LSSerializerFactoryBase.apply", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.LSSerializerFactoryBase.giveBack", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#giveBack(serializer:LSSerializerFactoryBase.this.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.borrow", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#borrow(sdata:scales.xml.serializers.SerializerData):LSSerializerFactoryBase.this.ExactSerializer", "kind" : "def"}, {"label" : "createSerializer", "tail" : "(sdata: SerializerData, dbf: DocumentBuilderFactory): LSSerializer", "member" : "scales.xml.serializers.LSSerializerFactoryBase.createSerializer", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#createSerializer(sdata:scales.xml.serializers.SerializerData,dbf:javax.xml.parsers.DocumentBuilderFactory):scales.xml.serializers.LSSerializer", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.LSSerializerFactoryBase.ExactSerializer", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#ExactSerializer=scales.xml.serializers.LSSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "This variety does not use a thread safe global cache, use when your datais progressivly radically different for each run.", "trait" : "scales\/xml\/serializers\/LSSerializerNoCacheFactoryT.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.NamespaceContext", "shortDescription" : "A NamespaceContext represents the prefix->namespace mappings for a given elements children.", "members_case class" : [{"member" : "scales.xml.serializers.NamespaceContext#<init>", "error" : "unsupported entity"}, {"label" : "addDefault", "tail" : ": Option[String]", "member" : "scales.xml.serializers.NamespaceContext.addDefault", "link" : "scales\/xml\/serializers\/NamespaceContext.html#addDefault:Option[String]", "kind" : "val"}, {"label" : "declMap", "tail" : ": Map[String, String]", "member" : "scales.xml.serializers.NamespaceContext.declMap", "link" : "scales\/xml\/serializers\/NamespaceContext.html#declMap:scala.collection.immutable.Map[String,String]", "kind" : "val"}, {"label" : "mappings", "tail" : ": Map[String, String]", "member" : "scales.xml.serializers.NamespaceContext.mappings", "link" : "scales\/xml\/serializers\/NamespaceContext.html#mappings:scala.collection.immutable.Map[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/NamespaceContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/NamespaceContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/NamespaceContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/NamespaceContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/NamespaceContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/NamespaceContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/NamespaceContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/NamespaceContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/NamespaceContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/NamespaceContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/NamespaceContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/NamespaceContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/NamespaceContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/NamespaceContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/NamespaceContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/NamespaceContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/NamespaceContext.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.NoDataInStream", "shortDescription" : "The stream of PullTypes was empty.", "members_case class" : [{"member" : "scales.xml.serializers.NoDataInStream#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.SerializationException.what", "link" : "scales\/xml\/serializers\/NoDataInStream.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/NoDataInStream.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/NoDataInStream.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/NoDataInStream.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/NoDataInStream.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/NoDataInStream.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/NoDataInStream.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/NoDataInStream.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/NoDataInStream.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/NoDataInStream.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/NoDataInStream.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/NoDataInStream.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/NoDataInStream.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/NoDataInStream.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/NoDataInStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/NoDataInStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/NoDataInStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/NoDataInStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/NoDataInStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/NoDataInStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/NoDataInStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/NoDataInStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/NoDataInStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/NoDataInStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/NoDataInStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/NoDataInStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/NoDataInStream.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/NoDataInStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/NoDataInStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/NoDataInStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/NoDataInStream.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.PICannotBeEncoded", "shortDescription" : "PIs also suffer a bad specification", "members_case class" : [{"member" : "scales.xml.serializers.PICannotBeEncoded#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.PICannotBeEncoded.what", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/PICannotBeEncoded.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/PICannotBeEncoded.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.SerializationException", "shortDescription" : "Base exception marker for serialization", "members_class" : [{"member" : "scales.xml.serializers.SerializationException#<init>", "error" : "unsupported entity"}, {"label" : "what", "tail" : ": String", "member" : "scales.xml.serializers.SerializationException.what", "link" : "scales\/xml\/serializers\/SerializationException.html#what:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/serializers\/SerializationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/serializers\/SerializationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/serializers\/SerializationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/serializers\/SerializationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/serializers\/SerializationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/SerializationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/SerializationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/serializers\/SerializationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/serializers\/SerializationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/serializers\/SerializationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/serializers\/SerializationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/serializers\/SerializationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/serializers\/SerializationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializationException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SerializationException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SerializationException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/serializers\/SerializationException.html", "kind" : "class"}, {"name" : "scales.xml.serializers.SerializeableXml", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializeableXml.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializeableXml.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializeableXml.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializeableXml.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializeableXml.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializeableXml.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializeableXml.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializeableXml.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializeableXml.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializeableXml.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializeableXml.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializeableXml.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SerializeableXml.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializeableXml.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SerializeableXml.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SerializeableXml.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializeableXml.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializeableXml.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializeableXml.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(it: T)(out: XmlOutput, serializer: Serializer): (XmlOutput, Option[Throwable])", "member" : "scales.xml.serializers.SerializeableXml.apply", "link" : "scales\/xml\/serializers\/SerializeableXml.html#apply(it:T)(out:scales.xml.serializers.XmlOutput,serializer:scales.xml.serializers.Serializer):(scales.xml.serializers.XmlOutput,Option[Throwable])", "kind" : "abstract def"}, {"label" : "doc", "tail" : "(it: T): DocLike", "member" : "scales.xml.serializers.SerializeableXml.doc", "link" : "scales\/xml\/serializers\/SerializeableXml.html#doc(it:T):scales.xml.DocLike", "kind" : "abstract def"}], "shortDescription" : "Type class for choosing a serializing algo", "trait" : "scales\/xml\/serializers\/SerializeableXml.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.Serializer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/Serializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/Serializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/Serializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/Serializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/Serializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/Serializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/Serializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/Serializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/Serializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/Serializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/Serializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/Serializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/Serializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/Serializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/Serializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/Serializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/Serializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/Serializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/Serializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "xmlDeclaration", "tail" : "(encoding: Charset, version: XmlVersion): Option[Throwable]", "member" : "scales.xml.serializers.Serializer.xmlDeclaration", "link" : "scales\/xml\/serializers\/Serializer.html#xmlDeclaration(encoding:java.nio.charset.Charset,version:scales.xml.XmlVersion):Option[Throwable]", "kind" : "abstract def"}, {"label" : "endElement", "tail" : "(qName: QName, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.Serializer.endElement", "link" : "scales\/xml\/serializers\/Serializer.html#endElement(qName:scales.xml.QName,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "abstract def"}, {"label" : "startElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.Serializer.startElement", "link" : "scales\/xml\/serializers\/Serializer.html#startElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "abstract def"}, {"label" : "emptyElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.Serializer.emptyElement", "link" : "scales\/xml\/serializers\/Serializer.html#emptyElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "abstract def"}, {"label" : "item", "tail" : "(item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.Serializer.item", "link" : "scales\/xml\/serializers\/Serializer.html#item(item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "abstract def"}], "shortDescription" : "Interface used for serializing the XML events, same for both stream and tree.", "trait" : "scales\/xml\/serializers\/Serializer.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.SerializerData", "shortDescription" : "", "members_case class" : [{"member" : "scales.xml.serializers.SerializerData#<init>", "error" : "unsupported entity"}, {"label" : "encoding", "tail" : ": Charset", "member" : "scales.xml.serializers.SerializerData.encoding", "link" : "scales\/xml\/serializers\/SerializerData.html#encoding:java.nio.charset.Charset", "kind" : "val"}, {"label" : "version", "tail" : ": XmlVersion", "member" : "scales.xml.serializers.SerializerData.version", "link" : "scales\/xml\/serializers\/SerializerData.html#version:scales.xml.XmlVersion", "kind" : "val"}, {"label" : "out", "tail" : ": Writer", "member" : "scales.xml.serializers.SerializerData.out", "link" : "scales\/xml\/serializers\/SerializerData.html#out:java.io.Writer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializerData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializerData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializerData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializerData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializerData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializerData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializerData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializerData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializerData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializerData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializerData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializerData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializerData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/SerializerData.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.SerializerFactory", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializerFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializerFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializerFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializerFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializerFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializerFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializerFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializerFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializerFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SerializerFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializerFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SerializerFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SerializerFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializerFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializerFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializerFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.SerializerFactory.giveBack", "link" : "scales\/xml\/serializers\/SerializerFactory.html#giveBack(serializer:SerializerFactory.this.ExactSerializer):Unit", "kind" : "abstract def"}, {"label" : "borrow", "tail" : "(data: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.SerializerFactory.borrow", "link" : "scales\/xml\/serializers\/SerializerFactory.html#borrow(data:scales.xml.serializers.SerializerData):SerializerFactory.this.ExactSerializer", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(data: SerializerData): R", "member" : "scales.xml.serializers.SerializerFactory.apply", "link" : "scales\/xml\/serializers\/SerializerFactory.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(data:scales.xml.serializers.SerializerData):R", "kind" : "abstract def"}, {"member" : "scales.xml.serializers.SerializerFactory.ExactSerializer", "error" : "unsupported entity"}], "shortDescription" : "Serializer factories are responsible for the life cycle of serializers andtheir resources.", "trait" : "scales\/xml\/serializers\/SerializerFactory.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.SerializerHelpers", "shortDescription" : "", "object" : "scales\/xml\/serializers\/SerializerHelpers$.html", "members_object" : [{"label" : "item", "tail" : "(out: Writer, item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.SerializerHelpers.item", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#item(out:java.io.Writer,item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "xmlDecl", "tail" : "(out: Writer, encoding: Charset, version: XmlVersion): Option[Throwable]", "member" : "scales.xml.serializers.SerializerHelpers.xmlDecl", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#xmlDecl(out:java.io.Writer,encoding:java.nio.charset.Charset,version:scales.xml.XmlVersion):Option[Throwable]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializerHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.serializers.SerializerImplicits", "members_trait" : [{"label" : "pullAndDocSerializeable", "tail" : ": SerializeableXml[(Iterator[xml.PullType], DocLike)]", "member" : "scales.xml.serializers.SerializerImplicits.pullAndDocSerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#pullAndDocSerializeable:scales.xml.serializers.SerializeableXml[(Iterator[scales.xml.PullType],scales.xml.DocLike)]", "kind" : "implicit val"}, {"label" : "pullOnlySerializeable", "tail" : ": SerializeableXml[XmlPull]", "member" : "scales.xml.serializers.SerializerImplicits.pullOnlySerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#pullOnlySerializeable:scales.xml.serializers.SerializeableXml[scales.xml.XmlPull]", "kind" : "implicit val"}, {"label" : "pullCloseableOnlySerializeable", "tail" : ": SerializeableXml[xml.CloseablePull]", "member" : "scales.xml.serializers.SerializerImplicits.pullCloseableOnlySerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#pullCloseableOnlySerializeable:scales.xml.serializers.SerializeableXml[scales.xml.CloseablePull]", "kind" : "implicit val"}, {"label" : "streamSerializeable", "tail" : ": SerializeableXml[Iterator[xml.PullType]]", "member" : "scales.xml.serializers.SerializerImplicits.streamSerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#streamSerializeable:scales.xml.serializers.SerializeableXml[Iterator[scales.xml.PullType]]", "kind" : "implicit val"}, {"label" : "elemSerializable", "tail" : ": SerializeableXml[Elem]", "member" : "scales.xml.serializers.SerializerImplicits.elemSerializable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#elemSerializable:scales.xml.serializers.SerializeableXml[scales.xml.Elem]", "kind" : "implicit val"}, {"label" : "docSerializeable", "tail" : ": SerializeableXml[Doc]", "member" : "scales.xml.serializers.SerializerImplicits.docSerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#docSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.Doc]", "kind" : "implicit val"}, {"label" : "builderSerializeable", "tail" : ": SerializeableXml[DslBuilder]", "member" : "scales.xml.serializers.SerializerImplicits.builderSerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#builderSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.dsl.DslBuilder]", "kind" : "implicit val"}, {"label" : "treeSerializeable", "tail" : ": SerializeableXml[xml.XmlTree]", "member" : "scales.xml.serializers.SerializerImplicits.treeSerializeable", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#treeSerializeable:scales.xml.serializers.SerializeableXml[scales.xml.XmlTree]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializerImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializerImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "SerializeableXml instances for the core types", "trait" : "scales\/xml\/serializers\/SerializerImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.SerializingIter", "members_trait" : [{"label" : "pushXmlIter", "tail" : "(out: Writer, doc: DocLike, version: Option[XmlVersion], encoding: Option[Charset])(serializerFI: SerializerFactory, F: Monad[F]): (CloseOnNeed, SerialIterT[F])", "member" : "scales.xml.serializers.SerializingIter.pushXmlIter", "link" : "scales\/xml\/serializers\/SerializingIter.html#pushXmlIter[F[_]](out:java.io.Writer,doc:scales.xml.DocLike,version:Option[scales.xml.XmlVersion],encoding:Option[java.nio.charset.Charset])(implicitserializerFI:scales.xml.serializers.SerializerFactory,implicitF:scalaz.Monad[F]):(scales.utils.resources.CloseOnNeed,SerializingIter.this.SerialIterT[F])", "kind" : "def"}, {"label" : "serializeIter", "tail" : "(output: XmlOutput, serializer: Serializer, closer: () ⇒ Unit, doc: DocLike)(F: Monad[F]): SerialIterT[F]", "member" : "scales.xml.serializers.SerializingIter.serializeIter", "link" : "scales\/xml\/serializers\/SerializingIter.html#serializeIter[F[_]](output:scales.xml.serializers.XmlOutput,serializer:scales.xml.serializers.Serializer,closer:()=>Unit,doc:scales.xml.DocLike)(implicitF:scalaz.Monad[F]):SerializingIter.this.SerialIterT[F]", "kind" : "def"}, {"label" : "SerialStepT", "tail" : "", "member" : "scales.xml.serializers.SerializingIter.SerialStepT", "link" : "scales\/xml\/serializers\/SerializingIter.html#SerialStepT[F[_]]=scalaz.iteratee.StepT[scales.xml.PullType,F,(scales.xml.serializers.XmlOutput,Option[Throwable])]", "kind" : "type"}, {"label" : "SerialIterT", "tail" : "", "member" : "scales.xml.serializers.SerializingIter.SerialIterT", "link" : "scales\/xml\/serializers\/SerializingIter.html#SerialIterT[F[_]]=scalaz.iteratee.IterateeT[scales.xml.PullType,F,(scales.xml.serializers.XmlOutput,Option[Throwable])]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SerializingIter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SerializingIter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SerializingIter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SerializingIter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SerializingIter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SerializingIter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SerializingIter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializingIter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializingIter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SerializingIter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SerializingIter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SerializingIter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SerializingIter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SerializingIter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SerializingIter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SerializingIter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SerializingIter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SerializingIter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SerializingIter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provide push based serializing Iteratee", "trait" : "scales\/xml\/serializers\/SerializingIter.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.SimpleSerializer", "members_trait" : [{"label" : "xmlDeclaration", "tail" : "(encoding: Charset, version: XmlVersion): Option[Throwable]", "member" : "scales.xml.serializers.SimpleSerializer.xmlDeclaration", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#xmlDeclaration(encoding:java.nio.charset.Charset,version:scales.xml.XmlVersion):Option[Throwable]", "kind" : "def"}, {"label" : "endElement", "tail" : "(qName: QName, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.SimpleSerializer.endElement", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#endElement(qName:scales.xml.QName,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "startElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.SimpleSerializer.startElement", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#startElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "emptyElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.SimpleSerializer.emptyElement", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#emptyElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "doElem", "tail" : "(qName: QName, attribs: Traversable[Attribute], ns: Map[String, String], declareDefaultNS: Option[String]): Unit", "member" : "scales.xml.serializers.SimpleSerializer.doElem", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#doElem(qName:scales.xml.QName,attribs:Traversable[scales.xml.Attribute],ns:Map[String,String],declareDefaultNS:Option[String]):Unit", "kind" : "def"}, {"label" : "item", "tail" : "(item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.SimpleSerializer.item", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#item(item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SimpleSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "data", "tail" : ": SerializerData", "member" : "scales.xml.serializers.SimpleSerializer.data", "link" : "scales\/xml\/serializers\/SimpleSerializer.html#data:scales.xml.serializers.SerializerData", "kind" : "abstract val"}], "shortDescription" : "Performs no validation, sorting of attributes, extra spaces on the end of empty element declarations and uses the short form for empty elements.", "trait" : "scales\/xml\/serializers\/SimpleSerializer.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.SimpleSerializerFactory", "shortDescription" : "", "object" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html", "members_object" : [{"label" : "giveBack", "tail" : "(serializer: ExactSerializer): Unit", "member" : "scales.xml.serializers.SimpleSerializerFactory.giveBack", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#giveBack(serializer:scales.xml.serializers.SimpleSerializerFactory.ExactSerializer):Unit", "kind" : "def"}, {"label" : "borrow", "tail" : "(sdata: SerializerData): ExactSerializer", "member" : "scales.xml.serializers.SimpleSerializerFactory.borrow", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#borrow(sdata:scales.xml.serializers.SerializerData):scales.xml.serializers.SimpleSerializerFactory.ExactSerializer", "kind" : "def"}, {"label" : "apply", "tail" : "(thunk: (Serializer) ⇒ R)(sdata: SerializerData): R", "member" : "scales.xml.serializers.SimpleSerializerFactory.apply", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#apply[R](thunk:scales.xml.serializers.Serializer=>R)(sdata:scales.xml.serializers.SerializerData):R", "kind" : "def"}, {"label" : "ExactSerializer", "tail" : "", "member" : "scales.xml.serializers.SimpleSerializerFactory.ExactSerializer", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#ExactSerializer=scales.xml.serializers.SimpleSerializer", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/SimpleSerializerFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.serializers.StreamSerializer", "shortDescription" : "Provides basis for serialisation of streams.", "object" : "scales\/xml\/serializers\/StreamSerializer$.html", "members_class" : [{"label" : "apply", "tail" : "(itT: T)(out: XmlOutput, serializer: Serializer): (XmlOutput, Option[Throwable])", "member" : "scales.xml.serializers.StreamSerializer.apply", "link" : "scales\/xml\/serializers\/StreamSerializer.html#apply(itT:T)(out:scales.xml.serializers.XmlOutput,serializer:scales.xml.serializers.Serializer):(scales.xml.serializers.XmlOutput,Option[Throwable])", "kind" : "def"}, {"label" : "doc", "tail" : "(it: T): DocLike", "member" : "scales.xml.serializers.StreamSerializer.doc", "link" : "scales\/xml\/serializers\/StreamSerializer.html#doc(it:T):scales.xml.DocLike", "kind" : "def"}, {"member" : "scales.xml.serializers.StreamSerializer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/StreamSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/StreamSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/StreamSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/StreamSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/StreamSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/StreamSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/StreamSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/StreamSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/StreamSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/StreamSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/StreamSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/StreamSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/StreamSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/StreamSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/StreamSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/StreamSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "pump", "tail" : "(event: (xml.PullType, xml.PullType), status: StreamStatus, serializer: Serializer): StreamStatus", "member" : "scales.xml.serializers.StreamSerializer.pump", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#pump(event:(scales.xml.PullType,scales.xml.PullType),status:scales.xml.serializers.StreamStatus,serializer:scales.xml.serializers.Serializer):scales.xml.serializers.StreamStatus", "kind" : "def"}, {"label" : "dummyIterable", "tail" : ": Iterable[xml.PullType]", "member" : "scales.xml.serializers.StreamSerializer.dummyIterable", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#dummyIterable:Iterable[scales.xml.PullType]", "kind" : "val"}, {"label" : "dummy", "tail" : ": Left[Elem, Nothing]", "member" : "scales.xml.serializers.StreamSerializer.dummy", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#dummy:scala.util.Left[scales.xml.Elem,Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/StreamSerializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/StreamSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/serializers\/StreamSerializer.html", "kind" : "object"}, {"name" : "scales.xml.serializers.StreamStatus", "shortDescription" : "Status of stream processing", "members_case class" : [{"member" : "scales.xml.serializers.StreamStatus#<init>", "error" : "unsupported entity"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "scales.xml.serializers.StreamStatus.isEmpty", "link" : "scales\/xml\/serializers\/StreamStatus.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "thrown", "tail" : ": Option[Throwable]", "member" : "scales.xml.serializers.StreamStatus.thrown", "link" : "scales\/xml\/serializers\/StreamStatus.html#thrown:Option[Throwable]", "kind" : "val"}, {"label" : "output", "tail" : ": XmlOutput", "member" : "scales.xml.serializers.StreamStatus.output", "link" : "scales\/xml\/serializers\/StreamStatus.html#output:scales.xml.serializers.XmlOutput", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/StreamStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/StreamStatus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/StreamStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/StreamStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/StreamStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/StreamStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/StreamStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/StreamStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/StreamStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/StreamStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/StreamStatus.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/StreamStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/StreamStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/StreamStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/StreamStatus.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.WriteTo", "shortDescription" : "Wraps the use of writeTo allowing: xml writeTo output", "members_case class" : [{"label" : "writeTo", "tail" : "(output: Writer)(serializerFI: SerializerFactory): Option[Throwable]", "member" : "scales.xml.serializers.WriteTo.writeTo", "link" : "scales\/xml\/serializers\/WriteTo.html#writeTo(output:java.io.Writer)(implicitserializerFI:scales.xml.serializers.SerializerFactory):Option[Throwable]", "kind" : "def"}, {"label" : "writeWith", "tail" : "(it: T, version: Option[XmlVersion], encoding: Option[Charset]): WriteTo[T]", "member" : "scales.xml.serializers.WriteTo.writeWith", "link" : "scales\/xml\/serializers\/WriteTo.html#writeWith(it:T,version:Option[scales.xml.XmlVersion],encoding:Option[java.nio.charset.Charset]):scales.xml.serializers.WriteTo[T]", "kind" : "def"}, {"member" : "scales.xml.serializers.WriteTo#<init>", "error" : "unsupported entity"}, {"label" : "encoding", "tail" : ": Option[Charset]", "member" : "scales.xml.serializers.WriteTo.encoding", "link" : "scales\/xml\/serializers\/WriteTo.html#encoding:Option[java.nio.charset.Charset]", "kind" : "val"}, {"label" : "version", "tail" : ": Option[XmlVersion]", "member" : "scales.xml.serializers.WriteTo.version", "link" : "scales\/xml\/serializers\/WriteTo.html#version:Option[scales.xml.XmlVersion]", "kind" : "val"}, {"label" : "it", "tail" : ": T", "member" : "scales.xml.serializers.WriteTo.it", "link" : "scales\/xml\/serializers\/WriteTo.html#it:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/WriteTo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/WriteTo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/WriteTo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/WriteTo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/WriteTo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/WriteTo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/WriteTo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/WriteTo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/WriteTo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/WriteTo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/WriteTo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/WriteTo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/WriteTo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/WriteTo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/WriteTo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/WriteTo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/WriteTo.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.XHTMLLSSerializer", "members_trait" : [{"label" : "emptyElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.XHTMLLSSerializer.emptyElement", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#emptyElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "xmlDeclaration", "tail" : "(encoding: Charset, version: XmlVersion): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.xmlDeclaration", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#xmlDeclaration(encoding:java.nio.charset.Charset,version:scales.xml.XmlVersion):Option[Throwable]", "kind" : "def"}, {"label" : "endElement", "tail" : "(qName: QName, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.endElement", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#endElement(qName:scales.xml.QName,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "startElement", "tail" : "(qName: QName, attributes: Traversable[Attribute], namespaces: Map[String, String], declareDefaultNS: Option[String], path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.startElement", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#startElement(qName:scales.xml.QName,attributes:Traversable[scales.xml.Attribute],namespaces:Map[String,String],declareDefaultNS:Option[String],path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "doElem", "tail" : "(qName: QName, attribs: Traversable[Attribute], ns: Map[String, String], declareDefaultNS: Option[String]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.doElem", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#doElem(qName:scales.xml.QName,attribs:Traversable[scales.xml.Attribute],ns:Map[String,String],declareDefaultNS:Option[String]):Option[Throwable]", "kind" : "def"}, {"label" : "writeAttr", "tail" : "(before: ⇒ String, toCt: ⇒ String, after: ⇒ String): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.writeAttr", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#writeAttr(before:=>String,toCt:=>String,after:=>String):Option[Throwable]", "kind" : "def"}, {"label" : "item", "tail" : "(item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.item", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#item(item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "writeNonText", "tail" : "(item: XmlItem, path: List[QName]): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.writeNonText", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#writeNonText(item:scales.xml.XmlItem,path:List[scales.xml.QName]):Option[Throwable]", "kind" : "def"}, {"label" : "ct", "tail" : "(t: ⇒ Boolean, s: ⇒ String): Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.ct", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#ct(t:=>Boolean,s:=>String):Option[Throwable]", "kind" : "def"}, {"label" : "canEncode", "tail" : ": (String) ⇒ Boolean", "member" : "scales.xml.serializers.LSSerializer.canEncode", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#canEncode:String=>Boolean", "kind" : "lazy val"}, {"label" : "encoder", "tail" : ": CharsetEncoder", "member" : "scales.xml.serializers.LSSerializer.encoder", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#encoder:java.nio.charset.CharsetEncoder", "kind" : "lazy val"}, {"label" : "textNode", "tail" : ": org.w3c.dom.Text", "member" : "scales.xml.serializers.LSSerializer.textNode", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#textNode:org.w3c.dom.Text", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "encMap", "tail" : ": (String) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.LSSerializer.encMap", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#encMap:String=>Option[Throwable]", "kind" : "abstract val"}, {"label" : "lsaout", "tail" : ": LSOutput", "member" : "scales.xml.serializers.LSSerializer.lsaout", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#lsaout:org.w3c.dom.ls.LSOutput", "kind" : "abstract val"}, {"label" : "lss", "tail" : ": org.w3c.dom.ls.LSSerializer", "member" : "scales.xml.serializers.LSSerializer.lss", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#lss:org.w3c.dom.ls.LSSerializer", "kind" : "abstract val"}, {"label" : "lsout", "tail" : ": LSOutput", "member" : "scales.xml.serializers.LSSerializer.lsout", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#lsout:org.w3c.dom.ls.LSOutput", "kind" : "abstract val"}, {"label" : "impl", "tail" : ": DOMImplementationLS", "member" : "scales.xml.serializers.LSSerializer.impl", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#impl:org.w3c.dom.ls.DOMImplementationLS", "kind" : "abstract val"}, {"label" : "doc", "tail" : ": Document", "member" : "scales.xml.serializers.LSSerializer.doc", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#doc:org.w3c.dom.Document", "kind" : "abstract val"}, {"label" : "docBuilderF", "tail" : ": DocumentBuilderFactory", "member" : "scales.xml.serializers.LSSerializer.docBuilderF", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#docBuilderF:javax.xml.parsers.DocumentBuilderFactory", "kind" : "abstract val"}, {"label" : "data", "tail" : ": SerializerData", "member" : "scales.xml.serializers.LSSerializer.data", "link" : "scales\/xml\/serializers\/XHTMLLSSerializer.html#data:scales.xml.serializers.SerializerData", "kind" : "abstract val"}], "shortDescription" : "Adds an extra space after an empty element", "trait" : "scales\/xml\/serializers\/XHTMLLSSerializer.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.XmlOutput", "shortDescription" : "This class represents state during a serialization", "members_case class" : [{"label" : "serializerF", "tail" : ": SerializerFactory", "member" : "scales.xml.serializers.XmlOutput.serializerF", "link" : "scales\/xml\/serializers\/XmlOutput.html#serializerF:scales.xml.serializers.SerializerFactory", "kind" : "implicit val"}, {"member" : "scales.xml.serializers.XmlOutput#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": List[QName]", "member" : "scales.xml.serializers.XmlOutput.path", "link" : "scales\/xml\/serializers\/XmlOutput.html#path:List[scales.xml.QName]", "kind" : "val"}, {"label" : "currentMappings", "tail" : ": List[Map[String, String]]", "member" : "scales.xml.serializers.XmlOutput.currentMappings", "link" : "scales\/xml\/serializers\/XmlOutput.html#currentMappings:List[scala.collection.immutable.Map[String,String]]", "kind" : "val"}, {"label" : "data", "tail" : ": SerializerData", "member" : "scales.xml.serializers.XmlOutput.data", "link" : "scales\/xml\/serializers\/XmlOutput.html#data:scales.xml.serializers.SerializerData", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/XmlOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/XmlOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/XmlOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/XmlOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/XmlOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/XmlOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/XmlOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/XmlOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/XmlOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/XmlOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/XmlOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/XmlOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/XmlOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/serializers\/XmlOutput.html", "kind" : "case class"}, {"name" : "scales.xml.serializers.XmlPrinter", "members_trait" : [{"label" : "itemAsString", "tail" : "(xmlItem: XmlItem)(serf: SerializerFactory): String", "member" : "scales.xml.serializers.XmlPrinter.itemAsString", "link" : "scales\/xml\/serializers\/XmlPrinter.html#itemAsString(xmlItem:scales.xml.XmlItem)(implicitserf:scales.xml.serializers.SerializerFactory):String", "kind" : "def"}, {"label" : "asString", "tail" : "(xml: T)(serf: SerializerFactory, sxml: SerializeableXml[T]): String", "member" : "scales.xml.serializers.XmlPrinter.asString", "link" : "scales\/xml\/serializers\/XmlPrinter.html#asString[T](xml:T)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsxml:scales.xml.serializers.SerializeableXml[T]):String", "kind" : "def"}, {"label" : "printTree", "tail" : "(xml: T)(serf: SerializerFactory, sxml: SerializeableXml[T]): Unit", "member" : "scales.xml.serializers.XmlPrinter.printTree", "link" : "scales\/xml\/serializers\/XmlPrinter.html#printTree[T](xml:T)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsxml:scales.xml.serializers.SerializeableXml[T]):Unit", "kind" : "def"}, {"label" : "writeTo", "tail" : "(it: T, output: Writer, version: Option[XmlVersion], encoding: Option[Charset])(serializerFI: SerializerFactory, sxml: SerializeableXml[T]): Option[Throwable]", "member" : "scales.xml.serializers.XmlPrinter.writeTo", "link" : "scales\/xml\/serializers\/XmlPrinter.html#writeTo[T](it:T,output:java.io.Writer,version:Option[scales.xml.XmlVersion],encoding:Option[java.nio.charset.Charset])(implicitserializerFI:scales.xml.serializers.SerializerFactory,implicitsxml:scales.xml.serializers.SerializeableXml[T]):Option[Throwable]", "kind" : "def"}, {"label" : "serialize", "tail" : "(pout: XmlOutput)(it: T)(arg0: SerializeableXml[T]): Option[Throwable]", "member" : "scales.xml.serializers.XmlPrinter.serialize", "link" : "scales\/xml\/serializers\/XmlPrinter.html#serialize[T](pout:scales.xml.serializers.XmlOutput)(it:T)(implicitevidence$3:scales.xml.serializers.SerializeableXml[T]):Option[Throwable]", "kind" : "def"}, {"label" : "foldPrint", "tail" : "(pout: XmlOutput)(it: T)(arg0: SerializeableXml[T]): Option[Throwable]", "member" : "scales.xml.serializers.XmlPrinter.foldPrint", "link" : "scales\/xml\/serializers\/XmlPrinter.html#foldPrint[T](pout:scales.xml.serializers.XmlOutput)(it:T)(implicitevidence$2:scales.xml.serializers.SerializeableXml[T]):Option[Throwable]", "kind" : "def"}, {"label" : "CloseablePull", "tail" : "", "member" : "scales.xml.serializers.XmlPrinter.CloseablePull", "link" : "scales\/xml\/serializers\/XmlPrinter.html#CloseablePull=scales.xml.XmlPullwithjava.io.Closeablewithscales.utils.resources.IsClosed", "kind" : "type"}, {"label" : "headerAndFooter", "tail" : "(pout: XmlOutput, doc: DocLike)(serializerf: (XmlOutput, Serializer) ⇒ (XmlOutput, Option[Throwable])): (Serializer) ⇒ Option[Throwable]", "member" : "scales.xml.serializers.XmlPrinter.headerAndFooter", "link" : "scales\/xml\/serializers\/XmlPrinter.html#headerAndFooter(pout:scales.xml.serializers.XmlOutput,doc:scales.xml.DocLike)(serializerf:(scales.xml.serializers.XmlOutput,scales.xml.serializers.Serializer)=>(scales.xml.serializers.XmlOutput,Option[Throwable])):scales.xml.serializers.Serializer=>Option[Throwable]", "kind" : "def"}, {"label" : "serializeMisc", "tail" : "(pout: XmlOutput, misc: Iterable[xml.Misc], serializer: Serializer): (XmlOutput, Option[Throwable])", "member" : "scales.xml.serializers.XmlPrinter.serializeMisc", "link" : "scales\/xml\/serializers\/XmlPrinter.html#serializeMisc(pout:scales.xml.serializers.XmlOutput,misc:Iterable[scales.xml.Misc],serializer:scales.xml.serializers.Serializer):(scales.xml.serializers.XmlOutput,Option[Throwable])", "kind" : "def"}, {"label" : "withWriter", "tail" : "(decl: Declaration, out: Writer): SerializerData", "member" : "scales.xml.serializers.XmlPrinter.withWriter", "link" : "scales\/xml\/serializers\/XmlPrinter.html#withWriter(decl:scales.xml.Declaration,out:java.io.Writer):scales.xml.serializers.SerializerData", "kind" : "def"}, {"label" : "doElement", "tail" : "(x: Elem, currentMappings: Map[String, String]): NamespaceContext", "member" : "scales.xml.serializers.XmlPrinter.doElement", "link" : "scales\/xml\/serializers\/XmlPrinter.html#doElement(x:scales.xml.Elem,currentMappings:scala.collection.immutable.Map[String,String]):scales.xml.serializers.NamespaceContext", "kind" : "def"}, {"label" : "laddNS", "tail" : "(entry: (String, String), mappings: Map[String, String], declMap: Map[String, String]): (Map[String, String], Map[String, String])", "member" : "scales.xml.serializers.XmlPrinter.laddNS", "link" : "scales\/xml\/serializers\/XmlPrinter.html#laddNS(entry:(String,String),mappings:scala.collection.immutable.Map[String,String],declMap:scala.collection.immutable.Map[String,String]):(scala.collection.immutable.Map[String,String],scala.collection.immutable.Map[String,String])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/XmlPrinter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/XmlPrinter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/XmlPrinter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/XmlPrinter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/XmlPrinter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/XmlPrinter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/XmlPrinter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlPrinter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlPrinter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlPrinter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/XmlPrinter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/XmlPrinter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/XmlPrinter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/XmlPrinter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/XmlPrinter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/XmlPrinter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/XmlPrinter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/XmlPrinter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/XmlPrinter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/serializers\/XmlPrinter.html", "kind" : "trait"}, {"name" : "scales.xml.serializers.XmlPrinterImplicits", "members_trait" : [{"label" : "toWithWriter", "tail" : "(decl: Declaration): DeclarationConverter", "member" : "scales.xml.serializers.XmlPrinterImplicits.toWithWriter", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#toWithWriter(decl:scales.xml.Declaration):XmlPrinterImplicits.this.DeclarationConverter", "kind" : "implicit def"}, {"label" : "DeclarationConverter", "tail" : "", "member" : "scales.xml.serializers.XmlPrinterImplicits.DeclarationConverter", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#DeclarationConverterextendsProductwithSerializable", "kind" : "case class"}, {"label" : "defaultSerializerFactory", "tail" : ": SerializerFactory", "member" : "scales.xml.serializers.XmlPrinterImplicits.defaultSerializerFactory", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#defaultSerializerFactory:scales.xml.serializers.SerializerFactory", "kind" : "implicit val"}, {"label" : "fromSerializeableToWriteTo", "tail" : "(it: T)(arg0: SerializeableXml[T]): WriteTo[T]", "member" : "scales.xml.serializers.XmlPrinterImplicits.fromSerializeableToWriteTo", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#fromSerializeableToWriteTo[T](it:T)(implicitevidence$1:scales.xml.serializers.SerializeableXml[T]):scales.xml.serializers.WriteTo[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/serializers\/XmlPrinterImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/serializers\/XmlPrinterImplicits.html", "kind" : "trait"}], "scales.utils.collection" : [{"name" : "scales.utils.collection.BuilderHelper", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/BuilderHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/BuilderHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/BuilderHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/BuilderHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/BuilderHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/BuilderHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/BuilderHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/BuilderHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/BuilderHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/BuilderHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/BuilderHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/BuilderHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/BuilderHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/BuilderHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/BuilderHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/BuilderHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/BuilderHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/BuilderHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/BuilderHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "builder", "tail" : "(): Builder[X, CC]", "member" : "scales.utils.collection.BuilderHelper.builder", "link" : "scales\/utils\/collection\/BuilderHelper.html#builder:scala.collection.mutable.Builder[X,CC]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scales\/utils\/collection\/BuilderHelper$.html", "members_object" : [{"label" : "listBuilderHelper", "tail" : "(): BuilderHelper[A, List[A]]", "member" : "scales.utils.collection.BuilderHelper.listBuilderHelper", "link" : "scales\/utils\/collection\/BuilderHelper$.html#listBuilderHelper[A]:scales.utils.collection.BuilderHelper[A,List[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/BuilderHelper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/BuilderHelper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/BuilderHelper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/BuilderHelper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/BuilderHelper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/BuilderHelper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/BuilderHelper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/BuilderHelper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/BuilderHelper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/BuilderHelper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/BuilderHelper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/BuilderHelper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/BuilderHelper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/BuilderHelper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/BuilderHelper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/BuilderHelper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/BuilderHelper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/BuilderHelper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/BuilderHelper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/utils\/collection\/BuilderHelper.html", "kind" : "trait"}, {"name" : "scales.utils.collection.CapturedIterator", "shortDescription" : "Array backed buffer, restart returns the captured data and then rejoins the original iterator", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/utils\/collection\/CapturedIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): A", "member" : "scales.utils.collection.CapturedIterator.next", "link" : "scales\/utils\/collection\/CapturedIterator.html#next():A", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.CapturedIterator.hasNext", "link" : "scales\/utils\/collection\/CapturedIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "restart", "tail" : "(): Iterator[A]", "member" : "scales.utils.collection.CapturedIterator.restart", "link" : "scales\/utils\/collection\/CapturedIterator.html#restart:Iterator[A]", "kind" : "def"}, {"member" : "scales.utils.collection.CapturedIterator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/utils\/collection\/CapturedIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/utils\/collection\/CapturedIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/utils\/collection\/CapturedIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/utils\/collection\/CapturedIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/utils\/collection\/CapturedIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/utils\/collection\/CapturedIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/utils\/collection\/CapturedIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[A], Iterator[A])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/utils\/collection\/CapturedIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/utils\/collection\/CapturedIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/utils\/collection\/CapturedIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/utils\/collection\/CapturedIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[A]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/utils\/collection\/CapturedIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/CapturedIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/CapturedIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/CapturedIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/CapturedIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.Iterator.find", "link" : "scales\/utils\/collection\/CapturedIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/utils\/collection\/CapturedIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/utils\/collection\/CapturedIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/utils\/collection\/CapturedIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/utils\/collection\/CapturedIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/utils\/collection\/CapturedIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(A, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/utils\/collection\/CapturedIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/utils\/collection\/CapturedIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(A, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/utils\/collection\/CapturedIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/utils\/collection\/CapturedIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (Iterator[A], Iterator[A])", "member" : "scala.collection.Iterator.span", "link" : "scales\/utils\/collection\/CapturedIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (Iterator[A], Iterator[A])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/utils\/collection\/CapturedIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/utils\/collection\/CapturedIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/utils\/collection\/CapturedIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/utils\/collection\/CapturedIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/utils\/collection\/CapturedIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/utils\/collection\/CapturedIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/utils\/collection\/CapturedIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/utils\/collection\/CapturedIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/utils\/collection\/CapturedIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/utils\/collection\/CapturedIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/utils\/collection\/CapturedIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/utils\/collection\/CapturedIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[A]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/utils\/collection\/CapturedIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[A]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/utils\/collection\/CapturedIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[A]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/utils\/collection\/CapturedIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[A]", "member" : "scala.collection.Iterator.take", "link" : "scales\/utils\/collection\/CapturedIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/utils\/collection\/CapturedIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/utils\/collection\/CapturedIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/utils\/collection\/CapturedIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[A]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/utils\/collection\/CapturedIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/CapturedIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/CapturedIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/CapturedIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/CapturedIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/CapturedIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/CapturedIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/CapturedIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/utils\/collection\/CapturedIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/CapturedIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/CapturedIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/CapturedIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/CapturedIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/CapturedIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/utils\/collection\/CapturedIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/CapturedIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/CapturedIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/CapturedIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/CapturedIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/CapturedIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/CapturedIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/CapturedIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/CapturedIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/CapturedIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/CapturedIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/CapturedIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/CapturedIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/CapturedIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/CapturedIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/CapturedIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/CapturedIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/CapturedIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/utils\/collection\/CapturedIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/CapturedIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/utils\/collection\/CapturedIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/CapturedIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/CapturedIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/CapturedIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/CapturedIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/CapturedIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/CapturedIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/utils\/collection\/CapturedIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/CapturedIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/CapturedIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/CapturedIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/CapturedIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/CapturedIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/CapturedIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/CapturedIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/CapturedIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/CapturedIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/CapturedIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/CapturedIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/CapturedIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/CapturedIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/CapturedIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/CapturedIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/CapturedIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/CapturedIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/CapturedIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/CapturedIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/CapturedIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/collection\/CapturedIterator.html", "kind" : "class"}, {"name" : "scales.utils.collection.ConcurrentMapUtils", "members_trait" : [{"label" : "valueOf", "tail" : "(key: K, map: ConcurrentHashMap[K, T])(newT: ⇒ T): T", "member" : "scales.utils.collection.ConcurrentMapUtils.valueOf", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#valueOf[K,T](key:K,map:java.util.concurrent.ConcurrentHashMap[K,T])(newT:=>T):T", "kind" : "def"}, {"label" : "calcOnce", "tail" : "(key: K, map: ConcurrentHashMap[K, Once[T]])(calc: ⇒ T): T", "member" : "scales.utils.collection.ConcurrentMapUtils.calcOnce", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#calcOnce[K,T](key:K,map:java.util.concurrent.ConcurrentHashMap[K,scales.utils.collection.Once[T]])(calc:=>T):T", "kind" : "def"}, {"label" : "removeOr", "tail" : "(key: K, map: ConcurrentHashMap[K, T])(newT: ⇒ T): T", "member" : "scales.utils.collection.ConcurrentMapUtils.removeOr", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#removeOr[K,T](key:K,map:java.util.concurrent.ConcurrentHashMap[K,T])(newT:=>T):T", "kind" : "def"}, {"label" : "removeList", "tail" : "(key: K, mapToList: ConcurrentHashMap[K, ConcurrentLinkedQueue[T]]): ConcurrentLinkedQueue[T]", "member" : "scales.utils.collection.ConcurrentMapUtils.removeList", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#removeList[K,T](key:K,mapToList:java.util.concurrent.ConcurrentHashMap[K,java.util.concurrent.ConcurrentLinkedQueue[T]]):java.util.concurrent.ConcurrentLinkedQueue[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(key: K, mapToList: ConcurrentHashMap[K, ConcurrentLinkedQueue[T]]): ConcurrentLinkedQueue[T]", "member" : "scales.utils.collection.ConcurrentMapUtils.getList", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#getList[K,T](key:K,mapToList:java.util.concurrent.ConcurrentHashMap[K,java.util.concurrent.ConcurrentLinkedQueue[T]]):java.util.concurrent.ConcurrentLinkedQueue[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ConcurrentMapUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Simple helper functions to get and remove ConcurrentLinkedQueues from a ConcurrentHashMap", "trait" : "scales\/utils\/collection\/ConcurrentMapUtils.html", "kind" : "trait"}, {"name" : "scales.utils.collection.DuplicateFilter", "shortDescription" : "Remove neighbouring duplicates based on a given predicate (defaults to _ eq _).", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/DuplicateFilter.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[T]", "member" : "scales.utils.collection.DuplicateFilter.iterator", "link" : "scales\/utils\/collection\/DuplicateFilter.html#iterator():Iterator[T]", "kind" : "def"}, {"member" : "scales.utils.collection.DuplicateFilter#<init>", "error" : "unsupported entity"}, {"label" : "orig", "tail" : ": Iterable[T]", "member" : "scales.utils.collection.DuplicateFilter.orig", "link" : "scales\/utils\/collection\/DuplicateFilter.html#orig:Iterable[T]", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[T]", "member" : "scala.collection.Iterable.seq", "link" : "scales\/utils\/collection\/DuplicateFilter.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "scales\/utils\/collection\/DuplicateFilter.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[T, Iterable[T]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/utils\/collection\/DuplicateFilter.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[T, Iterable[T]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/utils\/collection\/DuplicateFilter.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/DuplicateFilter.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "scales\/utils\/collection\/DuplicateFilter.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[T], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "scales\/utils\/collection\/DuplicateFilter.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/DuplicateFilter.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "scales\/utils\/collection\/DuplicateFilter.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "scales\/utils\/collection\/DuplicateFilter.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[T]", "member" : "scala.collection.IterableLike.dropRight", "link" : "scales\/utils\/collection\/DuplicateFilter.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[T]", "member" : "scala.collection.IterableLike.takeRight", "link" : "scales\/utils\/collection\/DuplicateFilter.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/DuplicateFilter.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/DuplicateFilter.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[T]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/DuplicateFilter.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): Iterable[T]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "scales\/utils\/collection\/DuplicateFilter.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[T]", "member" : "scala.collection.IterableLike.drop", "link" : "scales\/utils\/collection\/DuplicateFilter.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[T]", "member" : "scala.collection.IterableLike.take", "link" : "scales\/utils\/collection\/DuplicateFilter.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[T]", "member" : "scala.collection.IterableLike.slice", "link" : "scales\/utils\/collection\/DuplicateFilter.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): T", "member" : "scala.collection.IterableLike.head", "link" : "scales\/utils\/collection\/DuplicateFilter.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "scales\/utils\/collection\/DuplicateFilter.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "scales\/utils\/collection\/DuplicateFilter.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.IterableLike.find", "link" : "scales\/utils\/collection\/DuplicateFilter.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "scales\/utils\/collection\/DuplicateFilter.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "scales\/utils\/collection\/DuplicateFilter.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "scales\/utils\/collection\/DuplicateFilter.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[T]): Iterable[T]", "member" : "scala.collection.IterableLike.toCollection", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[T]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "scales\/utils\/collection\/DuplicateFilter.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/DuplicateFilter.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/DuplicateFilter.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (T) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/DuplicateFilter.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (T) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/DuplicateFilter.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/DuplicateFilter.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[T, Iterable[T]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "scales\/utils\/collection\/DuplicateFilter.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): FilterMonadic[T, Iterable[T]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/DuplicateFilter.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/DuplicateFilter.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/DuplicateFilter.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[T]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/DuplicateFilter.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[T]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/DuplicateFilter.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[T], Iterable[T])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "scales\/utils\/collection\/DuplicateFilter.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (Iterable[T], Iterable[T])", "member" : "scala.collection.TraversableLike.span", "link" : "scales\/utils\/collection\/DuplicateFilter.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): Iterable[T]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "scales\/utils\/collection\/DuplicateFilter.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[T]", "member" : "scala.collection.TraversableLike.init", "link" : "scales\/utils\/collection\/DuplicateFilter.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/DuplicateFilter.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): T", "member" : "scala.collection.TraversableLike.last", "link" : "scales\/utils\/collection\/DuplicateFilter.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[T]", "member" : "scala.collection.TraversableLike.tail", "link" : "scales\/utils\/collection\/DuplicateFilter.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/DuplicateFilter.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B)(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/DuplicateFilter.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B)(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/DuplicateFilter.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/DuplicateFilter.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (T) ⇒ K): Map[K, Iterable[T]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/DuplicateFilter.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (Iterable[T], Iterable[T])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/DuplicateFilter.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B])(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/DuplicateFilter.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): Iterable[T]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/DuplicateFilter.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): Iterable[T]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/DuplicateFilter.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/DuplicateFilter.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/DuplicateFilter.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/DuplicateFilter.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/DuplicateFilter.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[T], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/DuplicateFilter.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/DuplicateFilter.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[T, ParIterable[T]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "scales\/utils\/collection\/DuplicateFilter.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/DuplicateFilter.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[T]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/DuplicateFilter.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/DuplicateFilter.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[T]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/DuplicateFilter.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/DuplicateFilter.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/DuplicateFilter.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/DuplicateFilter.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/DuplicateFilter.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/DuplicateFilter.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/DuplicateFilter.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/DuplicateFilter.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/DuplicateFilter.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/DuplicateFilter.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/DuplicateFilter.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/DuplicateFilter.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/DuplicateFilter.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/DuplicateFilter.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/DuplicateFilter.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/DuplicateFilter.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/DuplicateFilter.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/DuplicateFilter.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/DuplicateFilter.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/DuplicateFilter.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/utils\/collection\/DuplicateFilter.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/DuplicateFilter.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/DuplicateFilter.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/DuplicateFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/DuplicateFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/DuplicateFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/DuplicateFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/DuplicateFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/DuplicateFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/DuplicateFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/DuplicateFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/DuplicateFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/DuplicateFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/DuplicateFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/DuplicateFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/DuplicateFilter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/DuplicateFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/DuplicateFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/DuplicateFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/DuplicateFilter.html", "kind" : "case class"}, {"name" : "scales.utils.collection.FlatMapImplicits", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/FlatMapImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/FlatMapImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/FlatMapImplicits.html", "kind" : "trait"}, {"name" : "scales.utils.collection.FlatMapIterator", "members_trait" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/utils\/collection\/FlatMapIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/utils\/collection\/FlatMapIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/utils\/collection\/FlatMapIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/utils\/collection\/FlatMapIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[A], Iterator[A])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/utils\/collection\/FlatMapIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/utils\/collection\/FlatMapIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/utils\/collection\/FlatMapIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/utils\/collection\/FlatMapIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[A]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/utils\/collection\/FlatMapIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/FlatMapIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/FlatMapIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/FlatMapIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/FlatMapIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.Iterator.find", "link" : "scales\/utils\/collection\/FlatMapIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/utils\/collection\/FlatMapIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/utils\/collection\/FlatMapIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/utils\/collection\/FlatMapIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/utils\/collection\/FlatMapIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/utils\/collection\/FlatMapIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(A, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/utils\/collection\/FlatMapIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/utils\/collection\/FlatMapIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(A, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/utils\/collection\/FlatMapIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/utils\/collection\/FlatMapIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (Iterator[A], Iterator[A])", "member" : "scala.collection.Iterator.span", "link" : "scales\/utils\/collection\/FlatMapIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (Iterator[A], Iterator[A])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/utils\/collection\/FlatMapIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/utils\/collection\/FlatMapIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/utils\/collection\/FlatMapIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/utils\/collection\/FlatMapIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/utils\/collection\/FlatMapIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/utils\/collection\/FlatMapIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/utils\/collection\/FlatMapIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/utils\/collection\/FlatMapIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): Iterator[A]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/utils\/collection\/FlatMapIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/utils\/collection\/FlatMapIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/utils\/collection\/FlatMapIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/utils\/collection\/FlatMapIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[A]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/utils\/collection\/FlatMapIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[A]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/utils\/collection\/FlatMapIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[A]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/utils\/collection\/FlatMapIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[A]", "member" : "scala.collection.Iterator.take", "link" : "scales\/utils\/collection\/FlatMapIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/utils\/collection\/FlatMapIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/utils\/collection\/FlatMapIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/utils\/collection\/FlatMapIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[A]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/utils\/collection\/FlatMapIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/FlatMapIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/utils\/collection\/FlatMapIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/FlatMapIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/FlatMapIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/FlatMapIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/FlatMapIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/FlatMapIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/FlatMapIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/FlatMapIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/FlatMapIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/FlatMapIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/FlatMapIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/FlatMapIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/FlatMapIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/utils\/collection\/FlatMapIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/FlatMapIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/FlatMapIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/FlatMapIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/FlatMapIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/FlatMapIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/FlatMapIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/utils\/collection\/FlatMapIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/FlatMapIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/FlatMapIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/FlatMapIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/FlatMapIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/FlatMapIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/FlatMapIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/FlatMapIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/FlatMapIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/FlatMapIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/FlatMapIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/FlatMapIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/FlatMapIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/FlatMapIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/FlatMapIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/FlatMapIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/FlatMapIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/FlatMapIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/FlatMapIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/FlatMapIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/FlatMapIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "next", "tail" : "(): A", "member" : "scala.collection.Iterator.next", "link" : "scales\/utils\/collection\/FlatMapIterator.html#next():A", "kind" : "abstract def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasNext", "link" : "scales\/utils\/collection\/FlatMapIterator.html#hasNext:Boolean", "kind" : "abstract def"}], "shortDescription" : "Backwards compat for 2.8.1, its simply Iterator for 2.9.x", "trait" : "scales\/utils\/collection\/FlatMapIterator.html", "kind" : "trait"}, {"name" : "scales.utils.collection.ImmutableArrayProxy", "members_trait" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.drop", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.take", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.tail", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#tail:Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#head:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.slice", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ar", "tail" : "(): TraversableOnce[A]", "member" : "scales.utils.collection.ImmutableArrayProxy.ar", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#ar:TraversableOnce[A]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scala.collection.SeqLike.apply", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#apply(idx:Int):A", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.SeqLike.length", "link" : "scales\/utils\/collection\/ImmutableArrayProxy.html#length:Int", "kind" : "abstract def"}], "shortDescription" : "Wraps behaviour of ImmutableArray like objects, when the array is greater than 31 it will be swapped to Vector.", "object" : "scales\/utils\/collection\/ImmutableArrayProxy$.html", "members_object" : [{"label" : "GenericCanBuildFrom", "tail" : "", "member" : "scala.collection.generic.GenTraversableFactory.GenericCanBuildFrom", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#GenericCanBuildFrom[A<:<?>]extendsCanBuildFrom[CC[_],A,CC[A]]", "kind" : "class"}, {"label" : "ImmutableArrayProxyCBF", "tail" : "", "member" : "scales.utils.collection.ImmutableArrayProxy.ImmutableArrayProxyCBF", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#ImmutableArrayProxyCBF[T]extendsCanBuildFrom[scales.utils.collection.ImmutableArrayProxy[_],T,scales.utils.collection.ImmutableArrayProxy[T]]", "kind" : "trait"}, {"label" : "canBuildFrom", "tail" : "(ma: ClassManifest[T]): CanBuildFrom[ImmutableArrayProxy[_], T, ImmutableArrayProxy[T]]", "member" : "scales.utils.collection.ImmutableArrayProxy.canBuildFrom", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#canBuildFrom[T](implicitma:reflect.ClassManifest[T]):scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[_],T,scales.utils.collection.ImmutableArrayProxy[T]]", "kind" : "implicit def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#newBuilder[A]:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "empty", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.ImmutableArrayProxy.empty", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#empty[A]:scales.utils.collection.ImmutableArrayProxy[A]", "kind" : "final def"}, {"label" : "one", "tail" : "(a: A): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.ImmutableArrayProxy.one", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#one[A](a:A):scales.utils.collection.ImmutableArrayProxy[A]", "kind" : "def"}, {"label" : "emptyImmutableArray", "tail" : ": IAEmpty[Nothing]", "member" : "scales.utils.collection.ImmutableArrayProxy.emptyImmutableArray", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#emptyImmutableArray:scales.utils.collection.array.IAEmpty[Nothing]", "kind" : "val"}, {"label" : "unapplySeq", "tail" : "(x: ImmutableArrayProxy[A]): Some[ImmutableArrayProxy[A]]", "member" : "scala.collection.generic.SeqFactory.unapplySeq", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#unapplySeq[A](x:CC[A]):Some[CC[A]]", "kind" : "def"}, {"label" : "iterate", "tail" : "(start: A, len: Int)(f: (A) ⇒ A): ImmutableArrayProxy[A]", "member" : "scala.collection.generic.GenTraversableFactory.iterate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#iterate[A](start:A,len:Int)(f:A=>A):CC[A]", "kind" : "def"}, {"label" : "range", "tail" : "(start: T, end: T, step: T)(arg0: Integral[T]): ImmutableArrayProxy[T]", "member" : "scala.collection.generic.GenTraversableFactory.range", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#range[T](start:T,end:T,step:T)(implicitevidence$2:Integral[T]):CC[T]", "kind" : "def"}, {"label" : "range", "tail" : "(start: T, end: T)(arg0: Integral[T]): ImmutableArrayProxy[T]", "member" : "scala.collection.generic.GenTraversableFactory.range", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#range[T](start:T,end:T)(implicitevidence$1:Integral[T]):CC[T]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[A]]]]]", "member" : "scala.collection.generic.GenTraversableFactory.tabulate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#tabulate[A](n1:Int,n2:Int,n3:Int,n4:Int,n5:Int)(f:(Int,Int,Int,Int,Int)=>A):CC[CC[CC[CC[CC[A]]]]]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[A]]]]", "member" : "scala.collection.generic.GenTraversableFactory.tabulate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#tabulate[A](n1:Int,n2:Int,n3:Int,n4:Int)(f:(Int,Int,Int,Int)=>A):CC[CC[CC[CC[A]]]]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[A]]]", "member" : "scala.collection.generic.GenTraversableFactory.tabulate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#tabulate[A](n1:Int,n2:Int,n3:Int)(f:(Int,Int,Int)=>A):CC[CC[CC[A]]]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int)(f: (Int, Int) ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[A]]", "member" : "scala.collection.generic.GenTraversableFactory.tabulate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#tabulate[A](n1:Int,n2:Int)(f:(Int,Int)=>A):CC[CC[A]]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n: Int)(f: (Int) ⇒ A): ImmutableArrayProxy[A]", "member" : "scala.collection.generic.GenTraversableFactory.tabulate", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#tabulate[A](n:Int)(f:Int=>A):CC[A]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[A]]]]]", "member" : "scala.collection.generic.GenTraversableFactory.fill", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#fill[A](n1:Int,n2:Int,n3:Int,n4:Int,n5:Int)(elem:=>A):CC[CC[CC[CC[CC[A]]]]]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int)(elem: ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[A]]]]", "member" : "scala.collection.generic.GenTraversableFactory.fill", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#fill[A](n1:Int,n2:Int,n3:Int,n4:Int)(elem:=>A):CC[CC[CC[CC[A]]]]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int, n3: Int)(elem: ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[ImmutableArrayProxy[A]]]", "member" : "scala.collection.generic.GenTraversableFactory.fill", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#fill[A](n1:Int,n2:Int,n3:Int)(elem:=>A):CC[CC[CC[A]]]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int)(elem: ⇒ A): ImmutableArrayProxy[ImmutableArrayProxy[A]]", "member" : "scala.collection.generic.GenTraversableFactory.fill", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#fill[A](n1:Int,n2:Int)(elem:=>A):CC[CC[A]]", "kind" : "def"}, {"label" : "fill", "tail" : "(n: Int)(elem: ⇒ A): ImmutableArrayProxy[A]", "member" : "scala.collection.generic.GenTraversableFactory.fill", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#fill[A](n:Int)(elem:=>A):CC[A]", "kind" : "def"}, {"label" : "concat", "tail" : "(xss: Traversable[A]*): ImmutableArrayProxy[A]", "member" : "scala.collection.generic.GenTraversableFactory.concat", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#concat[A](xss:Traversable[A]*):CC[A]", "kind" : "def"}, {"label" : "ReusableCBF", "tail" : "(): GenericCanBuildFrom[Nothing]", "member" : "scala.collection.generic.GenTraversableFactory.ReusableCBF", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#ReusableCBF:GenTraversableFactory.this.GenericCanBuildFrom[Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: A*): ImmutableArrayProxy[A]", "member" : "scala.collection.generic.GenericCompanion.apply", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#apply[A](elems:A*):CC[A]", "kind" : "def"}, {"label" : "Coll", "tail" : "", "member" : "scala.collection.generic.GenericCompanion.Coll", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#Coll=CC[_]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/utils\/collection\/ImmutableArrayProxy.html", "kind" : "trait"}, {"name" : "scales.utils.collection.ImmutableArrayProxyBuilder", "shortDescription" : "", "object" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html", "members_object" : [{"label" : "vectorAfter", "tail" : ": Int(31)", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.vectorAfter", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#vectorAfter:Int(31)", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "clear", "tail" : "(): Unit", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.clear", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#clear():Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(elem: A): ImmutableArrayProxyBuilder.this.type", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.+=", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#+=(elem:A):ImmutableArrayProxyBuilder.this.type", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[A]): ImmutableArrayProxyBuilder.this.type", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.++=", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#++=(xs:TraversableOnce[A]):ImmutableArrayProxyBuilder.this.type", "kind" : "def"}, {"label" : "result", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.result", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#result():scales.utils.collection.ImmutableArrayProxy[A]", "kind" : "def"}, {"label" : "moveToVector", "tail" : "(): Unit", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.moveToVector", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#moveToVector():Unit", "kind" : "def"}, {"label" : "checkVB", "tail" : "(): Unit", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.checkVB", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#checkVB():Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scales.utils.collection.ImmutableArrayProxyBuilder.sizeHint", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"member" : "scales.utils.collection.ImmutableArrayProxyBuilder#<init>", "error" : "unsupported entity"}, {"label" : "mapResult", "tail" : "(f: (ImmutableArrayProxy[A]) ⇒ NewTo): Builder[A, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: A, elem2: A, elems: A*): ImmutableArrayProxyBuilder.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/ImmutableArrayProxyBuilder.html", "kind" : "object"}, {"name" : "scales.utils.collection.ImmutableArrayProxyLikeThing", "shortDescription" : "", "members_case class" : [{"label" : "builder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxyLikeThing.builder", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#builder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "wrap", "tail" : "(s: Seq[A]): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.ImmutableArrayProxyLikeThing.wrap", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#wrap(s:Seq[A]):scales.utils.collection.ImmutableArrayProxy[A]", "kind" : "def"}, {"label" : "seq", "tail" : "(x: ImmutableArrayProxy[A]): Seq[A]", "member" : "scales.utils.collection.ImmutableArrayProxyLikeThing.seq", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#seq(x:scales.utils.collection.ImmutableArrayProxy[A]):Seq[A]", "kind" : "def"}, {"member" : "scales.utils.collection.ImmutableArrayProxyLikeThing#<init>", "error" : "unsupported entity"}, {"label" : "cbf", "tail" : ": CanBuildFrom[Repr, A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxyLikeThing.cbf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#cbf:scala.collection.generic.CanBuildFrom[Repr,A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "implicit val"}, {"label" : "filterNot", "tail" : "(x: ImmutableArrayProxy[A])(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.SeqLikeThing.filterNot", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#filterNot(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(x: ImmutableArrayProxy[A])(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.SeqLikeThing.filter", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#filter(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(x: ImmutableArrayProxy[A])(n: Int): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.SeqLikeThing.dropRight", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#dropRight(x:X[A])(n:Int):X[A]", "kind" : "def"}, {"label" : ":+", "tail" : "(x: ImmutableArrayProxy[A])(elem: A): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.SeqLikeThing.:+", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#:+(x:X[A])(elem:A):X[A]", "kind" : "def"}, {"label" : "++", "tail" : "(x: ImmutableArrayProxy[A])(itr: GenTraversableOnce[A]): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.SeqLikeThing.++", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#++(x:X[A])(itr:scala.collection.GenTraversableOnce[A]):X[A]", "kind" : "def"}, {"label" : "length", "tail" : "(x: ImmutableArrayProxy[A]): Int", "member" : "scales.utils.collection.SeqLikeThing.length", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#length(x:X[A]):Int", "kind" : "def"}, {"label" : "splitAt", "tail" : "(x: ImmutableArrayProxy[A])(index: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scales.utils.collection.SeqLikeThing.splitAt", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#splitAt(x:X[A])(index:Int):(X[A],X[A])", "kind" : "def"}, {"label" : "updated", "tail" : "(x: ImmutableArrayProxy[A])(index: Int, elem: A): ImmutableArrayProxy[A]", "member" : "scales.utils.collection.SeqLikeThing.updated", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#updated(x:X[A])(index:Int,elem:A):X[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(x: ImmutableArrayProxy[A]): Iterator[A]", "member" : "scales.utils.collection.SeqLikeThing.iterator", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#iterator(x:X[A]):Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: ImmutableArrayProxy[A])(i: Int): A", "member" : "scales.utils.collection.SeqLikeThing.apply", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#apply(x:X[A])(i:Int):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/ImmutableArrayProxyLikeThing.html", "kind" : "case class"}, {"name" : "scales.utils.collection.IndexedSeqLikeThing", "shortDescription" : "", "members_case class" : [{"label" : "builder", "tail" : "(): Builder[A, IndexedSeq[A]]", "member" : "scales.utils.collection.IndexedSeqLikeThing.builder", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#builder:scala.collection.mutable.Builder[A,IndexedSeq[A]]", "kind" : "def"}, {"label" : "wrap", "tail" : "(s: Seq[A]): IndexedSeq[A]", "member" : "scales.utils.collection.IndexedSeqLikeThing.wrap", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#wrap(s:Seq[A]):IndexedSeq[A]", "kind" : "def"}, {"label" : "seq", "tail" : "(x: IndexedSeq[A]): Seq[A]", "member" : "scales.utils.collection.IndexedSeqLikeThing.seq", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#seq(x:IndexedSeq[A]):Seq[A]", "kind" : "def"}, {"member" : "scales.utils.collection.IndexedSeqLikeThing#<init>", "error" : "unsupported entity"}, {"label" : "cbf", "tail" : ": CanBuildFrom[Repr, A, IndexedSeq[A]]", "member" : "scales.utils.collection.IndexedSeqLikeThing.cbf", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#cbf:scala.collection.generic.CanBuildFrom[Repr,A,IndexedSeq[A]]", "kind" : "implicit val"}, {"label" : "filterNot", "tail" : "(x: IndexedSeq[A])(p: (A) ⇒ Boolean): IndexedSeq[A]", "member" : "scales.utils.collection.SeqLikeThing.filterNot", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#filterNot(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(x: IndexedSeq[A])(p: (A) ⇒ Boolean): IndexedSeq[A]", "member" : "scales.utils.collection.SeqLikeThing.filter", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#filter(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(x: IndexedSeq[A])(n: Int): IndexedSeq[A]", "member" : "scales.utils.collection.SeqLikeThing.dropRight", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#dropRight(x:X[A])(n:Int):X[A]", "kind" : "def"}, {"label" : ":+", "tail" : "(x: IndexedSeq[A])(elem: A): IndexedSeq[A]", "member" : "scales.utils.collection.SeqLikeThing.:+", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#:+(x:X[A])(elem:A):X[A]", "kind" : "def"}, {"label" : "++", "tail" : "(x: IndexedSeq[A])(itr: GenTraversableOnce[A]): IndexedSeq[A]", "member" : "scales.utils.collection.SeqLikeThing.++", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#++(x:X[A])(itr:scala.collection.GenTraversableOnce[A]):X[A]", "kind" : "def"}, {"label" : "length", "tail" : "(x: IndexedSeq[A]): Int", "member" : "scales.utils.collection.SeqLikeThing.length", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#length(x:X[A]):Int", "kind" : "def"}, {"label" : "splitAt", "tail" : "(x: IndexedSeq[A])(index: Int): (IndexedSeq[A], IndexedSeq[A])", "member" : "scales.utils.collection.SeqLikeThing.splitAt", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#splitAt(x:X[A])(index:Int):(X[A],X[A])", "kind" : "def"}, {"label" : "updated", "tail" : "(x: IndexedSeq[A])(index: Int, elem: A): IndexedSeq[A]", "member" : "scales.utils.collection.SeqLikeThing.updated", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#updated(x:X[A])(index:Int,elem:A):X[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(x: IndexedSeq[A]): Iterator[A]", "member" : "scales.utils.collection.SeqLikeThing.iterator", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#iterator(x:X[A]):Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: IndexedSeq[A])(i: Int): A", "member" : "scales.utils.collection.SeqLikeThing.apply", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#apply(x:X[A])(i:Int):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/IndexedSeqLikeThing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/IndexedSeqLikeThing.html", "kind" : "case class"}, {"name" : "scales.utils.collection.IterableUtils", "members_trait" : [{"label" : "ALREADY_RESTARTED", "tail" : ": String", "member" : "scales.utils.collection.IterableUtils.ALREADY_RESTARTED", "link" : "scales\/utils\/collection\/IterableUtils.html#ALREADY_RESTARTED:String", "kind" : "val"}, {"label" : "capture", "tail" : "(orig: Iterator[A]): CapturedIterator[A]", "member" : "scales.utils.collection.IterableUtils.capture", "link" : "scales\/utils\/collection\/IterableUtils.html#capture[A](orig:Iterator[A]):scales.utils.collection.CapturedIterator[A]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(in: Iterable[A])(f: (A) ⇒ Option[B]): Option[B]", "member" : "scales.utils.collection.IterableUtils.collectFirst", "link" : "scales\/utils\/collection\/IterableUtils.html#collectFirst[A,B](in:Iterable[A])(f:A=>Option[B]):Option[B]", "kind" : "def"}, {"label" : "mkString", "tail" : "(itr: Iterable[A], builder: StringBuilder, separator: String)(thunk: (A) ⇒ String): StringBuilder", "member" : "scales.utils.collection.IterableUtils.mkString", "link" : "scales\/utils\/collection\/IterableUtils.html#mkString[A](itr:Iterable[A],builder:StringBuilder,separator:String)(thunk:A=>String):StringBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/IterableUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/IterableUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/IterableUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/IterableUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/IterableUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/IterableUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/IterableUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IterableUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IterableUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IterableUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/IterableUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/IterableUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/IterableUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/IterableUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/IterableUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/IterableUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/IterableUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/IterableUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/IterableUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/IterableUtils.html", "kind" : "trait"}, {"name" : "scales.utils.collection.IterableUtilsImplicits", "members_trait" : [{"label" : "ephemeralAppender", "tail" : "(e: EphemeralStream[A]): AnyRef { ... \/* 2 definitions in type refinement *\/ }", "member" : "scales.utils.collection.IterableUtilsImplicits.ephemeralAppender", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#ephemeralAppender[A](e:scalaz.EphemeralStream[A]):AnyRef{defappend[A,B>:A](a:scalaz.EphemeralStream[A],e:=>scalaz.EphemeralStream[B]):scalaz.EphemeralStream[B];def+:+[B>:A](e1:=>scalaz.EphemeralStream[B]):scalaz.EphemeralStream[B]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/IterableUtilsImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/IterableUtilsImplicits.html", "kind" : "trait"}, {"name" : "scales.utils.collection.ListSeqLikeThing", "shortDescription" : "", "members_case class" : [{"label" : "builder", "tail" : "(): Builder[A, List[A]]", "member" : "scales.utils.collection.ListSeqLikeThing.builder", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#builder:scala.collection.mutable.Builder[A,List[A]]", "kind" : "def"}, {"label" : "wrap", "tail" : "(s: Seq[A]): List[A]", "member" : "scales.utils.collection.ListSeqLikeThing.wrap", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#wrap(s:Seq[A]):List[A]", "kind" : "def"}, {"label" : "seq", "tail" : "(x: List[A]): Seq[A]", "member" : "scales.utils.collection.ListSeqLikeThing.seq", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#seq(x:List[A]):Seq[A]", "kind" : "def"}, {"member" : "scales.utils.collection.ListSeqLikeThing#<init>", "error" : "unsupported entity"}, {"label" : "cbf", "tail" : ": CanBuildFrom[Repr, A, List[A]]", "member" : "scales.utils.collection.ListSeqLikeThing.cbf", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#cbf:scala.collection.generic.CanBuildFrom[Repr,A,List[A]]", "kind" : "implicit val"}, {"label" : "filterNot", "tail" : "(x: List[A])(p: (A) ⇒ Boolean): List[A]", "member" : "scales.utils.collection.SeqLikeThing.filterNot", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#filterNot(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(x: List[A])(p: (A) ⇒ Boolean): List[A]", "member" : "scales.utils.collection.SeqLikeThing.filter", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#filter(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(x: List[A])(n: Int): List[A]", "member" : "scales.utils.collection.SeqLikeThing.dropRight", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#dropRight(x:X[A])(n:Int):X[A]", "kind" : "def"}, {"label" : ":+", "tail" : "(x: List[A])(elem: A): List[A]", "member" : "scales.utils.collection.SeqLikeThing.:+", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#:+(x:X[A])(elem:A):X[A]", "kind" : "def"}, {"label" : "++", "tail" : "(x: List[A])(itr: GenTraversableOnce[A]): List[A]", "member" : "scales.utils.collection.SeqLikeThing.++", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#++(x:X[A])(itr:scala.collection.GenTraversableOnce[A]):X[A]", "kind" : "def"}, {"label" : "length", "tail" : "(x: List[A]): Int", "member" : "scales.utils.collection.SeqLikeThing.length", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#length(x:X[A]):Int", "kind" : "def"}, {"label" : "splitAt", "tail" : "(x: List[A])(index: Int): (List[A], List[A])", "member" : "scales.utils.collection.SeqLikeThing.splitAt", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#splitAt(x:X[A])(index:Int):(X[A],X[A])", "kind" : "def"}, {"label" : "updated", "tail" : "(x: List[A])(index: Int, elem: A): List[A]", "member" : "scales.utils.collection.SeqLikeThing.updated", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#updated(x:X[A])(index:Int,elem:A):X[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(x: List[A]): Iterator[A]", "member" : "scales.utils.collection.SeqLikeThing.iterator", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#iterator(x:X[A]):Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: List[A])(i: Int): A", "member" : "scales.utils.collection.SeqLikeThing.apply", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#apply(x:X[A])(i:Int):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ListSeqLikeThing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/ListSeqLikeThing.html", "kind" : "case class"}, {"name" : "scales.utils.collection.ListSet", "shortDescription" : "", "object" : "scales\/utils\/collection\/ListSet$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/ListSet.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "Node", "tail" : "", "member" : "scales.utils.collection.ListSet.Node", "link" : "scales\/utils\/collection\/ListSet.html#NodeextendsListSet[A]withSerializable", "kind" : "class"}, {"label" : "newThis", "tail" : "(a: A): Node", "member" : "scales.utils.collection.ListSet.newThis", "link" : "scales\/utils\/collection\/ListSet.html#newThis(a:A):ListSet.this.Node", "kind" : "def"}, {"label" : "next", "tail" : "(): ListSet[A]", "member" : "scales.utils.collection.ListSet.next", "link" : "scales\/utils\/collection\/ListSet.html#next:scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(): A", "member" : "scales.utils.collection.ListSet.elem", "link" : "scales\/utils\/collection\/ListSet.html#elem:A", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scales.utils.collection.ListSet.iterator", "link" : "scales\/utils\/collection\/ListSet.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "-", "tail" : "(b: B)(equiv: Equiv[C], viewA: (A) ⇒ C, viewB: (B) ⇒ C): ListSet[A]", "member" : "scales.utils.collection.ListSet.-", "link" : "scales\/utils\/collection\/ListSet.html#-[B,C](b:B)(implicitequiv:scales.utils.Equiv[C],implicitviewA:A=>C,implicitviewB:B=>C):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "-", "tail" : "(elem: A): ListSet[A]", "member" : "scales.utils.collection.ListSet.-", "link" : "scales\/utils\/collection\/ListSet.html#-(elem:A):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "unsafePlus", "tail" : "(e: A): ListSet[A]", "member" : "scales.utils.collection.ListSet.unsafePlus", "link" : "scales\/utils\/collection\/ListSet.html#unsafePlus(e:A):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "+", "tail" : "(elem: A): ListSet[A]", "member" : "scales.utils.collection.ListSet.+", "link" : "scales\/utils\/collection\/ListSet.html#+(elem:A):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(b: B)(equiv: Equiv[C], viewA: (A) ⇒ C, viewB: (B) ⇒ C): Option[A]", "member" : "scales.utils.collection.ListSet.apply", "link" : "scales\/utils\/collection\/ListSet.html#apply[B,C](b:B)(implicitequiv:scales.utils.Equiv[C],implicitviewA:A=>C,implicitviewB:B=>C):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(b: B)(equiv: Equiv[C], viewA: (A) ⇒ C, viewB: (B) ⇒ C): Boolean", "member" : "scales.utils.collection.ListSet.contains", "link" : "scales\/utils\/collection\/ListSet.html#contains[B,C](b:B)(implicitequiv:scales.utils.Equiv[C],implicitviewA:A=>C,implicitviewB:B=>C):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A): Boolean", "member" : "scales.utils.collection.ListSet.contains", "link" : "scales\/utils\/collection\/ListSet.html#contains(elem:A):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scales.utils.collection.ListSet.isEmpty", "link" : "scales\/utils\/collection\/ListSet.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scales.utils.collection.ListSet.size", "link" : "scales\/utils\/collection\/ListSet.html#size:Int", "kind" : "def"}, {"label" : "--", "tail" : "(other: Traversable[B])(equiv: Equiv[C], viewA: (A) ⇒ C, viewB: (B) ⇒ C): ListSet[A]", "member" : "scales.utils.collection.ListSet.--", "link" : "scales\/utils\/collection\/ListSet.html#--[B,C](other:Traversable[B])(implicitequiv:scales.utils.Equiv[C],implicitviewA:A=>C,implicitviewB:B=>C):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "--", "tail" : "(other: Traversable[A]): ListSet[A]", "member" : "scales.utils.collection.ListSet.--", "link" : "scales\/utils\/collection\/ListSet.html#--(other:Traversable[A]):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "++", "tail" : "(other: Traversable[A]): ListSet[A]", "member" : "scales.utils.collection.ListSet.++", "link" : "scales\/utils\/collection\/ListSet.html#++(other:Traversable[A]):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "equal", "tail" : ": Equal[A]", "member" : "scales.utils.collection.ListSet.equal", "link" : "scales\/utils\/collection\/ListSet.html#equal:scalaz.Equal[A]", "kind" : "val"}, {"member" : "scales.utils.collection.ListSet#<init>", "error" : "unsupported entity"}, {"label" : "plusFast", "tail" : ": Boolean", "member" : "scales.utils.collection.ListSet.plusFast", "link" : "scales\/utils\/collection\/ListSet.html#plusFast:Boolean", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[A]", "member" : "scala.collection.Iterable.seq", "link" : "scales\/utils\/collection\/ListSet.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "scales\/utils\/collection\/ListSet.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[A, Iterable[A]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/utils\/collection\/ListSet.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[A, Iterable[A]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/utils\/collection\/ListSet.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/ListSet.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/ListSet.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "scales\/utils\/collection\/ListSet.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[A], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "scales\/utils\/collection\/ListSet.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/ListSet.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "scales\/utils\/collection\/ListSet.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "scales\/utils\/collection\/ListSet.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[A]", "member" : "scala.collection.IterableLike.dropRight", "link" : "scales\/utils\/collection\/ListSet.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[A]", "member" : "scala.collection.IterableLike.takeRight", "link" : "scales\/utils\/collection\/ListSet.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/ListSet.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/ListSet.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/ListSet.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): Iterable[A]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "scales\/utils\/collection\/ListSet.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[A]", "member" : "scala.collection.IterableLike.drop", "link" : "scales\/utils\/collection\/ListSet.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[A]", "member" : "scala.collection.IterableLike.take", "link" : "scales\/utils\/collection\/ListSet.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[A]", "member" : "scala.collection.IterableLike.slice", "link" : "scales\/utils\/collection\/ListSet.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IterableLike.head", "link" : "scales\/utils\/collection\/ListSet.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/ListSet.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/ListSet.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "scales\/utils\/collection\/ListSet.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "scales\/utils\/collection\/ListSet.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IterableLike.find", "link" : "scales\/utils\/collection\/ListSet.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "scales\/utils\/collection\/ListSet.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "scales\/utils\/collection\/ListSet.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "scales\/utils\/collection\/ListSet.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[A]): Iterable[A]", "member" : "scala.collection.IterableLike.toCollection", "link" : "scales\/utils\/collection\/ListSet.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "scales\/utils\/collection\/ListSet.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/ListSet.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/ListSet.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/ListSet.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/ListSet.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/ListSet.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, Iterable[A]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "scales\/utils\/collection\/ListSet.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, Iterable[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/ListSet.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/ListSet.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "scales\/utils\/collection\/ListSet.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/ListSet.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/ListSet.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/ListSet.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/ListSet.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[A], Iterable[A])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "scales\/utils\/collection\/ListSet.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (Iterable[A], Iterable[A])", "member" : "scala.collection.TraversableLike.span", "link" : "scales\/utils\/collection\/ListSet.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): Iterable[A]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "scales\/utils\/collection\/ListSet.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[A]", "member" : "scala.collection.TraversableLike.init", "link" : "scales\/utils\/collection\/ListSet.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/ListSet.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.TraversableLike.last", "link" : "scales\/utils\/collection\/ListSet.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[A]", "member" : "scala.collection.TraversableLike.tail", "link" : "scales\/utils\/collection\/ListSet.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/ListSet.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/ListSet.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/ListSet.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/ListSet.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, Iterable[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/ListSet.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (Iterable[A], Iterable[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/ListSet.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/ListSet.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): Iterable[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/ListSet.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): Iterable[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/ListSet.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/ListSet.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/ListSet.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/ListSet.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/ListSet.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/ListSet.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/ListSet.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParIterable[A]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "scales\/utils\/collection\/ListSet.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/ListSet.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/ListSet.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/ListSet.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/ListSet.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/ListSet.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/ListSet.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/ListSet.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/ListSet.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/ListSet.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/ListSet.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/ListSet.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/ListSet.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/ListSet.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/ListSet.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/ListSet.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/ListSet.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/ListSet.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/ListSet.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/ListSet.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/ListSet.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/ListSet.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/ListSet.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/ListSet.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/ListSet.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/ListSet.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/ListSet.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/ListSet.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/ListSet.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/ListSet.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/ListSet.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/ListSet.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/ListSet.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/ListSet.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/ListSet.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/ListSet.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/ListSet.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/ListSet.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/ListSet.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/ListSet.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/ListSet.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/ListSet.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/ListSet.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ListSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ListSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ListSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ListSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ListSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ListSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ListSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ListSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ListSet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ListSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/ListSet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/ListSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ListSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ListSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ListSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(a: A*)(arg0: Equal[A]): ListSet[A]", "member" : "scales.utils.collection.ListSet.apply", "link" : "scales\/utils\/collection\/ListSet$.html#apply[A](a:A*)(implicitevidence$2:scalaz.Equal[A]):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: Equal[A]): ListSet[A]", "member" : "scales.utils.collection.ListSet.empty", "link" : "scales\/utils\/collection\/ListSet$.html#empty[A](implicitevidence$1:scalaz.Equal[A]):scales.utils.collection.ListSet[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/ListSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/ListSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/ListSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/ListSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/ListSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/ListSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/ListSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/ListSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/ListSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/ListSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/ListSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/ListSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/ListSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/ListSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/ListSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/ListSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/ListSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/collection\/ListSet.html", "kind" : "object"}, {"name" : "scales.utils.collection.Once", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/Once.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/Once.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/Once.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/Once.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/Once.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/Once.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/Once.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Once.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Once.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Once.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/Once.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/Once.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/Once.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/Once.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/Once.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/Once.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/Once.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/Once.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/Once.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : ": T", "member" : "scales.utils.collection.Once.value", "link" : "scales\/utils\/collection\/Once.html#value:T", "kind" : "abstract val"}], "shortDescription" : "Only created once and via calcOnce", "trait" : "scales\/utils\/collection\/Once.html", "kind" : "trait"}, {"name" : "scales.utils.collection.SectionWalk", "shortDescription" : "IF hasChildren then isStart indicates that this particular occurenceis the start of the element or the end", "members_case class" : [{"member" : "scales.utils.collection.SectionWalk#<init>", "error" : "unsupported entity"}, {"label" : "isStart", "tail" : ": Boolean", "member" : "scales.utils.collection.SectionWalk.isStart", "link" : "scales\/utils\/collection\/SectionWalk.html#isStart:Boolean", "kind" : "val"}, {"label" : "hasChildren", "tail" : ": Boolean", "member" : "scales.utils.collection.SectionWalk.hasChildren", "link" : "scales\/utils\/collection\/SectionWalk.html#hasChildren:Boolean", "kind" : "val"}, {"label" : "section", "tail" : ": Section", "member" : "scales.utils.collection.SectionWalk.section", "link" : "scales\/utils\/collection\/SectionWalk.html#section:Section", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/SectionWalk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/SectionWalk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/SectionWalk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/SectionWalk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/SectionWalk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/SectionWalk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/SectionWalk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SectionWalk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SectionWalk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SectionWalk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/SectionWalk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/SectionWalk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/SectionWalk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/SectionWalk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/SectionWalk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/SectionWalk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/SectionWalk.html", "kind" : "case class"}, {"name" : "scales.utils.collection.SeqLikeThing", "members_trait" : [{"label" : "filterNot", "tail" : "(x: X[A])(p: (A) ⇒ Boolean): X[A]", "member" : "scales.utils.collection.SeqLikeThing.filterNot", "link" : "scales\/utils\/collection\/SeqLikeThing.html#filterNot(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(x: X[A])(p: (A) ⇒ Boolean): X[A]", "member" : "scales.utils.collection.SeqLikeThing.filter", "link" : "scales\/utils\/collection\/SeqLikeThing.html#filter(x:X[A])(p:A=>Boolean):X[A]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(x: X[A])(n: Int): X[A]", "member" : "scales.utils.collection.SeqLikeThing.dropRight", "link" : "scales\/utils\/collection\/SeqLikeThing.html#dropRight(x:X[A])(n:Int):X[A]", "kind" : "def"}, {"label" : ":+", "tail" : "(x: X[A])(elem: A): X[A]", "member" : "scales.utils.collection.SeqLikeThing.:+", "link" : "scales\/utils\/collection\/SeqLikeThing.html#:+(x:X[A])(elem:A):X[A]", "kind" : "def"}, {"label" : "++", "tail" : "(x: X[A])(itr: GenTraversableOnce[A]): X[A]", "member" : "scales.utils.collection.SeqLikeThing.++", "link" : "scales\/utils\/collection\/SeqLikeThing.html#++(x:X[A])(itr:scala.collection.GenTraversableOnce[A]):X[A]", "kind" : "def"}, {"label" : "length", "tail" : "(x: X[A]): Int", "member" : "scales.utils.collection.SeqLikeThing.length", "link" : "scales\/utils\/collection\/SeqLikeThing.html#length(x:X[A]):Int", "kind" : "def"}, {"label" : "splitAt", "tail" : "(x: X[A])(index: Int): (X[A], X[A])", "member" : "scales.utils.collection.SeqLikeThing.splitAt", "link" : "scales\/utils\/collection\/SeqLikeThing.html#splitAt(x:X[A])(index:Int):(X[A],X[A])", "kind" : "def"}, {"label" : "updated", "tail" : "(x: X[A])(index: Int, elem: A): X[A]", "member" : "scales.utils.collection.SeqLikeThing.updated", "link" : "scales\/utils\/collection\/SeqLikeThing.html#updated(x:X[A])(index:Int,elem:A):X[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(x: X[A]): Iterator[A]", "member" : "scales.utils.collection.SeqLikeThing.iterator", "link" : "scales\/utils\/collection\/SeqLikeThing.html#iterator(x:X[A]):Iterator[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(x: X[A])(i: Int): A", "member" : "scales.utils.collection.SeqLikeThing.apply", "link" : "scales\/utils\/collection\/SeqLikeThing.html#apply(x:X[A])(i:Int):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/SeqLikeThing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/SeqLikeThing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/SeqLikeThing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/SeqLikeThing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/SeqLikeThing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/SeqLikeThing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/SeqLikeThing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SeqLikeThing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SeqLikeThing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SeqLikeThing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/SeqLikeThing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/SeqLikeThing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/SeqLikeThing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/SeqLikeThing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/SeqLikeThing.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/SeqLikeThing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/SeqLikeThing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/SeqLikeThing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/SeqLikeThing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "builder", "tail" : "(): Builder[A, X[A]]", "member" : "scales.utils.collection.SeqLikeThing.builder", "link" : "scales\/utils\/collection\/SeqLikeThing.html#builder:scala.collection.mutable.Builder[A,X[A]]", "kind" : "abstract def"}, {"label" : "wrap", "tail" : "(s: Seq[A]): X[A]", "member" : "scales.utils.collection.SeqLikeThing.wrap", "link" : "scales\/utils\/collection\/SeqLikeThing.html#wrap(s:Seq[A]):X[A]", "kind" : "abstract def"}, {"label" : "seq", "tail" : "(x: X[A]): Seq[A]", "member" : "scales.utils.collection.SeqLikeThing.seq", "link" : "scales\/utils\/collection\/SeqLikeThing.html#seq(x:X[A]):Seq[A]", "kind" : "abstract def"}, {"label" : "cbf", "tail" : "(): CanBuildFrom[Repr, A, X[A]]", "member" : "scales.utils.collection.SeqLikeThing.cbf", "link" : "scales\/utils\/collection\/SeqLikeThing.html#cbf:scala.collection.generic.CanBuildFrom[Repr,A,X[A]]", "kind" : "implicit abstract def"}], "shortDescription" : "2.13 removes seqlike etc.", "object" : "scales\/utils\/collection\/SeqLikeThing$.html", "members_object" : [{"label" : "listSeqLikeThing", "tail" : "(canBuildFrom: CanBuildFrom[Repr, A, List[A]]): SeqLikeThing[Repr, A, List]", "member" : "scales.utils.collection.SeqLikeThing.listSeqLikeThing", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#listSeqLikeThing[Repr,A](implicitcanBuildFrom:scala.collection.generic.CanBuildFrom[Repr,A,List[A]]):scales.utils.collection.SeqLikeThing[Repr,A,List]", "kind" : "implicit def"}, {"label" : "indexedSeqLikeThing", "tail" : "(canBuildFrom: CanBuildFrom[Repr, A, IndexedSeq[A]]): SeqLikeThing[Repr, A, IndexedSeq]", "member" : "scales.utils.collection.SeqLikeThing.indexedSeqLikeThing", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#indexedSeqLikeThing[Repr,A](implicitcanBuildFrom:scala.collection.generic.CanBuildFrom[Repr,A,IndexedSeq[A]]):scales.utils.collection.SeqLikeThing[Repr,A,IndexedSeq]", "kind" : "implicit def"}, {"label" : "immutableArrayProxyLikeThing", "tail" : "(canBuildFrom: CanBuildFrom[Repr, A, ImmutableArrayProxy[A]]): SeqLikeThing[Repr, A, ImmutableArrayProxy]", "member" : "scales.utils.collection.SeqLikeThing.immutableArrayProxyLikeThing", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#immutableArrayProxyLikeThing[Repr,A](implicitcanBuildFrom:scala.collection.generic.CanBuildFrom[Repr,A,scales.utils.collection.ImmutableArrayProxy[A]]):scales.utils.collection.SeqLikeThing[Repr,A,scales.utils.collection.ImmutableArrayProxy]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/SeqLikeThing$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/SeqLikeThing$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/utils\/collection\/SeqLikeThing.html", "kind" : "trait"}, {"name" : "scales.utils.collection.StackUtils", "members_trait" : [{"label" : "sameBase", "tail" : "(test: List[Int], against: List[Int]): Boolean", "member" : "scales.utils.collection.StackUtils.sameBase", "link" : "scales\/utils\/collection\/StackUtils.html#sameBase(test:List[Int],against:List[Int]):Boolean", "kind" : "def"}, {"label" : "compareStack", "tail" : "(p1: List[Int], p2: List[Int]): Int", "member" : "scales.utils.collection.StackUtils.compareStack", "link" : "scales\/utils\/collection\/StackUtils.html#compareStack(p1:List[Int],p2:List[Int]):Int", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/StackUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/StackUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/StackUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/StackUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/StackUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/StackUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/StackUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/StackUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/StackUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/StackUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/StackUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/StackUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/StackUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/StackUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/StackUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/StackUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/StackUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/StackUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/StackUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/StackUtils.html", "kind" : "trait"}, {"name" : "scales.utils.collection.Tree", "members_trait" : [{"label" : "fold", "tail" : "(a: A)(folder: (utils.ItemOrSectionWalk[Item, Section], A) ⇒ A): A", "member" : "scales.utils.collection.Tree.fold", "link" : "scales\/utils\/collection\/Tree.html#fold[A](a:A)(folder:(scales.utils.ItemOrSectionWalk[Item,Section],A)=>A):A", "kind" : "def"}, {"label" : "getLeft", "tail" : "(): Item", "member" : "scales.utils.RightLike.getLeft", "link" : "scales\/utils\/collection\/Tree.html#getLeft:L", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): Tree[Item, Section, CC]", "member" : "scales.utils.RightLike.getRight", "link" : "scales\/utils\/collection\/Tree.html#getRight:R", "kind" : "final def"}, {"label" : "get", "tail" : "(): Tree[Item, Section, CC]", "member" : "scales.utils.RightLike.get", "link" : "scales\/utils\/collection\/Tree.html#get:R", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[Item, Section, CC]]", "member" : "scales.utils.RightLike.right", "link" : "scales\/utils\/collection\/Tree.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[Item]", "member" : "scales.utils.RightLike.left", "link" : "scales\/utils\/collection\/Tree.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (Item) ⇒ X, fr: (Tree[Item, Section, CC]) ⇒ X): X", "member" : "scales.utils.RightLike.fold", "link" : "scales\/utils\/collection\/Tree.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isRight", "link" : "scales\/utils\/collection\/Tree.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isLeft", "link" : "scales\/utils\/collection\/Tree.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/Tree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/Tree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/Tree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/Tree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/Tree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/Tree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/Tree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Tree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Tree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Tree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/Tree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/Tree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/Tree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/Tree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/Tree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/Tree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/Tree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/Tree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/Tree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(section: Section, children: CC[utils.ItemOrTree[Item, Section, CC]]): Tree[Item, Section, CC]", "member" : "scales.utils.collection.Tree.copy", "link" : "scales\/utils\/collection\/Tree.html#copy(section:Section,children:CC[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.collection.Tree[Item,Section,CC]", "kind" : "abstract def"}, {"label" : "children", "tail" : "(): CC[utils.ItemOrTree[Item, Section, CC]]", "member" : "scales.utils.collection.Tree.children", "link" : "scales\/utils\/collection\/Tree.html#children:CC[scales.utils.ItemOrTree[Item,Section,CC]]", "kind" : "abstract def"}, {"label" : "section", "tail" : "(): Section", "member" : "scales.utils.collection.Tree.section", "link" : "scales\/utils\/collection\/Tree.html#section:Section", "kind" : "abstract def"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.Tree.seqLikeThing", "link" : "scales\/utils\/collection\/Tree.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit abstract val"}], "shortDescription" : "", "object" : "scales\/utils\/collection\/Tree$.html", "members_object" : [{"label" : "unapply", "tail" : "(t: Tree[Item, Section, CC]): Option[(Section, CC[utils.ItemOrTree[Item, Section, CC]])]", "member" : "scales.utils.collection.Tree.unapply", "link" : "scales\/utils\/collection\/Tree$.html#unapply[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](t:scales.utils.collection.Tree[Item,Section,CC]):Option[(Section,CC[scales.utils.ItemOrTree[Item,Section,CC]])]", "kind" : "def"}, {"label" : "apply", "tail" : "(isection: Section, ichildren: CC[utils.ItemOrTree[Item, Section, CC]])(iseqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]): Tree[Item, Section, CC]", "member" : "scales.utils.collection.Tree.apply", "link" : "scales\/utils\/collection\/Tree$.html#apply[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](isection:Section,ichildren:CC[scales.utils.ItemOrTree[Item,Section,CC]])(implicitiseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]):scales.utils.collection.Tree[Item,Section,CC]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/Tree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/Tree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/Tree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/Tree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/Tree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/Tree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/Tree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Tree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Tree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Tree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/Tree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/Tree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/Tree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/Tree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/Tree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/Tree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/Tree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/Tree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/Tree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/utils\/collection\/Tree.html", "kind" : "object"}, {"name" : "scales.utils.collection.Trees", "members_trait" : [{"label" : "fold", "tail" : "(a: A)(folder: (ItemOrSectionWalk[Item, Section], A) ⇒ A)(tree: Tree[Item, Section, CC]): A", "member" : "scales.utils.collection.Trees.fold", "link" : "scales\/utils\/collection\/Trees.html#fold[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_],A](a:A)(folder:(Trees.this.ItemOrSectionWalk[Item,Section],A)=>A)(tree:scales.utils.collection.Tree[Item,Section,CC]):A", "kind" : "final def"}, {"label" : "TreeCBF", "tail" : "", "member" : "scales.utils.collection.Trees.TreeCBF", "link" : "scales\/utils\/collection\/Trees.html#TreeCBF[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]]=scala.collection.generic.CanBuildFrom[CC[_],Trees.this.ItemOrTree[Item,Section,CC],CC[Trees.this.ItemOrTree[Item,Section,CC]]]", "kind" : "type"}, {"label" : "ItemOrSectionWalk", "tail" : "", "member" : "scales.utils.collection.Trees.ItemOrSectionWalk", "link" : "scales\/utils\/collection\/Trees.html#ItemOrSectionWalk[Item,Section]=Either[Item,scales.utils.collection.SectionWalk[Section]]", "kind" : "type"}, {"label" : "ItemOrTree", "tail" : "", "member" : "scales.utils.collection.Trees.ItemOrTree", "link" : "scales\/utils\/collection\/Trees.html#ItemOrTree[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]]=scales.utils.EitherLike[Item,scales.utils.collection.Tree[Item,Section,CC]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/Trees.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/Trees.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/Trees.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/Trees.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/Trees.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/Trees.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/Trees.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Trees.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Trees.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/Trees.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/Trees.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/Trees.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/Trees.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/Trees.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/Trees.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/Trees.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/Trees.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/Trees.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/Trees.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/Trees.html", "kind" : "trait"}], "scales.org.apache" : [], "scales.xml.parser.sax" : [{"name" : "scales.xml.parser.sax.DefaultSaxSupport", "members_trait" : [{"label" : "getXmlVersion", "tail" : "(reader: XMLReader): AnyRef", "member" : "scales.xml.parser.sax.DefaultSaxSupport.getXmlVersion", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#getXmlVersion(reader:org.xml.sax.XMLReader):AnyRef", "kind" : "def"}, {"label" : "setLexicalHandler", "tail" : "(reader: XMLReader, handler: Handler[T]): Unit", "member" : "scales.xml.parser.sax.DefaultSaxSupport.setLexicalHandler", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#setLexicalHandler[T<:scales.xml.parser.strategies.OptimisationToken](reader:org.xml.sax.XMLReader,handler:scales.xml.parser.sax.Handler[T]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Assumes lexical-handler and document-xml-version are supported", "trait" : "scales\/xml\/parser\/sax\/DefaultSaxSupport.html", "kind" : "trait"}, {"name" : "scales.xml.parser.sax.Handler", "shortDescription" : "", "members_class" : [{"label" : "endCDATA", "tail" : "(): Unit", "member" : "scales.xml.parser.sax.Handler.endCDATA", "link" : "scales\/xml\/parser\/sax\/Handler.html#endCDATA():Unit", "kind" : "def"}, {"label" : "startCDATA", "tail" : "(): Unit", "member" : "scales.xml.parser.sax.Handler.startCDATA", "link" : "scales\/xml\/parser\/sax\/Handler.html#startCDATA():Unit", "kind" : "def"}, {"label" : "characters", "tail" : "(ch: Array[Char], offset: Int, length: Int): Unit", "member" : "scales.xml.parser.sax.Handler.characters", "link" : "scales\/xml\/parser\/sax\/Handler.html#characters(ch:Array[Char],offset:Int,length:Int):Unit", "kind" : "def"}, {"label" : "addMisc", "tail" : "(miscItem: xml.Misc): Unit", "member" : "scales.xml.parser.sax.Handler.addMisc", "link" : "scales\/xml\/parser\/sax\/Handler.html#addMisc(miscItem:scales.xml.Misc):Unit", "kind" : "def"}, {"label" : "comment", "tail" : "(ch: Array[Char], offset: Int, length: Int): Unit", "member" : "scales.xml.parser.sax.Handler.comment", "link" : "scales\/xml\/parser\/sax\/Handler.html#comment(ch:Array[Char],offset:Int,length:Int):Unit", "kind" : "def"}, {"label" : "endElement", "tail" : "(uri: String, localName: String, qName: String): Unit", "member" : "scales.xml.parser.sax.Handler.endElement", "link" : "scales\/xml\/parser\/sax\/Handler.html#endElement(uri:String,localName:String,qName:String):Unit", "kind" : "def"}, {"label" : "startElement", "tail" : "(uri: String, localName: String, qName: String, attributes: org.xml.sax.Attributes): Unit", "member" : "scales.xml.parser.sax.Handler.startElement", "link" : "scales\/xml\/parser\/sax\/Handler.html#startElement(uri:String,localName:String,qName:String,attributes:org.xml.sax.Attributes):Unit", "kind" : "def"}, {"label" : "setDocumentLocator", "tail" : "(loc: Locator): Unit", "member" : "scales.xml.parser.sax.Handler.setDocumentLocator", "link" : "scales\/xml\/parser\/sax\/Handler.html#setDocumentLocator(loc:org.xml.sax.Locator):Unit", "kind" : "def"}, {"label" : "startPrefixMapping", "tail" : "(prefix: String, uri: String): Unit", "member" : "scales.xml.parser.sax.Handler.startPrefixMapping", "link" : "scales\/xml\/parser\/sax\/Handler.html#startPrefixMapping(prefix:String,uri:String):Unit", "kind" : "def"}, {"label" : "processingInstruction", "tail" : "(target: String, data: String): Unit", "member" : "scales.xml.parser.sax.Handler.processingInstruction", "link" : "scales\/xml\/parser\/sax\/Handler.html#processingInstruction(target:String,data:String):Unit", "kind" : "def"}, {"label" : "startDTD", "tail" : "(name: String, publicId: String, systemId: String): Unit", "member" : "scales.xml.parser.sax.Handler.startDTD", "link" : "scales\/xml\/parser\/sax\/Handler.html#startDTD(name:String,publicId:String,systemId:String):Unit", "kind" : "def"}, {"label" : "checkit", "tail" : "(what: String): Unit", "member" : "scales.xml.parser.sax.Handler.checkit", "link" : "scales\/xml\/parser\/sax\/Handler.html#checkit(what:String):Unit", "kind" : "def"}, {"label" : "getEnd", "tail" : "(): EndMisc", "member" : "scales.xml.parser.sax.Handler.getEnd", "link" : "scales\/xml\/parser\/sax\/Handler.html#getEnd:scales.xml.EndMisc", "kind" : "def"}, {"label" : "getProlog", "tail" : "(): Prolog", "member" : "scales.xml.parser.sax.Handler.getProlog", "link" : "scales\/xml\/parser\/sax\/Handler.html#getProlog:scales.xml.Prolog", "kind" : "def"}, {"label" : "getBuf", "tail" : "(): TreeProxies", "member" : "scales.xml.parser.sax.Handler.getBuf", "link" : "scales\/xml\/parser\/sax\/Handler.html#getBuf:scales.xml.impl.TreeProxies", "kind" : "def"}, {"member" : "scales.xml.parser.sax.Handler#<init>", "error" : "unsupported entity"}, {"label" : "defaultVersion", "tail" : ": XmlVersion", "member" : "scales.xml.parser.sax.Handler.defaultVersion", "link" : "scales\/xml\/parser\/sax\/Handler.html#defaultVersion:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "resolveEntity", "tail" : "(arg0: String, arg1: String): InputSource", "member" : "org.xml.sax.ext.DefaultHandler2.resolveEntity", "link" : "scales\/xml\/parser\/sax\/Handler.html#resolveEntity(x$1:String,x$2:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "resolveEntity", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String): InputSource", "member" : "org.xml.sax.ext.DefaultHandler2.resolveEntity", "link" : "scales\/xml\/parser\/sax\/Handler.html#resolveEntity(x$1:String,x$2:String,x$3:String,x$4:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "getExternalSubset", "tail" : "(arg0: String, arg1: String): InputSource", "member" : "org.xml.sax.ext.DefaultHandler2.getExternalSubset", "link" : "scales\/xml\/parser\/sax\/Handler.html#getExternalSubset(x$1:String,x$2:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "internalEntityDecl", "tail" : "(arg0: String, arg1: String): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.internalEntityDecl", "link" : "scales\/xml\/parser\/sax\/Handler.html#internalEntityDecl(x$1:String,x$2:String):Unit", "kind" : "def"}, {"label" : "externalEntityDecl", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.externalEntityDecl", "link" : "scales\/xml\/parser\/sax\/Handler.html#externalEntityDecl(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "elementDecl", "tail" : "(arg0: String, arg1: String): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.elementDecl", "link" : "scales\/xml\/parser\/sax\/Handler.html#elementDecl(x$1:String,x$2:String):Unit", "kind" : "def"}, {"label" : "attributeDecl", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String, arg4: String): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.attributeDecl", "link" : "scales\/xml\/parser\/sax\/Handler.html#attributeDecl(x$1:String,x$2:String,x$3:String,x$4:String,x$5:String):Unit", "kind" : "def"}, {"label" : "endEntity", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.endEntity", "link" : "scales\/xml\/parser\/sax\/Handler.html#endEntity(x$1:String):Unit", "kind" : "def"}, {"label" : "startEntity", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.startEntity", "link" : "scales\/xml\/parser\/sax\/Handler.html#startEntity(x$1:String):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(): Unit", "member" : "org.xml.sax.ext.DefaultHandler2.endDTD", "link" : "scales\/xml\/parser\/sax\/Handler.html#endDTD():Unit", "kind" : "def"}, {"label" : "fatalError", "tail" : "(arg0: SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.fatalError", "link" : "scales\/xml\/parser\/sax\/Handler.html#fatalError(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(arg0: SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.error", "link" : "scales\/xml\/parser\/sax\/Handler.html#error(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(arg0: SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.warning", "link" : "scales\/xml\/parser\/sax\/Handler.html#warning(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "skippedEntity", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.skippedEntity", "link" : "scales\/xml\/parser\/sax\/Handler.html#skippedEntity(x$1:String):Unit", "kind" : "def"}, {"label" : "ignorableWhitespace", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.ignorableWhitespace", "link" : "scales\/xml\/parser\/sax\/Handler.html#ignorableWhitespace(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "endPrefixMapping", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endPrefixMapping", "link" : "scales\/xml\/parser\/sax\/Handler.html#endPrefixMapping(x$1:String):Unit", "kind" : "def"}, {"label" : "endDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endDocument", "link" : "scales\/xml\/parser\/sax\/Handler.html#endDocument():Unit", "kind" : "def"}, {"label" : "startDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startDocument", "link" : "scales\/xml\/parser\/sax\/Handler.html#startDocument():Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl", "link" : "scales\/xml\/parser\/sax\/Handler.html#unparsedEntityDecl(x$1:String,x$2:String,x$3:String,x$4:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.notationDecl", "link" : "scales\/xml\/parser\/sax\/Handler.html#notationDecl(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/sax\/Handler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/sax\/Handler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/sax\/Handler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/sax\/Handler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/sax\/Handler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/sax\/Handler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/sax\/Handler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/Handler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/Handler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/Handler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/sax\/Handler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/sax\/Handler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/sax\/Handler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/sax\/Handler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/sax\/Handler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/sax\/Handler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/sax\/Handler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/sax\/Handler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/sax\/Handler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/sax\/Handler.html", "kind" : "class"}, {"name" : "scales.xml.parser.sax.SaxSupport", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getXmlVersion", "tail" : "(reader: XMLReader): AnyRef", "member" : "scales.xml.parser.sax.SaxSupport.getXmlVersion", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#getXmlVersion(reader:org.xml.sax.XMLReader):AnyRef", "kind" : "abstract def"}, {"label" : "setLexicalHandler", "tail" : "(reader: XMLReader, handler: Handler[T]): Unit", "member" : "scales.xml.parser.sax.SaxSupport.setLexicalHandler", "link" : "scales\/xml\/parser\/sax\/SaxSupport.html#setLexicalHandler[T<:scales.xml.parser.strategies.OptimisationToken](reader:org.xml.sax.XMLReader,handler:scales.xml.parser.sax.Handler[T]):Unit", "kind" : "abstract def"}], "shortDescription" : "Whilst Saxon, Xerces and nu.validator support certain combinations, this is an abstraction over those needed by the readXml function", "trait" : "scales\/xml\/parser\/sax\/SaxSupport.html", "kind" : "trait"}, {"name" : "scales.xml.parser.sax.XmlParser", "members_trait" : [{"label" : "loadXmlReader", "tail" : "(source: InputSource, strategy: PathOptimisationStrategy[Token], parsers: Loaner[XMLReader] with SaxSupport)(xmlVer: XmlVersion): Doc", "member" : "scales.xml.parser.sax.XmlParser.loadXmlReader", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#loadXmlReader[Token<:scales.xml.parser.strategies.OptimisationToken](source:org.xml.sax.InputSource,strategy:scales.xml.parser.strategies.PathOptimisationStrategy[Token],parsers:scales.utils.resources.Loaner[org.xml.sax.XMLReader]withscales.xml.parser.sax.SaxSupport)(implicitxmlVer:scales.xml.XmlVersion):scales.xml.Doc", "kind" : "def"}, {"label" : "readXml", "tail" : "(source: InputSource, strategy: PathOptimisationStrategy[Token], reader: XMLReader, saxSupport: SaxSupport)(xmlVer: XmlVersion): Doc", "member" : "scales.xml.parser.sax.XmlParser.readXml", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#readXml[Token<:scales.xml.parser.strategies.OptimisationToken](source:org.xml.sax.InputSource,strategy:scales.xml.parser.strategies.PathOptimisationStrategy[Token],reader:org.xml.sax.XMLReader,saxSupport:scales.xml.parser.sax.SaxSupport)(implicitxmlVer:scales.xml.XmlVersion):scales.xml.Doc", "kind" : "def"}, {"label" : "loadXml", "tail" : "(source: InputSource, strategy: PathOptimisationStrategy[Token], parsers: Loaner[SAXParser] with SaxSupport)(xmlVer: XmlVersion): Doc", "member" : "scales.xml.parser.sax.XmlParser.loadXml", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#loadXml[Token<:scales.xml.parser.strategies.OptimisationToken](source:org.xml.sax.InputSource,strategy:scales.xml.parser.strategies.PathOptimisationStrategy[Token],parsers:scales.utils.resources.Loaner[javax.xml.parsers.SAXParser]withscales.xml.parser.sax.SaxSupport)(implicitxmlVer:scales.xml.XmlVersion):scales.xml.Doc", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/sax\/XmlParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/sax\/XmlParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/sax\/XmlParser.html", "kind" : "trait"}, {"name" : "scales.xml.parser.sax.XmlParserImplicits", "members_trait" : [{"label" : "urlToSource", "tail" : "(url: URL): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.urlToSource", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#urlToSource(url:java.net.URL):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "readerToSource", "tail" : "(source: Reader): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.readerToSource", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#readerToSource(source:java.io.Reader):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "streamToSource", "tail" : "(source: InputStream): InputSource", "member" : "scales.xml.parser.sax.XmlParserImplicits.streamToSource", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#streamToSource(source:java.io.InputStream):org.xml.sax.InputSource", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/sax\/XmlParserImplicits.html", "kind" : "trait"}], "scales.org.apache.xerces" : [], "scales.utils.collection.array" : [{"name" : "scales.utils.collection.array.IAEmpty", "shortDescription" : "", "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.IAEmpty.:+", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "ar", "tail" : "(): IAEmpty[A]", "member" : "scales.utils.collection.array.IAEmpty.ar", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#ar:scales.utils.collection.array.IAEmpty[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): Nothing", "member" : "scales.utils.collection.array.IAEmpty.apply", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#apply(idx:Int):Nothing", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.IAEmpty.length", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#length:Int", "kind" : "def"}, {"member" : "scales.utils.collection.array.IAEmpty#<init>", "error" : "unsupported entity"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.drop", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.take", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.tail", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#tail:Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#head:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.slice", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/IAEmpty.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/IAEmpty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/IAEmpty.html", "kind" : "case class"}, {"name" : "scales.utils.collection.array.IAOne", "shortDescription" : "", "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/IAOne.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/IAOne.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.IAOne.updated", "link" : "scales\/utils\/collection\/array\/IAOne.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.IAOne.:+", "link" : "scales\/utils\/collection\/array\/IAOne.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "ar", "tail" : "(): IAOne[A]", "member" : "scales.utils.collection.array.IAOne.ar", "link" : "scales\/utils\/collection\/array\/IAOne.html#ar:scales.utils.collection.array.IAOne[A]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.IAOne.length", "link" : "scales\/utils\/collection\/array\/IAOne.html#length:Int", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.IAOne.apply", "link" : "scales\/utils\/collection\/array\/IAOne.html#apply(idx:Int):A", "kind" : "def"}, {"member" : "scales.utils.collection.array.IAOne#<init>", "error" : "unsupported entity"}, {"label" : "one", "tail" : ": A", "member" : "scales.utils.collection.array.IAOne.one", "link" : "scales\/utils\/collection\/array\/IAOne.html#one:A", "kind" : "val"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/IAOne.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/IAOne.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/IAOne.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/IAOne.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/IAOne.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/IAOne.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/IAOne.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/IAOne.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/IAOne.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/IAOne.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/IAOne.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/IAOne.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/IAOne.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/IAOne.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/IAOne.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/IAOne.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/IAOne.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/IAOne.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.drop", "link" : "scales\/utils\/collection\/array\/IAOne.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.take", "link" : "scales\/utils\/collection\/array\/IAOne.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/IAOne.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/IAOne.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.tail", "link" : "scales\/utils\/collection\/array\/IAOne.html#tail:Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/IAOne.html#head:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.slice", "link" : "scales\/utils\/collection\/array\/IAOne.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/IAOne.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/IAOne.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/IAOne.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/IAOne.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/IAOne.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/IAOne.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/IAOne.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/IAOne.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/IAOne.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/IAOne.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/IAOne.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/IAOne.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/IAOne.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/IAOne.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/IAOne.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/IAOne.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/IAOne.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/IAOne.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/IAOne.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IAOne.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IAOne.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/IAOne.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/IAOne.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/IAOne.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/IAOne.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/IAOne.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/IAOne.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/IAOne.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "scales\/utils\/collection\/array\/IAOne.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/IAOne.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/IAOne.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/IAOne.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/IAOne.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/IAOne.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/IAOne.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/IAOne.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IAOne.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IAOne.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/IAOne.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/IAOne.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/IAOne.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/IAOne.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/IAOne.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/IAOne.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/IAOne.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IAOne.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IAOne.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/IAOne.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/IAOne.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/IAOne.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/IAOne.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/IAOne.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/IAOne.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IAOne.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IAOne.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/IAOne.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/IAOne.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/IAOne.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/IAOne.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/IAOne.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/IAOne.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/IAOne.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/IAOne.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/IAOne.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/IAOne.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/IAOne.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/IAOne.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/IAOne.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/IAOne.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/IAOne.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/IAOne.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/IAOne.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/IAOne.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/IAOne.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/IAOne.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/IAOne.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/IAOne.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/IAOne.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/IAOne.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/IAOne.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/IAOne.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IAOne.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IAOne.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/IAOne.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/IAOne.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/IAOne.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/IAOne.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/IAOne.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/IAOne.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAOne.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAOne.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAOne.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAOne.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAOne.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAOne.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/IAOne.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/IAOne.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/IAOne.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/IAOne.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/array\/IAOne.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IAOne.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IAOne.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/IAOne.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/IAOne.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/IAOne.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/IAOne.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/IAOne.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/IAOne.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/IAOne.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/IAOne.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/IAOne.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/IAOne.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/IAOne.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/IAOne.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/IAOne.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/IAOne.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/IAOne.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/IAOne.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/IAOne.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/IAOne.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/IAOne.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/IAOne.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/IAOne.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/IAOne.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/IAOne.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/IAOne.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/IAOne.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/IAOne.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/IAOne.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/IAOne.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/IAOne.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/IAOne.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/IAOne.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/IAOne.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAOne.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAOne.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAOne.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/IAOne.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/IAOne.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/IAOne.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/IAOne.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/IAOne.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/IAOne.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/IAOne.html", "kind" : "case class"}, {"name" : "scales.utils.collection.array.IAThree", "shortDescription" : "", "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/IAThree.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/IAThree.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.IAThree.updated", "link" : "scales\/utils\/collection\/array\/IAThree.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "ar", "tail" : "(): IAThree[A]", "member" : "scales.utils.collection.array.IAThree.ar", "link" : "scales\/utils\/collection\/array\/IAThree.html#ar:scales.utils.collection.array.IAThree[A]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.IAThree.length", "link" : "scales\/utils\/collection\/array\/IAThree.html#length:Int", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.IAThree.apply", "link" : "scales\/utils\/collection\/array\/IAThree.html#apply(idx:Int):A", "kind" : "def"}, {"member" : "scales.utils.collection.array.IAThree#<init>", "error" : "unsupported entity"}, {"label" : "three", "tail" : ": A", "member" : "scales.utils.collection.array.IAThree.three", "link" : "scales\/utils\/collection\/array\/IAThree.html#three:A", "kind" : "val"}, {"label" : "two", "tail" : ": A", "member" : "scales.utils.collection.array.IAThree.two", "link" : "scales\/utils\/collection\/array\/IAThree.html#two:A", "kind" : "val"}, {"label" : "one", "tail" : ": A", "member" : "scales.utils.collection.array.IAThree.one", "link" : "scales\/utils\/collection\/array\/IAThree.html#one:A", "kind" : "val"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/IAThree.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/IAThree.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/IAThree.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/IAThree.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/IAThree.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/IAThree.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/IAThree.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/IAThree.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/IAThree.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/IAThree.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/IAThree.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/IAThree.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/IAThree.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/IAThree.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/IAThree.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/IAThree.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/IAThree.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/IAThree.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.drop", "link" : "scales\/utils\/collection\/array\/IAThree.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.take", "link" : "scales\/utils\/collection\/array\/IAThree.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/IAThree.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/IAThree.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.tail", "link" : "scales\/utils\/collection\/array\/IAThree.html#tail:Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/IAThree.html#head:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.slice", "link" : "scales\/utils\/collection\/array\/IAThree.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/IAThree.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/IAThree.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/IAThree.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/IAThree.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/IAThree.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/IAThree.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/IAThree.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/IAThree.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/IAThree.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/IAThree.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/IAThree.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/IAThree.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/IAThree.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/IAThree.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/IAThree.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/IAThree.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/IAThree.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/IAThree.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/IAThree.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IAThree.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IAThree.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/IAThree.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/IAThree.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/IAThree.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/IAThree.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/IAThree.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/IAThree.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/IAThree.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "scales\/utils\/collection\/array\/IAThree.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "scales\/utils\/collection\/array\/IAThree.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/IAThree.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/IAThree.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/IAThree.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/IAThree.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/IAThree.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/IAThree.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/IAThree.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IAThree.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IAThree.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/IAThree.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/IAThree.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/IAThree.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/IAThree.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/IAThree.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/IAThree.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/IAThree.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IAThree.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IAThree.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/IAThree.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/IAThree.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/IAThree.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/IAThree.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/IAThree.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/IAThree.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IAThree.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IAThree.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/IAThree.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/IAThree.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/IAThree.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/IAThree.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/IAThree.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/IAThree.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/IAThree.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/IAThree.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/IAThree.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/IAThree.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/IAThree.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/IAThree.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/IAThree.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/IAThree.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/IAThree.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/IAThree.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/IAThree.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/IAThree.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/IAThree.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/IAThree.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/IAThree.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/IAThree.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/IAThree.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/IAThree.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/IAThree.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/IAThree.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IAThree.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IAThree.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/IAThree.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/IAThree.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/IAThree.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/IAThree.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/IAThree.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/IAThree.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAThree.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAThree.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IAThree.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAThree.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAThree.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IAThree.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/IAThree.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/IAThree.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/IAThree.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/IAThree.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/array\/IAThree.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IAThree.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IAThree.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/IAThree.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/IAThree.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/IAThree.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/IAThree.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/IAThree.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/IAThree.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/IAThree.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/IAThree.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/IAThree.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/IAThree.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/IAThree.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/IAThree.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/IAThree.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/IAThree.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/IAThree.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/IAThree.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/IAThree.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/IAThree.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/IAThree.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/IAThree.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/IAThree.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/IAThree.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/IAThree.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/IAThree.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/IAThree.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/IAThree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/IAThree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/IAThree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/IAThree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/IAThree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/IAThree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/IAThree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAThree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAThree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IAThree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/IAThree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/IAThree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/IAThree.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/IAThree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/IAThree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/IAThree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/IAThree.html", "kind" : "case class"}, {"name" : "scales.utils.collection.array.IATwo", "shortDescription" : "", "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/IATwo.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/IATwo.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.IATwo.updated", "link" : "scales\/utils\/collection\/array\/IATwo.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.IATwo.:+", "link" : "scales\/utils\/collection\/array\/IATwo.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "ar", "tail" : "(): IATwo[A]", "member" : "scales.utils.collection.array.IATwo.ar", "link" : "scales\/utils\/collection\/array\/IATwo.html#ar:scales.utils.collection.array.IATwo[A]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.IATwo.length", "link" : "scales\/utils\/collection\/array\/IATwo.html#length:Int", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.IATwo.apply", "link" : "scales\/utils\/collection\/array\/IATwo.html#apply(idx:Int):A", "kind" : "def"}, {"member" : "scales.utils.collection.array.IATwo#<init>", "error" : "unsupported entity"}, {"label" : "two", "tail" : ": A", "member" : "scales.utils.collection.array.IATwo.two", "link" : "scales\/utils\/collection\/array\/IATwo.html#two:A", "kind" : "val"}, {"label" : "one", "tail" : ": A", "member" : "scales.utils.collection.array.IATwo.one", "link" : "scales\/utils\/collection\/array\/IATwo.html#one:A", "kind" : "val"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/IATwo.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/IATwo.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/IATwo.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/IATwo.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/IATwo.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/IATwo.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/IATwo.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/IATwo.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/IATwo.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/IATwo.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/IATwo.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/IATwo.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/IATwo.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/IATwo.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/IATwo.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/IATwo.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/IATwo.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/IATwo.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.drop", "link" : "scales\/utils\/collection\/array\/IATwo.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.take", "link" : "scales\/utils\/collection\/array\/IATwo.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/IATwo.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/IATwo.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.tail", "link" : "scales\/utils\/collection\/array\/IATwo.html#tail:Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/IATwo.html#head:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.slice", "link" : "scales\/utils\/collection\/array\/IATwo.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/IATwo.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/IATwo.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/IATwo.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/IATwo.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/IATwo.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/IATwo.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/IATwo.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/IATwo.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/IATwo.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/IATwo.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/IATwo.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/IATwo.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/IATwo.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/IATwo.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/IATwo.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/IATwo.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/IATwo.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/IATwo.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/IATwo.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IATwo.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/IATwo.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/IATwo.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/IATwo.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/IATwo.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/IATwo.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/IATwo.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/IATwo.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/IATwo.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "scales\/utils\/collection\/array\/IATwo.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/IATwo.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/IATwo.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/IATwo.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/IATwo.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/IATwo.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/IATwo.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/IATwo.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IATwo.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/IATwo.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/IATwo.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/IATwo.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/IATwo.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/IATwo.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/IATwo.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/IATwo.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/IATwo.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IATwo.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/IATwo.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/IATwo.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/IATwo.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/IATwo.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/IATwo.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/IATwo.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/IATwo.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IATwo.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/IATwo.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/IATwo.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/IATwo.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/IATwo.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/IATwo.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/IATwo.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/IATwo.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/IATwo.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/IATwo.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/IATwo.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/IATwo.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/IATwo.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/IATwo.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/IATwo.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/IATwo.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/IATwo.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/IATwo.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/IATwo.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/IATwo.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/IATwo.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/IATwo.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/IATwo.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/IATwo.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/IATwo.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/IATwo.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/IATwo.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/IATwo.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IATwo.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/IATwo.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/IATwo.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/IATwo.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/IATwo.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/IATwo.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/IATwo.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/IATwo.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IATwo.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IATwo.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/IATwo.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IATwo.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IATwo.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/IATwo.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/IATwo.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/IATwo.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/IATwo.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/IATwo.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/array\/IATwo.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IATwo.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/IATwo.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/IATwo.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/IATwo.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/IATwo.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/IATwo.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/IATwo.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/IATwo.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/IATwo.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/IATwo.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/IATwo.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/IATwo.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/IATwo.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/IATwo.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/IATwo.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/IATwo.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/IATwo.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/IATwo.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/IATwo.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/IATwo.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/IATwo.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/IATwo.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/IATwo.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/IATwo.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/IATwo.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/IATwo.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/IATwo.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/IATwo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/IATwo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/IATwo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/IATwo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/IATwo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/IATwo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/IATwo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IATwo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IATwo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/IATwo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/IATwo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/IATwo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/IATwo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/IATwo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/IATwo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/IATwo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/IATwo.html", "kind" : "case class"}, {"name" : "scales.utils.collection.array.ImmutableArray", "shortDescription" : "", "object" : "scales\/utils\/collection\/array\/ImmutableArray$.html", "members_object" : [{"label" : "emptyImmutableArray", "tail" : ": ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArray.emptyImmutableArray", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#emptyImmutableArray:scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"member" : "scales.utils.collection.array.ImmutableArray#<init>", "error" : "unsupported entity"}, {"label" : "len", "tail" : ": Int", "member" : "scales.utils.collection.array.ImmutableArray.len", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#len:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "scales.utils.collection.array.ImmutableArray.offset", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#offset:Int", "kind" : "val"}, {"label" : "base", "tail" : ": Array[AnyRef]", "member" : "scales.utils.collection.array.ImmutableArray.base", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#base:Array[AnyRef]", "kind" : "val"}, {"label" : "ar", "tail" : "(): ImmutableArrayT[A]", "member" : "scales.utils.collection.array.ImmutableArrayT.ar", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#ar:scales.utils.collection.array.ImmutableArrayT[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassManifest[U]): Array[U]", "member" : "scales.utils.collection.array.ImmutableArrayT.toArray", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toArray[U>:A](implicitevidence$1:reflect.ClassManifest[U]):Array[U]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.updated", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.slice", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#slice(from:Int,until:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.tail", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#tail:scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.drop", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#drop(n:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.take", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#take(n:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.:+", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.+:", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayT.length", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#length:Int", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.ImmutableArrayT.apply", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#apply(idx:Int):A", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#last:A", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#head:A", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/ImmutableArray.html", "kind" : "object"}, {"name" : "scales.utils.collection.array.ImmutableArrayAll", "shortDescription" : "Don't add the offset and length, for building a dom this save 8 per elem, only matters for large docs (can save 4mb from 54mb), but can't hurt small ones.", "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayAll.length", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#length:Int", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayAll.len", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#len:Int", "kind" : "final def"}, {"label" : "offset", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayAll.offset", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#offset:Int", "kind" : "final def"}, {"member" : "scales.utils.collection.array.ImmutableArrayAll#<init>", "error" : "unsupported entity"}, {"label" : "base", "tail" : ": Array[AnyRef]", "member" : "scales.utils.collection.array.ImmutableArrayAll.base", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#base:Array[AnyRef]", "kind" : "val"}, {"label" : "ar", "tail" : "(): ImmutableArrayT[A]", "member" : "scales.utils.collection.array.ImmutableArrayT.ar", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#ar:scales.utils.collection.array.ImmutableArrayT[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassManifest[U]): Array[U]", "member" : "scales.utils.collection.array.ImmutableArrayT.toArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toArray[U>:A](implicitevidence$1:reflect.ClassManifest[U]):Array[U]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.updated", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.slice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#slice(from:Int,until:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.tail", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#tail:scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.drop", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#drop(n:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.take", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#take(n:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.:+", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.+:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.ImmutableArrayT.apply", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#apply(idx:Int):A", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#last:A", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#head:A", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/ImmutableArrayAll.html", "kind" : "case class"}, {"name" : "scales.utils.collection.array.ImmutableArrayBuilder", "shortDescription" : "Behaves like an ArrayList\/ArrayBuffer, growing an internal array as necessary", "members_class" : [{"label" : "clear", "tail" : "(): Unit", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.clear", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#clear():Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(elem: A): ImmutableArrayBuilder.this.type", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.+=", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#+=(elem:A):ImmutableArrayBuilder.this.type", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[A]): ImmutableArrayBuilder.this.type", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.++=", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#++=(xs:TraversableOnce[A]):ImmutableArrayBuilder.this.type", "kind" : "def"}, {"label" : "result", "tail" : "(): ImmutableArray[A]", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.result", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#result():scales.utils.collection.array.ImmutableArray[A]", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.sizeHint", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "ensureSize", "tail" : "(size: Int): Unit", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.ensureSize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#ensureSize(size:Int):Unit", "kind" : "def"}, {"label" : "len", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.len", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#len:Int", "kind" : "def"}, {"label" : "buf", "tail" : "(): Array[AnyRef]", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.buf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#buf:Array[AnyRef]", "kind" : "def"}, {"label" : "resize", "tail" : "(orig: Array[AnyRef], newCapacity: Int, len: Int): Array[AnyRef]", "member" : "scales.utils.collection.array.ImmutableArrayBuilder.resize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#resize(orig:Array[AnyRef],newCapacity:Int,len:Int):Array[AnyRef]", "kind" : "def"}, {"member" : "scales.utils.collection.array.ImmutableArrayBuilder#<init>", "error" : "unsupported entity"}, {"label" : "mapResult", "tail" : "(f: (ImmutableArray[A]) ⇒ NewTo): Builder[A, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: A, elem2: A, elems: A*): ImmutableArrayBuilder.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/collection\/array\/ImmutableArrayBuilder.html", "kind" : "class"}, {"name" : "scales.utils.collection.array.ImmutableArrayT", "members_trait" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "ar", "tail" : "(): ImmutableArrayT[A]", "member" : "scales.utils.collection.array.ImmutableArrayT.ar", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#ar:scales.utils.collection.array.ImmutableArrayT[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassManifest[U]): Array[U]", "member" : "scales.utils.collection.array.ImmutableArrayT.toArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toArray[U>:A](implicitevidence$1:reflect.ClassManifest[U]):Array[U]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.updated", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.slice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#slice(from:Int,until:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "tail", "tail" : "(): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.tail", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#tail:scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.drop", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#drop(n:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ImmutableArray[Nothing]", "member" : "scales.utils.collection.array.ImmutableArrayT.take", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#take(n:Int):scales.utils.collection.array.ImmutableArray[Nothing]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.:+", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.ImmutableArrayT.+:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayT.length", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#length:Int", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.ImmutableArrayT.apply", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#apply(idx:Int):A", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#last:A", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#head:A", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "len", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayT.len", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#len:Int", "kind" : "abstract def"}, {"label" : "offset", "tail" : "(): Int", "member" : "scales.utils.collection.array.ImmutableArrayT.offset", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#offset:Int", "kind" : "abstract def"}, {"label" : "base", "tail" : ": Array[AnyRef]", "member" : "scales.utils.collection.array.ImmutableArrayT.base", "link" : "scales\/utils\/collection\/array\/ImmutableArrayT.html#base:Array[AnyRef]", "kind" : "abstract val"}], "shortDescription" : "Object arrays are just faster, System.arraycopy doesn't trust you and will type check everything, we can let nsc do that job for us.", "trait" : "scales\/utils\/collection\/array\/ImmutableArrayT.html", "kind" : "trait"}, {"name" : "scales.utils.collection.array.VectorImpl", "shortDescription" : "Proxy Vector.", "members_case class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "toArray", "tail" : "(arg0: ClassManifest[U]): Array[U]", "member" : "scales.utils.collection.array.VectorImpl.toArray", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toArray[U>:A](implicitevidence$2:reflect.ClassManifest[U]):Array[U]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.VectorImpl.updated", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): VectorImpl[A]", "member" : "scales.utils.collection.array.VectorImpl.slice", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#slice(from:Int,until:Int):scales.utils.collection.array.VectorImpl[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): VectorImpl[A]", "member" : "scales.utils.collection.array.VectorImpl.tail", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#tail:scales.utils.collection.array.VectorImpl[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): VectorImpl[A]", "member" : "scales.utils.collection.array.VectorImpl.drop", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#drop(n:Int):scales.utils.collection.array.VectorImpl[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): VectorImpl[A]", "member" : "scales.utils.collection.array.VectorImpl.take", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#take(n:Int):scales.utils.collection.array.VectorImpl[A]", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.VectorImpl.:+", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scales.utils.collection.array.VectorImpl.+:", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[scales.utils.collection.ImmutableArrayProxy[A],B,That]):That", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.collection.array.VectorImpl.length", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#length:Int", "kind" : "def"}, {"label" : "apply", "tail" : "(idx: Int): A", "member" : "scales.utils.collection.array.VectorImpl.apply", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#apply(idx:Int):A", "kind" : "def"}, {"member" : "scales.utils.collection.array.VectorImpl#<init>", "error" : "unsupported entity"}, {"label" : "ar", "tail" : ": Vector[A]", "member" : "scales.utils.collection.array.VectorImpl.ar", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#ar:Vector[A]", "kind" : "val"}, {"label" : "newBuilder", "tail" : "(): Builder[A, ImmutableArrayProxy[A]]", "member" : "scales.utils.collection.ImmutableArrayProxy.newBuilder", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#newBuilder:scala.collection.mutable.Builder[A,scales.utils.collection.ImmutableArrayProxy[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[ImmutableArrayProxy]", "member" : "scales.utils.collection.ImmutableArrayProxy.companion", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#companion:scala.collection.generic.GenericCompanion[scales.utils.collection.ImmutableArrayProxy]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IndexedSeqOptimized.toList", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toList:List[A]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#last:A", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#head:A", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) ⇒ Boolean): Option[A]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeq.seq", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#seq:IndexedSeq[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: ImmutableArrayProxy[A]): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.toCollection", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toCollection(repr:Repr):IndexedSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.IndexedSeqLike.thisCollection", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#thisCollection:IndexedSeq[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.view", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[A]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sorted", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) ⇒ B)(ord: Ordering[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (A, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.distinct", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.intersect", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): ImmutableArrayProxy[A]", "member" : "scala.collection.SeqLike.diff", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#size:Int", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[A, ParSeq[A]]", "member" : "scala.collection.SeqLike.parCombiner", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParSeq[A]]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[ImmutableArrayProxy[A], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[A]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (A) ⇒ GenTraversableOnce[B]): ImmutableArrayProxy[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) ⇒ (A1, A2, A3)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2], ImmutableArrayProxy[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) ⇒ (A1, A2)): (ImmutableArrayProxy[A1], ImmutableArrayProxy[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, ImmutableArrayProxy[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean): FilterMonadic[A, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, A, Col[A]]): Col[A]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) ⇒ K): Map[K, ImmutableArrayProxy[A]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) ⇒ Boolean): (ImmutableArrayProxy[A], ImmutableArrayProxy[A])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[ImmutableArrayProxy[A], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): ImmutableArrayProxy[A]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[A]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) ⇒ B)(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): A", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, A) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[A]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#reversed:List[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (A) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[A]", "member" : "scala.PartialFunction.lift", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/array\/VectorImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/array\/VectorImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/array\/VectorImpl.html", "kind" : "case class"}], "scales.xml.parser.strategies" : [{"name" : "scales.xml.parser.strategies.BaseToken", "shortDescription" : "", "members_class" : [{"member" : "scales.xml.parser.strategies.BaseToken#<init>", "error" : "unsupported entity"}, {"label" : "fromParser", "tail" : ": FromParser", "member" : "scales.xml.parser.strategies.BaseToken.fromParser", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#fromParser:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "ver", "tail" : ": XmlVersion", "member" : "scales.xml.parser.strategies.BaseToken.ver", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#ver:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/BaseToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/strategies\/BaseToken.html", "kind" : "class"}, {"name" : "scales.xml.parser.strategies.BaseTokenF", "members_trait" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): BaseToken", "member" : "scales.xml.parser.strategies.BaseTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.BaseToken", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/BaseTokenF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/strategies\/BaseTokenF.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.ElemMemoryOptimisation", "shortDescription" : "", "object" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html", "members_object" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): ElemToken", "member" : "scales.xml.parser.strategies.ElemTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.ElemToken", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: ElemToken): Elem", "member" : "scales.xml.parser.strategies.ElemOptimisationT.elem", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "cache", "tail" : ": ConcurrentHashMap[Elem, Elem]", "member" : "scales.xml.parser.strategies.ElemOptimisationT.cache", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#cache:java.util.concurrent.ConcurrentHashMap[scales.xml.Elem,scales.xml.Elem]", "kind" : "val"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: ElemToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: ElemToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.elementEnd", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:Token):Unit", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: ElemToken): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: ElemToken): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: ElemToken): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: ElemToken): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemMemoryOptimisation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.ElemOptimisationT", "members_trait" : [{"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.ElemOptimisationT.elem", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "cache", "tail" : ": ConcurrentHashMap[Elem, Elem]", "member" : "scales.xml.parser.strategies.ElemOptimisationT.cache", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#cache:java.util.concurrent.ConcurrentHashMap[scales.xml.Elem,scales.xml.Elem]", "kind" : "val"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "Simple hashmap on Elem -> Elem, makes no optimisations across qnames (use QNameOptimisationT for that)", "trait" : "scales\/xml\/parser\/strategies\/ElemOptimisationT.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.ElemQNameOptimisationT", "members_trait" : [{"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.elem", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "elemValue", "tail" : "(key: ElemKey)(newT: (ElemKey) ⇒ Elem): Elem", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.elemValue", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#elemValue(key:scales.xml.impl.ElemKey)(newT:scales.xml.impl.ElemKey=>scales.xml.Elem):scales.xml.Elem", "kind" : "def"}, {"label" : "cacheAll", "tail" : ": Boolean", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.cacheAll", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#cacheAll:Boolean", "kind" : "val"}, {"label" : "ecache", "tail" : ": ConcurrentHashMap[ElemKey, Elem]", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.ecache", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#ecache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.ElemKey,scales.xml.Elem]", "kind" : "val"}, {"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/strategies\/ElemQNameOptimisationT.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.ElemToken", "shortDescription" : "", "members_class" : [{"label" : "ef", "tail" : ": (ElemKey) ⇒ Elem", "member" : "scales.xml.parser.strategies.ElemToken.ef", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#ef:scales.xml.impl.ElemKey=>scales.xml.Elem", "kind" : "val"}, {"label" : "ekey", "tail" : ": ElemKey", "member" : "scales.xml.parser.strategies.ElemToken.ekey", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#ekey:scales.xml.impl.ElemKey", "kind" : "val"}, {"member" : "scales.xml.parser.strategies.ElemToken#<init>", "error" : "unsupported entity"}, {"label" : "pQ", "tail" : ": (FullEqualQNameKey) ⇒ PrefixedQName { final val prefix: Some[String] }", "member" : "scales.xml.parser.strategies.QNameToken.pQ", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#pQ:scales.xml.impl.FullEqualQNameKey=>scales.xml.PrefixedQName{finalvalprefix:Some[String]}", "kind" : "val"}, {"label" : "unQ", "tail" : ": (FullEqualQNameKey) ⇒ UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameToken.unQ", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#unQ:scales.xml.impl.FullEqualQNameKey=>scales.xml.UnprefixedQName", "kind" : "val"}, {"label" : "noNsQ", "tail" : ": (FullEqualQNameKey) ⇒ NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameToken.noNsQ", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#noNsQ:scales.xml.impl.FullEqualQNameKey=>scales.xml.NoNamespaceQName", "kind" : "val"}, {"label" : "qkey", "tail" : ": FullEqualQNameKey", "member" : "scales.xml.parser.strategies.QNameToken.qkey", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#qkey:scales.xml.impl.FullEqualQNameKey", "kind" : "val"}, {"label" : "fromParser", "tail" : ": FromParser", "member" : "scales.xml.parser.strategies.QNameToken.fromParser", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#fromParser:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "ver", "tail" : ": XmlVersion", "member" : "scales.xml.parser.strategies.QNameToken.ver", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#ver:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/strategies\/ElemToken.html", "kind" : "class"}, {"name" : "scales.xml.parser.strategies.ElemTokenF", "members_trait" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): ElemToken", "member" : "scales.xml.parser.strategies.ElemTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.ElemToken", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemTokenF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/strategies\/ElemTokenF.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.ElemValue", "shortDescription" : "An elem with attributes or namespaces and only one text value.", "members_class" : [{"label" : "copy", "tail" : "(section: Elem, children: xml.XmlChildren): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.xml.parser.strategies.ElemValue.copy", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#copy(section:scales.xml.Elem,children:scales.xml.XmlChildren):scales.utils.collection.Tree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]", "kind" : "def"}, {"label" : "children", "tail" : "(): xml.XmlChildren", "member" : "scales.xml.parser.strategies.ElemValue.children", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#children:scales.xml.XmlChildren", "kind" : "def"}, {"member" : "scales.xml.parser.strategies.ElemValue#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]", "member" : "scales.xml.parser.strategies.ElemValue.seqLikeThing", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#seqLikeThing:scales.utils.collection.SeqLikeThing[scales.xml.XCC[_],scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XCC]", "kind" : "implicit val"}, {"label" : "text", "tail" : ": String", "member" : "scales.xml.parser.strategies.ElemValue.text", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#text:String", "kind" : "val"}, {"label" : "section", "tail" : ": Elem", "member" : "scales.xml.parser.strategies.ElemValue.section", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#section:scales.xml.Elem", "kind" : "val"}, {"label" : "fold", "tail" : "(a: A)(folder: (utils.ItemOrSectionWalk[XmlItem, Elem], A) ⇒ A): A", "member" : "scales.utils.collection.Tree.fold", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#fold[A](a:A)(folder:(scales.utils.ItemOrSectionWalk[Item,Section],A)=>A):A", "kind" : "def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.RightLike.getLeft", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#getLeft:L", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.RightLike.getRight", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#getRight:R", "kind" : "final def"}, {"label" : "get", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.RightLike.get", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#get:R", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.RightLike.right", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.RightLike.left", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.RightLike.fold", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isRight", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isLeft", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/ElemValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/strategies\/ElemValue.html", "kind" : "class"}, {"name" : "scales.xml.parser.strategies.FullMemoryOptimisationT", "members_trait" : [{"label" : "cacheAll", "tail" : ": Boolean", "member" : "scales.xml.parser.strategies.FullMemoryOptimisationT.cacheAll", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#cacheAll:Boolean", "kind" : "val"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.elem", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "elemValue", "tail" : "(key: ElemKey)(newT: (ElemKey) ⇒ Elem): Elem", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.elemValue", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#elemValue(key:scales.xml.impl.ElemKey)(newT:scales.xml.impl.ElemKey=>scales.xml.Elem):scales.xml.Elem", "kind" : "def"}, {"label" : "ecache", "tail" : ": ConcurrentHashMap[ElemKey, Elem]", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.ecache", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#ecache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.ElemKey,scales.xml.Elem]", "kind" : "val"}, {"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/strategies\/FullMemoryOptimisationT.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.HighMemoryOptimisation", "shortDescription" : "Optimises on QNames and Elems, reducing duplicates at the cost of CHM lookups.", "object" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html", "members_object" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): ElemToken", "member" : "scales.xml.parser.strategies.ElemTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.ElemToken", "kind" : "def"}, {"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: ElemToken): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: ElemToken): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: ElemToken): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: ElemToken): Elem", "member" : "scales.xml.parser.strategies.ElemOptimisationT.elem", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "cache", "tail" : ": ConcurrentHashMap[Elem, Elem]", "member" : "scales.xml.parser.strategies.ElemOptimisationT.cache", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#cache:java.util.concurrent.ConcurrentHashMap[scales.xml.Elem,scales.xml.Elem]", "kind" : "val"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: ElemToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: ElemToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.elementEnd", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:Token):Unit", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: ElemToken): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/HighMemoryOptimisation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.LazyOptimisedTree", "shortDescription" : "Collection of optimisations that reduce memory significantly at the cost of parsing performance, and later non-lazy creation of correct objects for accessing the tree.", "object" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html", "members_object" : [{"label" : "newNameValue", "tail" : "(iname: QName, itext: String)(fromParser: FromParser, iseqLikeThing: SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]): NameValue", "member" : "scales.xml.parser.strategies.LazyOptimisedTree.newNameValue", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#newNameValue(iname:scales.xml.QName,itext:String)(implicitfromParser:scales.xml.impl.FromParser,implicitiseqLikeThing:scales.utils.collection.SeqLikeThing[scales.xml.XCC[_],scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XCC]):scales.xml.parser.strategies.NameValue", "kind" : "def"}, {"label" : "apply", "tail" : "(section: Elem, children: xml.XmlChildren)(fromParser: FromParser): xml.XmlTree", "member" : "scales.xml.parser.strategies.LazyOptimisedTree.apply", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#apply(section:scales.xml.Elem,children:scales.xml.XmlChildren)(implicitfromParser:scales.xml.impl.FromParser):scales.xml.XmlTree", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/LazyOptimisedTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.MemoryOptimisationStrategy", "members_trait" : [{"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "Memory usage in DOMs is often dominated by repeated elements.", "trait" : "scales\/xml\/parser\/strategies\/MemoryOptimisationStrategy.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.NameValue", "shortDescription" : "An elem with no attributes, namespaces and only one text value.", "members_class" : [{"label" : "copy", "tail" : "(section: Elem, children: xml.XmlChildren): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.xml.parser.strategies.NameValue.copy", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#copy(section:scales.xml.Elem,children:scales.xml.XmlChildren):scales.utils.collection.Tree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]", "kind" : "def"}, {"label" : "children", "tail" : "(): xml.XmlChildren", "member" : "scales.xml.parser.strategies.NameValue.children", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#children:scales.xml.XmlChildren", "kind" : "def"}, {"member" : "scales.xml.parser.strategies.NameValue#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : ": String", "member" : "scales.xml.parser.strategies.NameValue.text", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#text:String", "kind" : "val"}, {"label" : "name", "tail" : ": QName", "member" : "scales.xml.parser.strategies.NameValue.name", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#name:scales.xml.QName", "kind" : "val"}, {"label" : "fold", "tail" : "(a: A)(folder: (utils.ItemOrSectionWalk[XmlItem, Elem], A) ⇒ A): A", "member" : "scales.utils.collection.Tree.fold", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#fold[A](a:A)(folder:(scales.utils.ItemOrSectionWalk[Item,Section],A)=>A):A", "kind" : "def"}, {"label" : "getLeft", "tail" : "(): XmlItem", "member" : "scales.utils.RightLike.getLeft", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#getLeft:L", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.RightLike.getRight", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#getRight:R", "kind" : "final def"}, {"label" : "get", "tail" : "(): Tree[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.RightLike.get", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#get:R", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Tree[XmlItem, Elem, xml.XCC]]", "member" : "scales.utils.RightLike.right", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[XmlItem]", "member" : "scales.utils.RightLike.left", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (XmlItem) ⇒ X, fr: (Tree[XmlItem, Elem, xml.XCC]) ⇒ X): X", "member" : "scales.utils.RightLike.fold", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isRight", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isLeft", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/NameValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "section", "tail" : "(): Elem", "member" : "scales.xml.parser.strategies.NameValue.section", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#section:scales.xml.Elem", "kind" : "abstract def"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]", "member" : "scales.utils.collection.Tree.seqLikeThing", "link" : "scales\/xml\/parser\/strategies\/NameValue.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit abstract val"}], "class" : "scales\/xml\/parser\/strategies\/NameValue.html", "kind" : "class"}, {"name" : "scales.xml.parser.strategies.NoOptimisation", "shortDescription" : "Performs no optimisation at all", "object" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html", "members_object" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): BaseToken", "member" : "scales.xml.parser.strategies.BaseTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.BaseToken", "kind" : "def"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: BaseToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: BaseToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.elementEnd", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:Token):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: BaseToken): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: BaseToken): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: BaseToken): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: BaseToken): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: BaseToken): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/NoOptimisation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.OptimisationToken", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fromParser", "tail" : ": FromParser", "member" : "scales.xml.parser.strategies.OptimisationToken.fromParser", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#fromParser:scales.xml.impl.FromParser", "kind" : "implicit abstract val"}, {"label" : "ver", "tail" : ": XmlVersion", "member" : "scales.xml.parser.strategies.OptimisationToken.ver", "link" : "scales\/xml\/parser\/strategies\/OptimisationToken.html#ver:scales.xml.XmlVersion", "kind" : "implicit abstract val"}], "shortDescription" : "Simple marker for per parse optimisation oppurtunties", "trait" : "scales\/xml\/parser\/strategies\/OptimisationToken.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.OptimisingStrategiesImplicits", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/strategies\/OptimisingStrategiesImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.PathOptimisationStrategy", "members_trait" : [{"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: Token): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: Token): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.elementEnd", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:Token):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "Certain paths may be repeated (based on QNames of parents etc) and known to be by the developer, its also possible that the developer simply is not interested in this path.", "trait" : "scales\/xml\/parser\/strategies\/PathOptimisationStrategy.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.QNameElemTreeOptimisation", "shortDescription" : "Optimised QNames, Elems and Tree, heavily reduced memory consumption with LazyOptimisedTree.", "object" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html", "members_object" : [{"label" : "newTree", "tail" : "(elem: Elem, children: xml.XmlChildren, token: ElemToken)(seqLikeThing: SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]): xml.XmlTree", "member" : "scales.xml.parser.strategies.QNameElemTreeOptimisation.newTree", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#newTree(elem:scales.xml.Elem,children:scales.xml.XmlChildren,token:scales.xml.parser.strategies.ElemToken)(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[scales.xml.XCC[_],scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XCC]):scales.xml.XmlTree", "kind" : "def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): ElemToken", "member" : "scales.xml.parser.strategies.ElemTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.ElemToken", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: ElemToken): Unit", "member" : "scales.xml.parser.strategies.TreeOptimisation.elementEnd", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:TOKEN):Unit", "kind" : "final def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: ElemToken): Elem", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.elem", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "elemValue", "tail" : "(key: ElemKey)(newT: (ElemKey) ⇒ Elem): Elem", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.elemValue", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#elemValue(key:scales.xml.impl.ElemKey)(newT:scales.xml.impl.ElemKey=>scales.xml.Elem):scales.xml.Elem", "kind" : "def"}, {"label" : "cacheAll", "tail" : ": Boolean", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.cacheAll", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#cacheAll:Boolean", "kind" : "val"}, {"label" : "ecache", "tail" : ": ConcurrentHashMap[ElemKey, Elem]", "member" : "scales.xml.parser.strategies.ElemQNameOptimisationT.ecache", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#ecache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.ElemKey,scales.xml.Elem]", "kind" : "val"}, {"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: ElemToken): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: ElemToken): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: ElemToken): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: ElemToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: ElemToken): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameElemTreeOptimisation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.QNameMemoryOptimisation", "shortDescription" : "The default as it will equal or better Scala Xml memory consumption at a performance gain.", "object" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html", "members_object" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): QNameToken", "member" : "scales.xml.parser.strategies.QNameTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.QNameToken", "kind" : "def"}, {"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: QNameToken): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: QNameToken): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: QNameToken): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: QNameToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: QNameToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.elementEnd", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:Token):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: QNameToken): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: QNameToken): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameMemoryOptimisation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.QNameOptimisationT", "members_trait" : [{"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "Threadsafe global cache, assumption is most applications would benefit from this", "trait" : "scales\/xml\/parser\/strategies\/QNameOptimisationT.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.QNameToken", "shortDescription" : "", "members_class" : [{"label" : "pQ", "tail" : ": (FullEqualQNameKey) ⇒ PrefixedQName { final val prefix: Some[String] }", "member" : "scales.xml.parser.strategies.QNameToken.pQ", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#pQ:scales.xml.impl.FullEqualQNameKey=>scales.xml.PrefixedQName{finalvalprefix:Some[String]}", "kind" : "val"}, {"label" : "unQ", "tail" : ": (FullEqualQNameKey) ⇒ UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameToken.unQ", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#unQ:scales.xml.impl.FullEqualQNameKey=>scales.xml.UnprefixedQName", "kind" : "val"}, {"label" : "noNsQ", "tail" : ": (FullEqualQNameKey) ⇒ NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameToken.noNsQ", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#noNsQ:scales.xml.impl.FullEqualQNameKey=>scales.xml.NoNamespaceQName", "kind" : "val"}, {"label" : "qkey", "tail" : ": FullEqualQNameKey", "member" : "scales.xml.parser.strategies.QNameToken.qkey", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#qkey:scales.xml.impl.FullEqualQNameKey", "kind" : "val"}, {"member" : "scales.xml.parser.strategies.QNameToken#<init>", "error" : "unsupported entity"}, {"label" : "fromParser", "tail" : ": FromParser", "member" : "scales.xml.parser.strategies.QNameToken.fromParser", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#fromParser:scales.xml.impl.FromParser", "kind" : "implicit val"}, {"label" : "ver", "tail" : ": XmlVersion", "member" : "scales.xml.parser.strategies.QNameToken.ver", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#ver:scales.xml.XmlVersion", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameToken.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/parser\/strategies\/QNameToken.html", "kind" : "class"}, {"name" : "scales.xml.parser.strategies.QNameTokenF", "members_trait" : [{"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): QNameToken", "member" : "scales.xml.parser.strategies.QNameTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.QNameToken", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameTokenF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/parser\/strategies\/QNameTokenF.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.QNameTreeOptimisation", "shortDescription" : "Optimises QNames and Trees according to LazyOptimisedTree", "object" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html", "members_object" : [{"label" : "newTree", "tail" : "(elem: Elem, children: xml.XmlChildren, token: QNameToken)(seqLikeThing: SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]): xml.XmlTree", "member" : "scales.xml.parser.strategies.QNameTreeOptimisation.newTree", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#newTree(elem:scales.xml.Elem,children:scales.xml.XmlChildren,token:scales.xml.parser.strategies.QNameToken)(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[scales.xml.XCC[_],scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XCC]):scales.xml.XmlTree", "kind" : "def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): QNameToken", "member" : "scales.xml.parser.strategies.QNameTokenF.createToken", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):scales.xml.parser.strategies.QNameToken", "kind" : "def"}, {"label" : "value", "tail" : "(key: FullEqualQNameKey)(newT: (FullEqualQNameKey) ⇒ T): T", "member" : "scales.xml.parser.strategies.QNameOptimisationT.value", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#value[T<:scales.xml.QName](key:scales.xml.impl.FullEqualQNameKey)(newT:scales.xml.impl.FullEqualQNameKey=>T):T", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: QNameToken): PrefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: QNameToken): UnprefixedQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: QNameToken): NoNamespaceQName", "member" : "scales.xml.parser.strategies.QNameOptimisationT.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "qNameCache", "tail" : ": ConcurrentHashMap[FullEqualQNameKey, QName]", "member" : "scales.xml.parser.strategies.QNameOptimisationT.qNameCache", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#qNameCache:java.util.concurrent.ConcurrentHashMap[scales.xml.impl.FullEqualQNameKey,scales.xml.QName]", "kind" : "val"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: QNameToken): Unit", "member" : "scales.xml.parser.strategies.TreeOptimisation.elementEnd", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:TOKEN):Unit", "kind" : "final def"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: QNameToken): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: QNameToken): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: QNameToken): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/QNameTreeOptimisation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.parser.strategies.TextNodeJoiner", "members_trait" : [{"label" : "newTree", "tail" : "(elem: Elem, children: xml.XmlChildren, token: Token)(seqLikeThing: SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]): xml.XmlTree", "member" : "scales.xml.parser.strategies.TextNodeJoiner.newTree", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#newTree(elem:scales.xml.Elem,children:scales.xml.XmlChildren,token:Token)(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[scales.xml.XCC[_],scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XCC]):scales.xml.XmlTree", "kind" : "def"}, {"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: Token): Unit", "member" : "scales.xml.parser.strategies.TreeOptimisation.elementEnd", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:TOKEN):Unit", "kind" : "final def"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: Token): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: Token): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: Token): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: Token): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: Token): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: Token): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): Token", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "As this adds extra processing time, but better fits XPath rules (i.e.", "trait" : "scales\/xml\/parser\/strategies\/TextNodeJoiner.html", "kind" : "trait"}, {"name" : "scales.xml.parser.strategies.TreeOptimisation", "members_trait" : [{"label" : "elementEnd", "tail" : "(xml: TreeProxies, token: TOKEN): Unit", "member" : "scales.xml.parser.strategies.TreeOptimisation.elementEnd", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#elementEnd(xml:scales.xml.impl.TreeProxies,token:TOKEN):Unit", "kind" : "final def"}, {"label" : "beginSubTree", "tail" : "(stack: TreeProxies, elem: Elem, token: TOKEN): Unit", "member" : "scales.xml.parser.strategies.PathOptimisationStrategy.beginSubTree", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#beginSubTree(stack:scales.xml.impl.TreeProxies,elem:scales.xml.Elem,token:Token):Unit", "kind" : "def"}, {"label" : "elem", "tail" : "(name: QName, attributes: xml.Attributes, namespaces: Map[String, String], token: TOKEN): Elem", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.elem", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#elem(name:scales.xml.QName,attributes:scales.xml.Attributes,namespaces:Map[String,String],token:Token):scales.xml.Elem", "kind" : "def"}, {"label" : "prefixedQName", "tail" : "(local: String, uri: String, prefix: String, token: TOKEN): PrefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.prefixedQName", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#prefixedQName(local:String,uri:String,prefix:String,token:Token):scales.xml.PrefixedQName", "kind" : "def"}, {"label" : "unprefixedQName", "tail" : "(local: String, uri: String, token: TOKEN): UnprefixedQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.unprefixedQName", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#unprefixedQName(local:String,uri:String,token:Token):scales.xml.UnprefixedQName", "kind" : "def"}, {"label" : "noNamespaceQName", "tail" : "(local: String, token: TOKEN): NoNamespaceQName", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.noNamespaceQName", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#noNamespaceQName(local:String,token:Token):scales.xml.NoNamespaceQName", "kind" : "def"}, {"label" : "attribute", "tail" : "(qname: xml.AttributeQName, value: String, token: TOKEN): Attribute", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.attribute", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#attribute(qname:scales.xml.AttributeQName,value:String,token:Token):scales.xml.Attribute", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newTree", "tail" : "(elem: Elem, children: xml.XmlChildren, token: TOKEN)(seqLikeThing: SeqLikeThing[xml.XCC[_], utils.ItemOrTree[XmlItem, Elem, xml.XCC], xml.XCC]): xml.XmlTree", "member" : "scales.xml.parser.strategies.TreeOptimisation.newTree", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#newTree(elem:scales.xml.Elem,children:scales.xml.XmlChildren,token:TOKEN)(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[scales.xml.XCC[_],scales.utils.ItemOrTree[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC],scales.xml.XCC]):scales.xml.XmlTree", "kind" : "abstract def"}, {"label" : "createToken", "tail" : "(ver: XmlVersion, fromParser: FromParser): TOKEN", "member" : "scales.xml.parser.strategies.MemoryOptimisationStrategy.createToken", "link" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html#createToken(implicitver:scales.xml.XmlVersion,implicitfromParser:scales.xml.impl.FromParser):Token", "kind" : "abstract def"}], "shortDescription" : "Allows replacing a tree for memory optimisations", "trait" : "scales\/xml\/parser\/strategies\/TreeOptimisation.html", "kind" : "trait"}], "scales.utils.collection.path" : [{"name" : "scales.utils.collection.path.AbstractPathIterator", "members_trait" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "next", "tail" : "(): T", "member" : "scales.utils.collection.path.AbstractPathIterator.next", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.hasNext", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "prepareNext", "tail" : "(): Unit", "member" : "scales.utils.collection.path.AbstractPathIterator.prepareNext", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#prepareNext:Unit", "kind" : "def"}, {"label" : "nextState", "tail" : ": State", "member" : "scales.utils.collection.path.AbstractPathIterator.nextState", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#nextState:AbstractPathIterator.this.State", "kind" : "val"}, {"label" : "doNext", "tail" : "(ev: T): (State, T)", "member" : "scales.utils.collection.path.AbstractPathIterator.doNext", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#doNext(ev:T):(AbstractPathIterator.this.State,T)", "kind" : "def"}, {"label" : "EndElemS", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.EndElemS", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#EndElemS", "kind" : "object"}, {"label" : "End", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.End", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#End", "kind" : "object"}, {"label" : "OnItem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.OnItem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#OnItem", "kind" : "object"}, {"label" : "canDoNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.canDoNext", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#canDoNext:Boolean", "kind" : "final def"}, {"label" : "StartElem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.StartElem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StartElem", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.State", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "isForward", "tail" : ": Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.isForward", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#isForward:Boolean", "kind" : "val"}, {"label" : "path", "tail" : ": Path[Item, Section, CC]", "member" : "scales.utils.collection.path.AbstractPathIterator.path", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#path:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[T]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[T]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[T]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[T]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.Iterator.find", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(T, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(T, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.span", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (Iterator[T], Iterator[T])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (T, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): Iterator[T]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[T]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[T]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[T]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[T]", "member" : "scala.collection.Iterator.take", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[T]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[T]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[T]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "event", "tail" : "(): T", "member" : "scales.utils.collection.path.AbstractPathIterator.event", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#event:T", "kind" : "abstract def"}, {"label" : "end", "tail" : "(): T", "member" : "scales.utils.collection.path.AbstractPathIterator.end", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#end:T", "kind" : "abstract def"}, {"label" : "initialPath", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.AbstractPathIterator.initialPath", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#initialPath:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "abstract def"}], "shortDescription" : "Provides an Iterator from a given initial path that traverses the entire tree, allows both forwards and backwards iteration.", "trait" : "scales\/utils\/collection\/path\/AbstractPathIterator.html", "kind" : "trait"}, {"name" : "scales.utils.collection.path.AddAfter", "shortDescription" : "", "members_case class" : [{"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.AddAfter.perform", "link" : "scales\/utils\/collection\/path\/AddAfter.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.AddAfter#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.AddAfter.seqLikeThing", "link" : "scales\/utils\/collection\/path\/AddAfter.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit val"}, {"label" : "newPath", "tail" : ": utils.ItemOrTree[Item, Section, CC]", "member" : "scales.utils.collection.path.AddAfter.newPath", "link" : "scales\/utils\/collection\/path\/AddAfter.html#newPath:scales.utils.ItemOrTree[Item,Section,CC]", "kind" : "val"}, {"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/AddAfter.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.FoldOperation.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/AddAfter.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/AddAfter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/AddAfter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/AddAfter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/AddAfter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/AddAfter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/AddAfter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/AddAfter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddAfter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddAfter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddAfter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/AddAfter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/AddAfter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/AddAfter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/AddAfter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/AddAfter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/AddAfter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/AddAfter.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.AddBefore", "shortDescription" : "", "members_case class" : [{"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.AddBefore.perform", "link" : "scales\/utils\/collection\/path\/AddBefore.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.AddBefore#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.AddBefore.seqLikeThing", "link" : "scales\/utils\/collection\/path\/AddBefore.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit val"}, {"label" : "newPath", "tail" : ": utils.ItemOrTree[Item, Section, CC]", "member" : "scales.utils.collection.path.AddBefore.newPath", "link" : "scales\/utils\/collection\/path\/AddBefore.html#newPath:scales.utils.ItemOrTree[Item,Section,CC]", "kind" : "val"}, {"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/AddBefore.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.FoldOperation.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/AddBefore.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/AddBefore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/AddBefore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/AddBefore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/AddBefore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/AddBefore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/AddBefore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/AddBefore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddBefore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddBefore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddBefore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/AddBefore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/AddBefore.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/AddBefore.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/AddBefore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/AddBefore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/AddBefore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/AddBefore.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.AddedBeforeOrAfterRoot", "shortDescription" : "", "object" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/AddedBeforeOrAfterRoot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.collection.path.AsIs", "shortDescription" : "Use to make it easier to filter out large sets (for those that aren't interesting simply asis them, see tests for use case)", "members_case class" : [{"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.AsIs.perform", "link" : "scales\/utils\/collection\/path\/AsIs.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.AsIs#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.AsIs.seqLikeThing", "link" : "scales\/utils\/collection\/path\/AsIs.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit val"}, {"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/AsIs.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.FoldOperation.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/AsIs.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/AsIs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/AsIs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/AsIs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/AsIs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/AsIs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/AsIs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/AsIs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AsIs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AsIs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/AsIs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/AsIs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/AsIs.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/AsIs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/AsIs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/AsIs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/AsIs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/AsIs.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.DirectionIterator", "shortDescription" : "Iterates over paths using the document order it skips over EndElemS events when going forward and StartElem when reversing, returning just the path.", "members_class" : [{"label" : "EndElemS", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.EndElemS", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#EndElemS", "kind" : "object"}, {"label" : "End", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.End", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#End", "kind" : "object"}, {"label" : "OnItem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.OnItem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#OnItem", "kind" : "object"}, {"label" : "StartElem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.StartElem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StartElem", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.State", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "prepareNext", "tail" : "(): Unit", "member" : "scales.utils.collection.path.DirectionIterator.prepareNext", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#prepareNext:Unit", "kind" : "def"}, {"label" : "end", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.DirectionIterator.end", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#end:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "event", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.DirectionIterator.event", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#event:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.DirectionIterator#<init>", "error" : "unsupported entity"}, {"label" : "isForward", "tail" : ": Boolean", "member" : "scales.utils.collection.path.DirectionIterator.isForward", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#isForward:Boolean", "kind" : "val"}, {"label" : "initialPath", "tail" : ": Path[Item, Section, CC]", "member" : "scales.utils.collection.path.DirectionIterator.initialPath", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#initialPath:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "val"}, {"label" : "next", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.AbstractPathIterator.next", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.hasNext", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "nextState", "tail" : ": State", "member" : "scales.utils.collection.path.AbstractPathIterator.nextState", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#nextState:AbstractPathIterator.this.State", "kind" : "val"}, {"label" : "doNext", "tail" : "(ev: Path[Item, Section, CC]): (State, Path[Item, Section, CC])", "member" : "scales.utils.collection.path.AbstractPathIterator.doNext", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#doNext(ev:T):(AbstractPathIterator.this.State,T)", "kind" : "def"}, {"label" : "canDoNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.canDoNext", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#canDoNext:Boolean", "kind" : "final def"}, {"label" : "path", "tail" : ": Path[Item, Section, CC]", "member" : "scales.utils.collection.path.AbstractPathIterator.path", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#path:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Path[Item, Section, CC]], Iterator[Path[Item, Section, CC]])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Option[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.find", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Path[Item, Section, CC]) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Path[Item, Section, CC], Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Path[Item, Section, CC], B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): (Iterator[Path[Item, Section, CC]], Iterator[Path[Item, Section, CC]])", "member" : "scala.collection.Iterator.span", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): (Iterator[Path[Item, Section, CC]], Iterator[Path[Item, Section, CC]])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Path[Item, Section, CC], B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Path[Item, Section, CC]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Path[Item, Section, CC], B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Path[Item, Section, CC], B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Path[Item, Section, CC]) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Path[Item, Section, CC]) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.take", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Path[Item, Section, CC], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Path[Item, Section, CC], Col[Path[Item, Section, CC]]]): Col[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Path[Item, Section, CC]) ⇒ B)(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Path[Item, Section, CC]) ⇒ B)(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Path[Item, Section, CC]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Path[Item, Section, CC], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Path[Item, Section, CC]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Path[Item, Section, CC], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Path[Item, Section, CC]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Path[Item, Section, CC], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Path[Item, Section, CC]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Path[Item, Section, CC], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Path[Item, Section, CC]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Path[Item, Section, CC], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/DirectionIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/collection\/path\/DirectionIterator.html", "kind" : "class"}, {"name" : "scales.utils.collection.path.FoldError", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/FoldError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/FoldError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/FoldError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/FoldError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/FoldError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/FoldError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/FoldError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/FoldError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/FoldError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/FoldError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/FoldError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/FoldError.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/FoldError.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/FoldError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/FoldError.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/FoldError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/FoldError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/FoldError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/FoldError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/path\/FoldError.html", "kind" : "trait"}, {"name" : "scales.utils.collection.path.FoldOperation", "members_trait" : [{"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.FoldOperation.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/FoldOperation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.perform", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "abstract def"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.FoldOperation.seqLikeThing", "link" : "scales\/utils\/collection\/path\/FoldOperation.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit abstract val"}], "shortDescription" : "Represents the base for operations that fold over a list of paths", "trait" : "scales\/utils\/collection\/path\/FoldOperation.html", "kind" : "trait"}, {"name" : "scales.utils.collection.path.Node", "shortDescription" : "Position in a parent Paths children", "members_case class" : [{"member" : "scales.utils.collection.path.Node#<init>", "error" : "unsupported entity"}, {"label" : "focus", "tail" : ": utils.ItemOrTree[Item, Section, CC]", "member" : "scales.utils.collection.path.Node.focus", "link" : "scales\/utils\/collection\/path\/Node.html#focus:scales.utils.ItemOrTree[Item,Section,CC]", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "scales.utils.collection.path.Node.index", "link" : "scales\/utils\/collection\/path\/Node.html#index:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/Node.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.NoPaths", "shortDescription" : "", "object" : "scales\/utils\/collection\/path\/NoPaths$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/NoPaths$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/NoPaths$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.collection.path.NoSingleRoot", "shortDescription" : "", "object" : "scales\/utils\/collection\/path\/NoSingleRoot$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/NoSingleRoot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.collection.path.Path", "shortDescription" : "", "members_case class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/utils\/collection\/path\/Path.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "toString", "tail" : "(): String", "member" : "scales.utils.collection.path.Path.toString", "link" : "scales\/utils\/collection\/path\/Path.html#toString():String", "kind" : "def"}, {"label" : "position", "tail" : "(): Position[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.position", "link" : "scales\/utils\/collection\/path\/Path.html#position():scales.utils.collection.path.Position[Item,Section,CC]", "kind" : "def"}, {"label" : "removeAndUp", "tail" : "(): Option[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Path.removeAndUp", "link" : "scales\/utils\/collection\/path\/Path.html#removeAndUp():Option[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "modify", "tail" : "(newFocus: (utils.ItemOrTree[Item, Section, CC]) ⇒ utils.ItemOrTree[Item, Section, CC]): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.modify", "link" : "scales\/utils\/collection\/path\/Path.html#modify(newFocus:scales.utils.ItemOrTree[Item,Section,CC]=>scales.utils.ItemOrTree[Item,Section,CC]):scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "zipUp", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.zipUp", "link" : "scales\/utils\/collection\/path\/Path.html#zipUp():scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "lastChild", "tail" : "(): Option[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Path.lastChild", "link" : "scales\/utils\/collection\/path\/Path.html#lastChild():Option[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "firstChild", "tail" : "(): Option[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Path.firstChild", "link" : "scales\/utils\/collection\/path\/Path.html#firstChild():Option[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Path.iterator", "link" : "scales\/utils\/collection\/path\/Path.html#iterator():Iterator[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "item", "tail" : "(): Item", "member" : "scales.utils.collection.path.Path.item", "link" : "scales\/utils\/collection\/path\/Path.html#item():Item", "kind" : "def"}, {"label" : "tree", "tail" : "(): Tree[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.tree", "link" : "scales\/utils\/collection\/path\/Path.html#tree():scales.utils.collection.Tree[Item,Section,CC]", "kind" : "def"}, {"label" : "nextSibling", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.nextSibling", "link" : "scales\/utils\/collection\/path\/Path.html#nextSibling:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "previousSibling", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.previousSibling", "link" : "scales\/utils\/collection\/path\/Path.html#previousSibling:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "children", "tail" : "(): CC[utils.ItemOrTree[Item, Section, CC]]", "member" : "scales.utils.collection.path.Path.children", "link" : "scales\/utils\/collection\/path\/Path.html#children:CC[scales.utils.ItemOrTree[Item,Section,CC]]", "kind" : "def"}, {"label" : "focus", "tail" : "(i: (Item) ⇒ R, t: (Tree[Item, Section, CC]) ⇒ R): R", "member" : "scales.utils.collection.path.Path.focus", "link" : "scales\/utils\/collection\/path\/Path.html#focus[R](i:Item=>R,t:scales.utils.collection.Tree[Item,Section,CC]=>R):R", "kind" : "def"}, {"label" : "hasChildren", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.Path.hasChildren", "link" : "scales\/utils\/collection\/path\/Path.html#hasChildren:Boolean", "kind" : "def"}, {"label" : "isItem", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.Path.isItem", "link" : "scales\/utils\/collection\/path\/Path.html#isItem:Boolean", "kind" : "def"}, {"label" : "hasNextSibling", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.Path.hasNextSibling", "link" : "scales\/utils\/collection\/path\/Path.html#hasNextSibling:Boolean", "kind" : "def"}, {"label" : "hasPreviousSibling", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.Path.hasPreviousSibling", "link" : "scales\/utils\/collection\/path\/Path.html#hasPreviousSibling:Boolean", "kind" : "def"}, {"label" : "parentCount", "tail" : "(): Int", "member" : "scales.utils.collection.path.Path.parentCount", "link" : "scales\/utils\/collection\/path\/Path.html#parentCount:Int", "kind" : "def"}, {"label" : "parentTree", "tail" : "(): Tree[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.parentTree", "link" : "scales\/utils\/collection\/path\/Path.html#parentTree:scales.utils.collection.Tree[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.Path#<init>", "error" : "unsupported entity"}, {"label" : "node", "tail" : ": Node[Item, Section, CC]", "member" : "scales.utils.collection.path.Path.node", "link" : "scales\/utils\/collection\/path\/Path.html#node:scales.utils.collection.path.Node[Item,Section,CC]", "kind" : "val"}, {"label" : "top", "tail" : ": EitherLike[Top[Item, Section, CC], Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Path.top", "link" : "scales\/utils\/collection\/path\/Path.html#top:scales.utils.EitherLike[scales.utils.collection.path.Top[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "val"}, {"label" : "getLeft", "tail" : "(): Top[Item, Section, CC]", "member" : "scales.utils.RightLike.getLeft", "link" : "scales\/utils\/collection\/path\/Path.html#getLeft:L", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.RightLike.getRight", "link" : "scales\/utils\/collection\/path\/Path.html#getRight:R", "kind" : "final def"}, {"label" : "get", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.RightLike.get", "link" : "scales\/utils\/collection\/path\/Path.html#get:R", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Path[Item, Section, CC]]", "member" : "scales.utils.RightLike.right", "link" : "scales\/utils\/collection\/path\/Path.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[Top[Item, Section, CC]]", "member" : "scales.utils.RightLike.left", "link" : "scales\/utils\/collection\/path\/Path.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (Top[Item, Section, CC]) ⇒ X, fr: (Path[Item, Section, CC]) ⇒ X): X", "member" : "scales.utils.RightLike.fold", "link" : "scales\/utils\/collection\/path\/Path.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isRight", "link" : "scales\/utils\/collection\/path\/Path.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isLeft", "link" : "scales\/utils\/collection\/path\/Path.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "seq", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.Iterable.seq", "link" : "scales\/utils\/collection\/path\/Path.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "scales\/utils\/collection\/path\/Path.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Path[Item, Section, CC], Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/utils\/collection\/path\/Path.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Path[Item, Section, CC], Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/utils\/collection\/path\/Path.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/utils\/collection\/path\/Path.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/utils\/collection\/path\/Path.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "scales\/utils\/collection\/path\/Path.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "scales\/utils\/collection\/path\/Path.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/utils\/collection\/path\/Path.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "scales\/utils\/collection\/path\/Path.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "scales\/utils\/collection\/path\/Path.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "scales\/utils\/collection\/path\/Path.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "scales\/utils\/collection\/path\/Path.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/path\/Path.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/utils\/collection\/path\/Path.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/utils\/collection\/path\/Path.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "scales\/utils\/collection\/path\/Path.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.drop", "link" : "scales\/utils\/collection\/path\/Path.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.take", "link" : "scales\/utils\/collection\/path\/Path.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.slice", "link" : "scales\/utils\/collection\/path\/Path.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Path[Item, Section, CC]", "member" : "scala.collection.IterableLike.head", "link" : "scales\/utils\/collection\/path\/Path.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/utils\/collection\/path\/Path.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/utils\/collection\/path\/Path.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Path[Item, Section, CC], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "scales\/utils\/collection\/path\/Path.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Path[Item, Section, CC], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "scales\/utils\/collection\/path\/Path.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "scales\/utils\/collection\/path\/Path.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Option[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.find", "link" : "scales\/utils\/collection\/path\/Path.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "scales\/utils\/collection\/path\/Path.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "scales\/utils\/collection\/path\/Path.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Path[Item, Section, CC]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "scales\/utils\/collection\/path\/Path.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Path[Item, Section, CC]]): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.toCollection", "link" : "scales\/utils\/collection\/path\/Path.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "scales\/utils\/collection\/path\/Path.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Path[Item, Section, CC]) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/utils\/collection\/path\/Path.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Path[Item, Section, CC]) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/utils\/collection\/path\/Path.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Path[Item, Section, CC]) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/utils\/collection\/path\/Path.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Path[Item, Section, CC]) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/utils\/collection\/path\/Path.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/utils\/collection\/path\/Path.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Path[Item, Section, CC], Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "scales\/utils\/collection\/path\/Path.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): FilterMonadic[Path[Item, Section, CC], Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/utils\/collection\/path\/Path.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/utils\/collection\/path\/Path.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Path[Item, Section, CC], Col[Path[Item, Section, CC]]]): Col[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/utils\/collection\/path\/Path.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/utils\/collection\/path\/Path.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/utils\/collection\/path\/Path.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/utils\/collection\/path\/Path.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Path[Item, Section, CC]], Iterable[Path[Item, Section, CC]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "scales\/utils\/collection\/path\/Path.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): (Iterable[Path[Item, Section, CC]], Iterable[Path[Item, Section, CC]])", "member" : "scala.collection.TraversableLike.span", "link" : "scales\/utils\/collection\/path\/Path.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "scales\/utils\/collection\/path\/Path.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.init", "link" : "scales\/utils\/collection\/path\/Path.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/utils\/collection\/path\/Path.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Path[Item, Section, CC]", "member" : "scala.collection.TraversableLike.last", "link" : "scales\/utils\/collection\/path\/Path.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.tail", "link" : "scales\/utils\/collection\/path\/Path.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/utils\/collection\/path\/Path.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Path[Item, Section, CC], B) ⇒ B)(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/utils\/collection\/path\/Path.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Path[Item, Section, CC]) ⇒ B)(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/utils\/collection\/path\/Path.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/utils\/collection\/path\/Path.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Path[Item, Section, CC]) ⇒ K): Map[K, Iterable[Path[Item, Section, CC]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/utils\/collection\/path\/Path.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): (Iterable[Path[Item, Section, CC]], Iterable[Path[Item, Section, CC]])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/utils\/collection\/path\/Path.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Path[Item, Section, CC], B])(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/utils\/collection\/path\/Path.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/utils\/collection\/path\/Path.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/utils\/collection\/path\/Path.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Path[Item, Section, CC]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/utils\/collection\/path\/Path.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Path[Item, Section, CC]) ⇒ B)(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/utils\/collection\/path\/Path.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/path\/Path.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/utils\/collection\/path\/Path.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Path[Item, Section, CC]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/utils\/collection\/path\/Path.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/utils\/collection\/path\/Path.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Path[Item, Section, CC], ParIterable[Path[Item, Section, CC]]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "scales\/utils\/collection\/path\/Path.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/utils\/collection\/path\/Path.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/utils\/collection\/path\/Path.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/utils\/collection\/path\/Path.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Path[Item, Section, CC]]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/utils\/collection\/path\/Path.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/Path.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/Path.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/utils\/collection\/path\/Path.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/Path.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/Path.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/utils\/collection\/path\/Path.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Path[Item, Section, CC], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/utils\/collection\/path\/Path.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/utils\/collection\/path\/Path.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/utils\/collection\/path\/Path.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/utils\/collection\/path\/Path.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/utils\/collection\/path\/Path.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/utils\/collection\/path\/Path.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/utils\/collection\/path\/Path.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/utils\/collection\/path\/Path.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/path\/Path.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/utils\/collection\/path\/Path.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/utils\/collection\/path\/Path.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Path[Item, Section, CC]) ⇒ B)(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/utils\/collection\/path\/Path.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Path[Item, Section, CC]) ⇒ B)(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/utils\/collection\/path\/Path.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/utils\/collection\/path\/Path.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Path[Item, Section, CC]", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/utils\/collection\/path\/Path.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/utils\/collection\/path\/Path.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/utils\/collection\/path\/Path.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Path[Item, Section, CC]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/utils\/collection\/path\/Path.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/utils\/collection\/path\/Path.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/utils\/collection\/path\/Path.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/utils\/collection\/path\/Path.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Path[Item, Section, CC], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/utils\/collection\/path\/Path.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Path[Item, Section, CC]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/utils\/collection\/path\/Path.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Path[Item, Section, CC]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/utils\/collection\/path\/Path.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Path[Item, Section, CC]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/utils\/collection\/path\/Path.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Path[Item, Section, CC], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/utils\/collection\/path\/Path.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Path[Item, Section, CC]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/utils\/collection\/path\/Path.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Path[Item, Section, CC], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/utils\/collection\/path\/Path.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Path[Item, Section, CC]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/utils\/collection\/path\/Path.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/utils\/collection\/path\/Path.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/utils\/collection\/path\/Path.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Path[Item, Section, CC]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/utils\/collection\/path\/Path.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/utils\/collection\/path\/Path.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Path.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Path.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Path.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Path.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Path.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Path.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Path.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Path.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Path.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Path.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Path.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Path.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Path.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Path.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Path.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Path.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/Path.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.PathFold", "shortDescription" : "", "object" : "scales\/utils\/collection\/path\/PathFold$.html", "members_object" : [{"label" : "foldPositions", "tail" : "(locations: Iterable[Path[Item, Section, CC]], accumulator: ACC)(folder: (ACC, Path[Item, Section, CC]) ⇒ (ACC, FoldOperation[Item, Section, CC]))(seqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC], cm: ClassManifest[(Position[Item, Section, CC], Path[Item, Section, CC])]): Either[(ACC, Path[Item, Section, CC]), FoldError]", "member" : "scales.utils.collection.path.PathFold.foldPositions", "link" : "scales\/utils\/collection\/path\/PathFold$.html#foldPositions[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_],ACC](locations:Iterable[scales.utils.collection.path.Path[Item,Section,CC]],accumulator:ACC)(folder:(ACC,scales.utils.collection.path.Path[Item,Section,CC])=>(ACC,scales.utils.collection.path.FoldOperation[Item,Section,CC]))(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC],implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]):Either[(ACC,scales.utils.collection.path.Path[Item,Section,CC]),scales.utils.collection.path.FoldError]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/PathFold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/PathFold$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/PathFold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/PathFold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/PathFold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/PathFold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/PathFold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathFold$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathFold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathFold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/PathFold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/PathFold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/PathFold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/PathFold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/PathFold$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/PathFold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/PathFold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/PathFold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/PathFold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.collection.path.PathFoldCombiner", "shortDescription" : "Provide & combinator to pass the result of one fold onto the other,in the case of failure no further joined functions will be called.", "members_class" : [{"label" : "|", "tail" : "(next: utils.PathFoldR[Item, Section, CC]): utils.PathFoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.PathFoldCombiner.|", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#|(next:scales.utils.PathFoldR[Item,Section,CC]):scales.utils.PathFoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "&", "tail" : "(next: utils.PathFoldR[Item, Section, CC]): utils.PathFoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.PathFoldCombiner.&", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#&(next:scales.utils.PathFoldR[Item,Section,CC]):scales.utils.PathFoldR[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.PathFoldCombiner#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/PathFoldCombiner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/collection\/path\/PathFoldCombiner.html", "kind" : "class"}, {"name" : "scales.utils.collection.path.PathImplicits", "members_trait" : [{"label" : "fToFoldRToCombine", "tail" : "(f: utils.PathFoldR[Item, Section, CC]): PathFoldCombiner[Item, Section, CC]", "member" : "scales.utils.collection.path.PathImplicits.fToFoldRToCombine", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#fToFoldRToCombine[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](f:scales.utils.PathFoldR[Item,Section,CC]):scales.utils.collection.path.PathFoldCombiner[Item,Section,CC]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/PathImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/PathImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/collection\/path\/PathImplicits.html", "kind" : "trait"}, {"name" : "scales.utils.collection.path.Paths", "members_trait" : [{"label" : "following", "tail" : "(path: Path[Item, Section, CC]): Option[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Paths.following", "link" : "scales\/utils\/collection\/path\/Paths.html#following[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path:scales.utils.collection.path.Path[Item,Section,CC]):Option[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "preceding", "tail" : "(path: Path[Item, Section, CC]): Option[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Paths.preceding", "link" : "scales\/utils\/collection\/path\/Paths.html#preceding[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path:scales.utils.collection.path.Path[Item,Section,CC]):Option[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "deepestLast", "tail" : "(path: Path[Item, Section, CC]): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Paths.deepestLast", "link" : "scales\/utils\/collection\/path\/Paths.html#deepestLast[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "sortT", "tail" : "(paths: Iterable[(T, Path[Item, Section, CC])], isDescending: Boolean)(cm: ClassManifest[(Position[Item, Section, CC], (T, Path[Item, Section, CC]))]): Iterable[(T, Path[Item, Section, CC])]", "member" : "scales.utils.collection.path.Paths.sortT", "link" : "scales\/utils\/collection\/path\/Paths.html#sortT[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_],T](paths:Iterable[(T,scales.utils.collection.path.Path[Item,Section,CC])],isDescending:Boolean)(implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],(T,scales.utils.collection.path.Path[Item,Section,CC]))]):Iterable[(T,scales.utils.collection.path.Path[Item,Section,CC])]", "kind" : "def"}, {"label" : "sort", "tail" : "(paths: Iterable[Path[Item, Section, CC]], isDescending: Boolean)(cm: ClassManifest[(Position[Item, Section, CC], Path[Item, Section, CC])]): Iterable[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Paths.sort", "link" : "scales\/utils\/collection\/path\/Paths.html#sort[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](paths:Iterable[scales.utils.collection.path.Path[Item,Section,CC]],isDescending:Boolean)(implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]):Iterable[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "sortPositions", "tail" : "(paths: Iterable[Path[Item, Section, CC]], isDescending: Boolean)(cm: ClassManifest[(Position[Item, Section, CC], Path[Item, Section, CC])]): Iterable[(Position[Item, Section, CC], Path[Item, Section, CC])]", "member" : "scales.utils.collection.path.Paths.sortPositions", "link" : "scales\/utils\/collection\/path\/Paths.html#sortPositions[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](paths:Iterable[scales.utils.collection.path.Path[Item,Section,CC]],isDescending:Boolean)(implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]):Iterable[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]", "kind" : "def"}, {"label" : "sortPositionsT", "tail" : "(paths: Iterable[(T, Path[Item, Section, CC])], isDescending: Boolean)(cm: ClassManifest[(Position[Item, Section, CC], (T, Path[Item, Section, CC]))]): Iterable[(Position[Item, Section, CC], (T, Path[Item, Section, CC]))]", "member" : "scales.utils.collection.path.Paths.sortPositionsT", "link" : "scales\/utils\/collection\/path\/Paths.html#sortPositionsT[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[X],T](paths:Iterable[(T,scales.utils.collection.path.Path[Item,Section,CC])],isDescending:Boolean)(implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],(T,scales.utils.collection.path.Path[Item,Section,CC]))]):Iterable[(scales.utils.collection.path.Position[Item,Section,CC],(T,scales.utils.collection.path.Path[Item,Section,CC]))]", "kind" : "def"}, {"label" : "positions", "tail" : "(paths: Iterable[Path[Item, Section, CC]]): Iterable[(Position[Item, Section, CC], Path[Item, Section, CC])]", "member" : "scales.utils.collection.path.Paths.positions", "link" : "scales\/utils\/collection\/path\/Paths.html#positions[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](paths:Iterable[scales.utils.collection.path.Path[Item,Section,CC]]):Iterable[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]", "kind" : "def"}, {"label" : "positionsT", "tail" : "(paths: Iterable[(T, Path[Item, Section, CC])]): Iterable[(Position[Item, Section, CC], (T, Path[Item, Section, CC]))]", "member" : "scales.utils.collection.path.Paths.positionsT", "link" : "scales\/utils\/collection\/path\/Paths.html#positionsT[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_],T](paths:Iterable[(T,scales.utils.collection.path.Path[Item,Section,CC])]):Iterable[(scales.utils.collection.path.Position[Item,Section,CC],(T,scales.utils.collection.path.Path[Item,Section,CC]))]", "kind" : "def"}, {"label" : "top", "tail" : "(tree: Tree[Item, Section, CC])(seqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Paths.top", "link" : "scales\/utils\/collection\/path\/Paths.html#top[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](tree:scales.utils.collection.Tree[Item,Section,CC])(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]):scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "toPositionalEqual", "tail" : "(): Equal[Path[Item, Section, CC]]", "member" : "scales.utils.collection.path.Paths.toPositionalEqual", "link" : "scales\/utils\/collection\/path\/Paths.html#toPositionalEqual[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]]:scalaz.Equal[scales.utils.collection.path.Path[Item,Section,CC]]", "kind" : "def"}, {"label" : "comparePathsT", "tail" : "(path1: (Position[Item, Section, CC], (T, Path[Item, Section, CC])), path2: (Position[Item, Section, CC], (T, Path[Item, Section, CC]))): (Int, Position[Item, Section, CC], Position[Item, Section, CC])", "member" : "scales.utils.collection.path.Paths.comparePathsT", "link" : "scales\/utils\/collection\/path\/Paths.html#comparePathsT[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_],T](path1:(scales.utils.collection.path.Position[Item,Section,CC],(T,scales.utils.collection.path.Path[Item,Section,CC])),path2:(scales.utils.collection.path.Position[Item,Section,CC],(T,scales.utils.collection.path.Path[Item,Section,CC]))):(Int,scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Position[Item,Section,CC])", "kind" : "def"}, {"label" : "comparePathsP", "tail" : "(path1: (Position[Item, Section, CC], Path[Item, Section, CC]), path2: (Position[Item, Section, CC], Path[Item, Section, CC])): (Int, Position[Item, Section, CC], Position[Item, Section, CC])", "member" : "scales.utils.collection.path.Paths.comparePathsP", "link" : "scales\/utils\/collection\/path\/Paths.html#comparePathsP[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path1:(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC]),path2:(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])):(Int,scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Position[Item,Section,CC])", "kind" : "def"}, {"label" : "comparePaths", "tail" : "(path1: Path[Item, Section, CC], path2: Path[Item, Section, CC]): (Int, Position[Item, Section, CC], Position[Item, Section, CC])", "member" : "scales.utils.collection.path.Paths.comparePaths", "link" : "scales\/utils\/collection\/path\/Paths.html#comparePaths[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path1:scales.utils.collection.path.Path[Item,Section,CC],path2:scales.utils.collection.path.Path[Item,Section,CC]):(Int,scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Position[Item,Section,CC])", "kind" : "def"}, {"label" : "comparePathsDirect", "tail" : "(path1: Path[Item, Section, CC], path2: Path[Item, Section, CC]): Boolean", "member" : "scales.utils.collection.path.Paths.comparePathsDirect", "link" : "scales\/utils\/collection\/path\/Paths.html#comparePathsDirect[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path1:scales.utils.collection.path.Path[Item,Section,CC],path2:scales.utils.collection.path.Path[Item,Section,CC]):Boolean", "kind" : "def"}, {"label" : "comparePathPositions", "tail" : "(path1: Position[Item, Section, CC], path2: Position[Item, Section, CC]): Int", "member" : "scales.utils.collection.path.Paths.comparePathPositions", "link" : "scales\/utils\/collection\/path\/Paths.html#comparePathPositions[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path1:scales.utils.collection.path.Position[Item,Section,CC],path2:scales.utils.collection.path.Position[Item,Section,CC]):Int", "kind" : "def"}, {"label" : "NotSameRoot", "tail" : ": Int", "member" : "scales.utils.collection.path.Paths.NotSameRoot", "link" : "scales\/utils\/collection\/path\/Paths.html#NotSameRoot:Int", "kind" : "val"}, {"label" : "foldPositions", "tail" : "(locations: Iterable[Path[Item, Section, CC]])(folder: (Path[Item, Section, CC]) ⇒ FoldOperation[Item, Section, CC])(iseqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC], cm: ClassManifest[(Position[Item, Section, CC], Path[Item, Section, CC])]): FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.Paths.foldPositions", "link" : "scales\/utils\/collection\/path\/Paths.html#foldPositions[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](locations:Iterable[scales.utils.collection.path.Path[Item,Section,CC]])(folder:scales.utils.collection.path.Path[Item,Section,CC]=>scales.utils.collection.path.FoldOperation[Item,Section,CC])(implicitiseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC],implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]):Paths.this.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "foldPositions", "tail" : "(locations: Iterable[Path[Item, Section, CC]], accumulator: ACC)(folder: (ACC, Path[Item, Section, CC]) ⇒ (ACC, FoldOperation[Item, Section, CC]))(iseqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC], cm: ClassManifest[(Position[Item, Section, CC], Path[Item, Section, CC])]): Either[(ACC, Path[Item, Section, CC]), FoldError]", "member" : "scales.utils.collection.path.Paths.foldPositions", "link" : "scales\/utils\/collection\/path\/Paths.html#foldPositions[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_],ACC](locations:Iterable[scales.utils.collection.path.Path[Item,Section,CC]],accumulator:ACC)(folder:(ACC,scales.utils.collection.path.Path[Item,Section,CC])=>(ACC,scales.utils.collection.path.FoldOperation[Item,Section,CC]))(implicitiseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC],implicitcm:reflect.ClassManifest[(scales.utils.collection.path.Position[Item,Section,CC],scales.utils.collection.path.Path[Item,Section,CC])]):Either[(ACC,scales.utils.collection.path.Path[Item,Section,CC]),scales.utils.collection.path.FoldError]", "kind" : "def"}, {"label" : "PathFoldR", "tail" : "", "member" : "scales.utils.collection.path.Paths.PathFoldR", "link" : "scales\/utils\/collection\/path\/Paths.html#PathFoldR[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]]=scales.utils.collection.path.Path[Item,Section,CC]=>Paths.this.FoldR[Item,Section,CC]", "kind" : "type"}, {"label" : "FoldR", "tail" : "", "member" : "scales.utils.collection.path.Paths.FoldR", "link" : "scales\/utils\/collection\/path\/Paths.html#FoldR[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]]=Either[scales.utils.collection.path.Path[Item,Section,CC],scales.utils.collection.path.FoldError]", "kind" : "type"}, {"label" : "moveTo", "tail" : "(path: Path[Item, Section, CC], newPos: Position[Item, Section, CC])(seqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Paths.moveTo", "link" : "scales\/utils\/collection\/path\/Paths.html#moveTo[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path:scales.utils.collection.path.Path[Item,Section,CC],newPos:scales.utils.collection.path.Position[Item,Section,CC])(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]):scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "rootPath", "tail" : "(path: Path[Item, Section, CC]): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Paths.rootPath", "link" : "scales\/utils\/collection\/path\/Paths.html#rootPath[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "noPath", "tail" : "(seqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]): Path[Item, Section, CC]", "member" : "scales.utils.collection.path.Paths.noPath", "link" : "scales\/utils\/collection\/path\/Paths.html#noPath[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](implicitseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]):scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Paths.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Paths.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Paths.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Paths.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Paths.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Paths.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Paths.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Paths.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Paths.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Paths.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Paths.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Paths.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/Paths.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Paths.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/Paths.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/Paths.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Paths.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Paths.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Paths.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Utility functions for Paths, sorting, moving between Paths, getting to the root etc.", "trait" : "scales\/utils\/collection\/path\/Paths.html", "kind" : "trait"}, {"name" : "scales.utils.collection.path.Position", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Position.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Position.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Position.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Position.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Position.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Position.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Position.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Position.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Position.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Position.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Position.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Position.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/Position.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Position.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/Position.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/Position.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Position.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Position.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Position.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Positions only have meaning for a given Path(s).", "trait" : "scales\/utils\/collection\/path\/Position.html", "kind" : "trait"}, {"name" : "scales.utils.collection.path.Remove", "shortDescription" : "", "members_case class" : [{"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.Remove.perform", "link" : "scales\/utils\/collection\/path\/Remove.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.Remove#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.Remove.seqLikeThing", "link" : "scales\/utils\/collection\/path\/Remove.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit val"}, {"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/Remove.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.FoldOperation.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/Remove.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Remove.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Remove.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Remove.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Remove.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Remove.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Remove.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Remove.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Remove.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Remove.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Remove.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Remove.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Remove.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Remove.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Remove.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Remove.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Remove.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/Remove.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.RemovedRoot", "shortDescription" : "", "object" : "scales\/utils\/collection\/path\/RemovedRoot$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/RemovedRoot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.collection.path.Replace", "shortDescription" : "", "object" : "scales\/utils\/collection\/path\/Replace$.html", "members_object" : [{"label" : "apply", "tail" : "(replaceWith: utils.ItemOrTree[Item, Section, CC]*)(seqLikeThing: SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]): Replace[Item, Section, CC]", "member" : "scales.utils.collection.path.Replace.apply", "link" : "scales\/utils\/collection\/path\/Replace$.html#apply[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](replaceWith:scales.utils.ItemOrTree[Item,Section,CC]*)(implicitseqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]):scales.utils.collection.path.Replace[Item,Section,CC]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Replace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Replace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Replace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Replace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Replace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Replace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Replace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Replace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Replace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Replace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Replace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Replace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/collection\/path\/Replace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Replace$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/collection\/path\/Replace$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/collection\/path\/Replace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Replace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Replace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Replace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.Replace.perform", "link" : "scales\/utils\/collection\/path\/Replace.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.Replace.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/Replace.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"member" : "scales.utils.collection.path.Replace#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.Replace.seqLikeThing", "link" : "scales\/utils\/collection\/path\/Replace.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit val"}, {"label" : "replaceWith", "tail" : ": Iterable[utils.ItemOrTree[Item, Section, CC]]", "member" : "scales.utils.collection.path.Replace.replaceWith", "link" : "scales\/utils\/collection\/path\/Replace.html#replaceWith:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]", "kind" : "val"}, {"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/Replace.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Replace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Replace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Replace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Replace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Replace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Replace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Replace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Replace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Replace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Replace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Replace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Replace.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Replace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Replace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Replace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Replace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/Replace.html", "kind" : "object"}, {"name" : "scales.utils.collection.path.ReplaceWith", "shortDescription" : "Allows foldPositions to be nested, only replace and delete makes sense here (afaict).", "members_case class" : [{"label" : "perform", "tail" : "(path: Path[Item, Section, CC]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.ReplaceWith.perform", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#perform(path:scales.utils.collection.path.Path[Item,Section,CC]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"member" : "scales.utils.collection.path.ReplaceWith#<init>", "error" : "unsupported entity"}, {"label" : "seqLikeThing", "tail" : ": SeqLikeThing[CC[_], utils.ItemOrTree[Item, Section, CC], CC]", "member" : "scales.utils.collection.path.ReplaceWith.seqLikeThing", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#seqLikeThing:scales.utils.collection.SeqLikeThing[CC[_],scales.utils.ItemOrTree[Item,Section,CC],CC]", "kind" : "implicit val"}, {"label" : "wholeTree", "tail" : ": Boolean", "member" : "scales.utils.collection.path.ReplaceWith.wholeTree", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#wholeTree:Boolean", "kind" : "val"}, {"label" : "f", "tail" : ": utils.PathFoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.ReplaceWith.f", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#f:scales.utils.PathFoldR[Item,Section,CC]", "kind" : "val"}, {"label" : "add", "tail" : "(path: Path[Item, Section, CC], direction: Int, newPath: Iterable[utils.ItemOrTree[Item, Section, CC]]): utils.FoldR[Item, Section, CC]", "member" : "scales.utils.collection.path.FoldOperation.add", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#add(path:scales.utils.collection.path.Path[Item,Section,CC],direction:Int,newPath:Iterable[scales.utils.ItemOrTree[Item,Section,CC]]):scales.utils.FoldR[Item,Section,CC]", "kind" : "def"}, {"label" : "rootChangeAllowed", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.FoldOperation.rootChangeAllowed", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#rootChangeAllowed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/ReplaceWith.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/ReplaceWith.html", "kind" : "case class"}, {"name" : "scales.utils.collection.path.Top", "shortDescription" : "Represents the Top for a given Path, there isn't a tree above this", "members_case class" : [{"member" : "scales.utils.collection.path.Top#<init>", "error" : "unsupported entity"}, {"label" : "getRight", "tail" : "(): Path[Item, Section, CC]", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/utils\/collection\/path\/Top.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): Top[Item, Section, CC]", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/utils\/collection\/path\/Top.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): Top[Item, Section, CC]", "member" : "scales.utils.LeftLike.get", "link" : "scales\/utils\/collection\/path\/Top.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[Path[Item, Section, CC]]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/utils\/collection\/path\/Top.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[Top[Item, Section, CC]]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/utils\/collection\/path\/Top.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (Top[Item, Section, CC]) ⇒ X, fr: (Path[Item, Section, CC]) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/utils\/collection\/path\/Top.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/utils\/collection\/path\/Top.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/utils\/collection\/path\/Top.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/collection\/path\/Top.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/collection\/path\/Top.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/collection\/path\/Top.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/collection\/path\/Top.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/collection\/path\/Top.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/collection\/path\/Top.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/collection\/path\/Top.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Top.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Top.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/collection\/path\/Top.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/collection\/path\/Top.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/collection\/path\/Top.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/collection\/path\/Top.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/collection\/path\/Top.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/collection\/path\/Top.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/collection\/path\/Top.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/collection\/path\/Top.html", "kind" : "case class"}], "scales.utils.iteratee" : [{"name" : "scales.utils.iteratee.EphemeralStreamEnum", "shortDescription" : "", "object" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html", "members_object" : [{"label" : "toEphemeral", "tail" : "(iterator: Iterator[A]): EphemeralStream[A]", "member" : "scales.utils.iteratee.EphemeralStreamEnum.toEphemeral", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#toEphemeral[A](iterator:Iterator[A]):scalaz.EphemeralStream[A]", "kind" : "def"}, {"label" : "enumEphemeralStreamF", "tail" : "(state: (EphemeralStream[E]) ⇒ Unit)(xs: EphemeralStream[E])(arg0: Monad[F]): EnumeratorT[E, F]", "member" : "scales.utils.iteratee.EphemeralStreamEnum.enumEphemeralStreamF", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#enumEphemeralStreamF[E,F[_]](state:scalaz.EphemeralStream[E]=>Unit)(xs:scalaz.EphemeralStream[E])(implicitevidence$2:scalaz.Monad[F]):scalaz.iteratee.EnumeratorT[E,F]", "kind" : "def"}, {"label" : "enumEphemeralStream", "tail" : "(xs: EphemeralStream[E])(arg0: Monad[F]): EnumeratorT[E, F]", "member" : "scales.utils.iteratee.EphemeralStreamEnum.enumEphemeralStream", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#enumEphemeralStream[E,F[_]](xs:scalaz.EphemeralStream[E])(implicitevidence$1:scalaz.Monad[F]):scalaz.iteratee.EnumeratorT[E,F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/EphemeralStreamEnum$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.iteratee.Eval", "members_trait" : [{"label" : "eval", "tail" : "(F: Monad[F]): IterateeT[WHAT, F, RETURN]", "member" : "scales.utils.iteratee.Eval.eval", "link" : "scales\/utils\/iteratee\/Eval.html#eval(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[WHAT,F,RETURN]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/Eval.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/Eval.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/Eval.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/Eval.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/Eval.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/Eval.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/Eval.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/Eval.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/Eval.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/Eval.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/Eval.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/Eval.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/Eval.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/Eval.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/Eval.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/Eval.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/Eval.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/Eval.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/Eval.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "orig", "tail" : "(): IterateeT[WHAT, F, RETURN]", "member" : "scales.utils.iteratee.Eval.orig", "link" : "scales\/utils\/iteratee\/Eval.html#orig:scalaz.iteratee.IterateeT[WHAT,F,RETURN]", "kind" : "abstract def"}], "shortDescription" : "Evals once, the developer must check its Done, equivalent to a .run butdoesn't lose the continuation - no \"Diverging Iteratee\"", "trait" : "scales\/utils\/iteratee\/Eval.html", "kind" : "trait"}, {"name" : "scales.utils.iteratee.functions", "shortDescription" : "Collection of iterateees", "object" : "scales\/utils\/iteratee\/functions$.html", "members_object" : [{"label" : "flatMap", "tail" : "(itr: IterateeT[E, F, A])(f: (A) ⇒ IterateeT[E, F, B])(F: Monad[F]): IterateeT[E, F, B]", "member" : "scales.utils.iteratee.functions.flatMap", "link" : "scales\/utils\/iteratee\/functions$.html#flatMap[E,F[_],A,B](itr:scalaz.iteratee.IterateeT[E,F,A])(f:A=>scalaz.iteratee.IterateeT[E,F,B])(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,B]", "kind" : "def"}, {"label" : "enumToMany", "tail" : "(dest: ResumableIter[A, F, R])(toMany: ResumableIter[E, F, EphemeralStream[A]])(F: Monad[F]): ResumableIter[E, F, R]", "member" : "scales.utils.iteratee.functions.enumToMany", "link" : "scales\/utils\/iteratee\/functions$.html#enumToMany[E,F[_],A,R](dest:scales.utils.iteratee.functions.ResumableIter[A,F,R])(toMany:scales.utils.iteratee.functions.ResumableIter[E,F,scalaz.EphemeralStream[A]])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,R]", "kind" : "def"}, {"label" : "foldOnDoneIter", "tail" : "(initAcc: ACC, initIter: ResumableIter[E, F, A])(f: (ACC, A) ⇒ ACC)(F: Monad[F]): IterateeT[E, F, ACC]", "member" : "scales.utils.iteratee.functions.foldOnDoneIter", "link" : "scales\/utils\/iteratee\/functions$.html#foldOnDoneIter[E,F[_],A,ACC](initAcc:ACC,initIter:scales.utils.iteratee.functions.ResumableIter[E,F,A])(f:(ACC,A)=>ACC)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,ACC]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(f: (E) ⇒ Input[EphemeralStream[A]])(F: Applicative[F]): IterateeT[E, F, EphemeralStream[A]]", "member" : "scales.utils.iteratee.functions.mapTo", "link" : "scales\/utils\/iteratee\/functions$.html#mapTo[E,F[_],A](f:E=>scalaz.iteratee.Input[scalaz.EphemeralStream[A]])(implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[E,F,scalaz.EphemeralStream[A]]", "kind" : "def"}, {"label" : "sum", "tail" : "(n: Numeric[T], F: Applicative[F]): IterateeT[T, F, T]", "member" : "scales.utils.iteratee.functions.sum", "link" : "scales\/utils\/iteratee\/functions$.html#sum[T,F[_]](implicitn:Numeric[T],implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[T,F,T]", "kind" : "def"}, {"label" : "enumerateeMap", "tail" : "(target: IterateeT[A, F, R])(f: (E) ⇒ A)(F: Monad[F]): IterateeT[E, F, R]", "member" : "scales.utils.iteratee.functions.enumerateeMap", "link" : "scales\/utils\/iteratee\/functions$.html#enumerateeMap[E,F[_],A,R](target:scalaz.iteratee.IterateeT[A,F,R])(f:E=>A)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,R]", "kind" : "def"}, {"label" : "evalWith", "tail" : "(f: (FROM) ⇒ TO)(F: Applicative[F]): IterateeT[FROM, F, TO]", "member" : "scales.utils.iteratee.functions.evalWith", "link" : "scales\/utils\/iteratee\/functions$.html#evalWith[FROM,F[_],TO](f:FROM=>TO)(implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[FROM,F,TO]", "kind" : "def"}, {"label" : "appendTo", "tail" : "(to: Appendable)(F: Applicative[F]): IterateeT[CharSequence, F, CharSequence]", "member" : "scales.utils.iteratee.functions.appendTo", "link" : "scales\/utils\/iteratee\/functions$.html#appendTo[F[_]](to:Appendable)(implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[CharSequence,F,CharSequence]", "kind" : "def"}, {"label" : "runningCount", "tail" : "(F: Monad[F]): ResumableIter[E, F, Long]", "member" : "scales.utils.iteratee.functions.runningCount", "link" : "scales\/utils\/iteratee\/functions$.html#runningCount[E,F[_]](implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,Long]", "kind" : "def"}, {"label" : "onDone", "tail" : "(originalList: List[ResumableIter[E, F, A]])(F: Monad[F]): ResumableIterList[E, F, A]", "member" : "scales.utils.iteratee.functions.onDone", "link" : "scales\/utils\/iteratee\/functions$.html#onDone[E,F[_],A](originalList:List[scales.utils.iteratee.functions.ResumableIter[E,F,A]])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIterList[E,F,A]", "kind" : "def"}, {"label" : "withIter", "tail" : "(e: EnumeratorT[E, IO])(initResumable: ResumableIter[E, IO, A]): ResumableIterIterator[E, A]", "member" : "scales.utils.iteratee.functions.withIter", "link" : "scales\/utils\/iteratee\/functions$.html#withIter[E,A](e:scalaz.iteratee.EnumeratorT[E,scalaz.effect.IO])(initResumable:scales.utils.iteratee.functions.ResumableIter[E,scalaz.effect.IO,A]):scales.utils.iteratee.functions.ResumableIterIterator[E,A]", "kind" : "def"}, {"label" : "ResumableIterIterator", "tail" : "", "member" : "scales.utils.iteratee.functions.ResumableIterIterator", "link" : "scales\/utils\/iteratee\/functions$.html#ResumableIterIterator[E,A]extendsIterator[A]", "kind" : "class"}, {"label" : "foldOnDone", "tail" : "(e: ⇒ EnumeratorT[E, F])(initAcc: ACC, initResumable: ResumableIter[E, F, A])(f: (ACC, A) ⇒ ACC)(F: Monad[F]): F[ACC]", "member" : "scales.utils.iteratee.functions.foldOnDone", "link" : "scales\/utils\/iteratee\/functions$.html#foldOnDone[E,F[_],A,ACC](e:=>scalaz.iteratee.EnumeratorT[E,F])(initAcc:ACC,initResumable:scales.utils.iteratee.functions.ResumableIter[E,F,A])(f:(ACC,A)=>ACC)(implicitF:scalaz.Monad[F]):F[ACC]", "kind" : "def"}, {"label" : "repeatUntilM", "tail" : "(init: A)(f: (A) ⇒ F[A])(stopOn: (A) ⇒ Boolean)(F: Monad[F]): F[(A, ResumableIter[A, F, A])]", "member" : "scales.utils.iteratee.functions.repeatUntilM", "link" : "scales\/utils\/iteratee\/functions$.html#repeatUntilM[E,F[_],A](init:A)(f:A=>F[A])(stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):F[(A,scales.utils.iteratee.functions.ResumableIter[A,F,A])]", "kind" : "def"}, {"label" : "repeatUntil", "tail" : "(init: A)(f: (A) ⇒ A)(stopOn: (A) ⇒ Boolean)(F: Monad[F]): F[(A, ResumableIter[A, F, A])]", "member" : "scales.utils.iteratee.functions.repeatUntil", "link" : "scales\/utils\/iteratee\/functions$.html#repeatUntil[E,F[_],A](init:A)(f:A=>A)(stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):F[(A,scales.utils.iteratee.functions.ResumableIter[A,F,A])]", "kind" : "def"}, {"label" : "foldIM", "tail" : "(f: (E, A) ⇒ F[A])(init: A, stopOn: (A) ⇒ Boolean)(F: Monad[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.foldIM", "link" : "scales\/utils\/iteratee\/functions$.html#foldIM[E,F[_],A](f:(E,A)=>F[A])(init:A,stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "foldI", "tail" : "(f: (E, A) ⇒ A)(init: A, stopOn: (A) ⇒ Boolean)(F: Monad[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.foldI", "link" : "scales\/utils\/iteratee\/functions$.html#foldI[E,F[_],A](f:(E,A)=>A)(init:A,stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "toResumableIter", "tail" : "(oiter: IterateeT[E, F, A])(F: Monad[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.toResumableIter", "link" : "scales\/utils\/iteratee\/functions$.html#toResumableIter[E,F[_],A](oiter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "IterOps", "tail" : "", "member" : "scales.utils.iteratee.functions.IterOps", "link" : "scales\/utils\/iteratee\/functions$.html#IterOps[E,F[_],A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "isEOFS", "tail" : "(step: StepT[E, F, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.functions.isEOFS", "link" : "scales\/utils\/iteratee\/functions$.html#isEOFS[E,F[_],A](step:scalaz.iteratee.StepT[E,F,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isEmptyS", "tail" : "(step: StepT[E, F, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.functions.isEmptyS", "link" : "scales\/utils\/iteratee\/functions$.html#isEmptyS[E,F[_],A](step:scalaz.iteratee.StepT[E,F,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isEOF", "tail" : "(iter: IterateeT[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.functions.isEOF", "link" : "scales\/utils\/iteratee\/functions$.html#isEOF[E,F[_],A](iter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(iter: IterateeT[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.functions.isEmpty", "link" : "scales\/utils\/iteratee\/functions$.html#isEmpty[E,F[_],A](iter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "isDoneS", "tail" : "(step: StepT[E, F, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.functions.isDoneS", "link" : "scales\/utils\/iteratee\/functions$.html#isDoneS[E,F[_],A](step:scalaz.iteratee.StepT[E,F,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isDone", "tail" : "(iter: IterateeT[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.functions.isDone", "link" : "scales\/utils\/iteratee\/functions$.html#isDone[E,F[_],A](iter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "extractS", "tail" : "(iter: ResumableStep[E, F, A])(F: Monad[F]): Option[A]", "member" : "scales.utils.iteratee.functions.extractS", "link" : "scales\/utils\/iteratee\/functions$.html#extractS[E,F[_],A](iter:scales.utils.iteratee.functions.ResumableStep[E,F,A])(implicitF:scalaz.Monad[F]):Option[A]", "kind" : "def"}, {"label" : "extract", "tail" : "(iter: ResumableIter[E, F, A])(F: Monad[F]): F[Option[A]]", "member" : "scales.utils.iteratee.functions.extract", "link" : "scales\/utils\/iteratee\/functions$.html#extract[E,F[_],A](iter:scales.utils.iteratee.functions.ResumableIter[E,F,A])(implicitF:scalaz.Monad[F]):F[Option[A]]", "kind" : "def"}, {"label" : "extractContS", "tail" : "(s: ResumableStep[E, F, A])(F: Monad[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.extractContS", "link" : "scales\/utils\/iteratee\/functions$.html#extractContS[E,F[_],A](s:scales.utils.iteratee.functions.ResumableStep[E,F,A])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "extractCont", "tail" : "(iter: ResumableIter[E, F, A])(F: Monad[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.extractCont", "link" : "scales\/utils\/iteratee\/functions$.html#extractCont[E,F[_],A](iter:scales.utils.iteratee.functions.ResumableIter[E,F,A])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "extractContFromDoneOrCont", "tail" : "(iter: ResumableIter[E, F, A])(F: Monad[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.extractContFromDoneOrCont", "link" : "scales\/utils\/iteratee\/functions$.html#extractContFromDoneOrCont[E,F[_],A](iter:scales.utils.iteratee.functions.ResumableIter[E,F,A])(implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "isResumableEOFS", "tail" : "(s: ResumableStep[E, F, A]): Boolean", "member" : "scales.utils.iteratee.functions.isResumableEOFS", "link" : "scales\/utils\/iteratee\/functions$.html#isResumableEOFS[E,F[_],A](s:scales.utils.iteratee.functions.ResumableStep[E,F,A]):Boolean", "kind" : "def"}, {"label" : "isResumableEOF", "tail" : "(iter: ResumableIter[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.functions.isResumableEOF", "link" : "scales\/utils\/iteratee\/functions$.html#isResumableEOF[E,F[_],A](iter:scales.utils.iteratee.functions.ResumableIter[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "resumableEOFDone", "tail" : "(input: A)(F: Applicative[F]): ResumableStep[E, F, A]", "member" : "scales.utils.iteratee.functions.resumableEOFDone", "link" : "scales\/utils\/iteratee\/functions$.html#resumableEOFDone[E,F[_],A](input:A)(implicitF:scalaz.Applicative[F]):scales.utils.iteratee.functions.ResumableStep[E,F,A]", "kind" : "def"}, {"label" : "resumableEOF", "tail" : "(input: A)(F: Applicative[F]): ResumableIter[E, F, A]", "member" : "scales.utils.iteratee.functions.resumableEOF", "link" : "scales\/utils\/iteratee\/functions$.html#resumableEOF[E,F[_],A](input:A)(implicitF:scalaz.Applicative[F]):scales.utils.iteratee.functions.ResumableIter[E,F,A]", "kind" : "def"}, {"label" : "ResumableStep", "tail" : "", "member" : "scales.utils.iteratee.functions.ResumableStep", "link" : "scales\/utils\/iteratee\/functions$.html#ResumableStep[E,F[_],A]=scalaz.iteratee.StepT[E,F,(A,scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "ResumableIter", "tail" : "", "member" : "scales.utils.iteratee.functions.ResumableIter", "link" : "scales\/utils\/iteratee\/functions$.html#ResumableIter[E,F[_],A]=scalaz.iteratee.IterateeT[E,F,(A,scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "ResumableIterListStep", "tail" : "", "member" : "scales.utils.iteratee.functions.ResumableIterListStep", "link" : "scales\/utils\/iteratee\/functions$.html#ResumableIterListStep[E,F[_],A]=scalaz.iteratee.StepT[E,F,(Iterable[A],scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "ResumableIterList", "tail" : "", "member" : "scales.utils.iteratee.functions.ResumableIterList", "link" : "scales\/utils\/iteratee\/functions$.html#ResumableIterList[E,F[_],A]=scalaz.iteratee.IterateeT[E,F,(Iterable[A],scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "filter", "tail" : "(f: (E) ⇒ Boolean)(F: Monad[F]): IterateeT[E, F, Iterable[E]]", "member" : "scales.utils.iteratee.functions.filter", "link" : "scales\/utils\/iteratee\/functions$.html#filter[E,F[_]](f:E=>Boolean)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Iterable[E]]", "kind" : "def"}, {"label" : "find", "tail" : "(f: (E) ⇒ Boolean)(F: Monad[F]): IterateeT[E, F, Option[E]]", "member" : "scales.utils.iteratee.functions.find", "link" : "scales\/utils\/iteratee\/functions$.html#find[E,F[_]](f:E=>Boolean)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Option[E]]", "kind" : "def"}, {"label" : "dropWhileM", "tail" : "(f: (E) ⇒ F[Boolean])(F: Monad[F]): IterateeT[E, F, Option[E]]", "member" : "scales.utils.iteratee.functions.dropWhileM", "link" : "scales\/utils\/iteratee\/functions$.html#dropWhileM[E,F[_]](f:E=>F[Boolean])(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Option[E]]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (E) ⇒ Boolean)(F: Monad[F]): IterateeT[E, F, Option[E]]", "member" : "scales.utils.iteratee.functions.dropWhile", "link" : "scales\/utils\/iteratee\/functions$.html#dropWhile[E,F[_]](f:E=>Boolean)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Option[E]]", "kind" : "def"}, {"label" : "iteratorEnumerator", "tail" : "(iter: Iterator[E])(f: Monad[F]): EnumeratorT[E, F]", "member" : "scales.utils.iteratee.functions.iteratorEnumerator", "link" : "scales\/utils\/iteratee\/functions$.html#iteratorEnumerator[E,F[_]](iter:Iterator[E])(implicitf:scalaz.Monad[F]):scalaz.iteratee.EnumeratorT[E,F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/functions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/functions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/functions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/functions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/functions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/functions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/functions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/functions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/functions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/functions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/functions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/functions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/functions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/functions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/functions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/functions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/functions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/functions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/functions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.iteratee.IterateeFunctions", "shortDescription" : "", "members_class" : [{"label" : "flatMap", "tail" : "(itr: IterateeT[E, F, A])(f: (A) ⇒ IterateeT[E, F, B])(F: Monad[F]): IterateeT[E, F, B]", "member" : "scales.utils.iteratee.IterateeFunctions.flatMap", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#flatMap[E,A,B](itr:scalaz.iteratee.IterateeT[E,F,A])(f:A=>scalaz.iteratee.IterateeT[E,F,B])(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,B]", "kind" : "def"}, {"label" : "enumToMany", "tail" : "(dest: ResumableIter[A, R])(toMany: ResumableIter[E, EphemeralStream[A]])(F: Monad[F]): ResumableIter[E, R]", "member" : "scales.utils.iteratee.IterateeFunctions.enumToMany", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#enumToMany[E,A,R](dest:IterateeFunctions.this.ResumableIter[A,R])(toMany:IterateeFunctions.this.ResumableIter[E,scalaz.EphemeralStream[A]])(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,R]", "kind" : "def"}, {"label" : "foldOnDoneIter", "tail" : "(initAcc: ACC, initIter: ResumableIter[E, A])(f: (ACC, A) ⇒ ACC)(F: Monad[F]): IterateeT[E, F, ACC]", "member" : "scales.utils.iteratee.IterateeFunctions.foldOnDoneIter", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#foldOnDoneIter[E,A,ACC](initAcc:ACC,initIter:IterateeFunctions.this.ResumableIter[E,A])(f:(ACC,A)=>ACC)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,ACC]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(f: (E) ⇒ Input[EphemeralStream[A]])(F: Applicative[F]): IterateeT[E, F, EphemeralStream[A]]", "member" : "scales.utils.iteratee.IterateeFunctions.mapTo", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#mapTo[E,A](f:E=>scalaz.iteratee.Input[scalaz.EphemeralStream[A]])(implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[E,F,scalaz.EphemeralStream[A]]", "kind" : "def"}, {"label" : "sum", "tail" : "(n: Numeric[T], F: Applicative[F]): IterateeT[T, F, T]", "member" : "scales.utils.iteratee.IterateeFunctions.sum", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#sum[T](implicitn:Numeric[T],implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[T,F,T]", "kind" : "def"}, {"label" : "enumerateeMap", "tail" : "(target: IterateeT[A, F, R])(f: (E) ⇒ A)(F: Monad[F]): IterateeT[E, F, R]", "member" : "scales.utils.iteratee.IterateeFunctions.enumerateeMap", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#enumerateeMap[E,A,R](target:scalaz.iteratee.IterateeT[A,F,R])(f:E=>A)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,R]", "kind" : "def"}, {"label" : "evalWith", "tail" : "(f: (FROM) ⇒ TO)(F: Applicative[F]): IterateeT[FROM, F, TO]", "member" : "scales.utils.iteratee.IterateeFunctions.evalWith", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#evalWith[FROM,TO](f:FROM=>TO)(implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[FROM,F,TO]", "kind" : "def"}, {"label" : "appendTo", "tail" : "(to: Appendable)(F: Applicative[F]): IterateeT[CharSequence, F, CharSequence]", "member" : "scales.utils.iteratee.IterateeFunctions.appendTo", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#appendTo(to:Appendable)(implicitF:scalaz.Applicative[F]):scalaz.iteratee.IterateeT[CharSequence,F,CharSequence]", "kind" : "def"}, {"label" : "runningCount", "tail" : "(F: Monad[F]): functions.ResumableIter[E, F, Long]", "member" : "scales.utils.iteratee.IterateeFunctions.runningCount", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#runningCount[E](implicitF:scalaz.Monad[F]):scales.utils.iteratee.functions.ResumableIter[E,F,Long]", "kind" : "def"}, {"label" : "onDone", "tail" : "(originalList: List[ResumableIter[E, A]])(F: Monad[F]): ResumableIterList[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.onDone", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#onDone[E,A](originalList:List[IterateeFunctions.this.ResumableIter[E,A]])(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIterList[E,A]", "kind" : "def"}, {"label" : "foldOnDone", "tail" : "(e: ⇒ EnumeratorT[E, F])(initAcc: ACC, initResumable: ResumableIter[E, A])(f: (ACC, A) ⇒ ACC)(F: Monad[F]): F[ACC]", "member" : "scales.utils.iteratee.IterateeFunctions.foldOnDone", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#foldOnDone[E,A,ACC](e:=>scalaz.iteratee.EnumeratorT[E,F])(initAcc:ACC,initResumable:IterateeFunctions.this.ResumableIter[E,A])(f:(ACC,A)=>ACC)(implicitF:scalaz.Monad[F]):F[ACC]", "kind" : "def"}, {"label" : "repeatUntilM", "tail" : "(init: A)(f: (A) ⇒ F[A])(stopOn: (A) ⇒ Boolean)(F: Monad[F]): F[(A, ResumableIter[A, A])]", "member" : "scales.utils.iteratee.IterateeFunctions.repeatUntilM", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#repeatUntilM[E,A](init:A)(f:A=>F[A])(stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):F[(A,IterateeFunctions.this.ResumableIter[A,A])]", "kind" : "def"}, {"label" : "repeatUntil", "tail" : "(init: A)(f: (A) ⇒ A)(stopOn: (A) ⇒ Boolean)(F: Monad[F]): F[(A, ResumableIter[A, A])]", "member" : "scales.utils.iteratee.IterateeFunctions.repeatUntil", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#repeatUntil[E,A](init:A)(f:A=>A)(stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):F[(A,IterateeFunctions.this.ResumableIter[A,A])]", "kind" : "def"}, {"label" : "foldIM", "tail" : "(f: (E, A) ⇒ F[A])(init: A, stopOn: (A) ⇒ Boolean)(F: Monad[F]): ResumableIter[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.foldIM", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#foldIM[E,A](f:(E,A)=>F[A])(init:A,stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,A]", "kind" : "def"}, {"label" : "foldI", "tail" : "(f: (E, A) ⇒ A)(init: A, stopOn: (A) ⇒ Boolean)(F: Monad[F]): ResumableIter[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.foldI", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#foldI[E,A](f:(E,A)=>A)(init:A,stopOn:A=>Boolean)(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,A]", "kind" : "def"}, {"label" : "isEOFS", "tail" : "(step: StepT[E, F, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.IterateeFunctions.isEOFS", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isEOFS[E,A](step:scalaz.iteratee.StepT[E,F,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isEmptyS", "tail" : "(step: StepT[E, F, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.IterateeFunctions.isEmptyS", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isEmptyS[E,A](step:scalaz.iteratee.StepT[E,F,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isEOF", "tail" : "(iter: IterateeT[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.IterateeFunctions.isEOF", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isEOF[E,A](iter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(iter: IterateeT[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.IterateeFunctions.isEmpty", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isEmpty[E,A](iter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "isDoneS", "tail" : "(step: StepT[E, F, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.IterateeFunctions.isDoneS", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isDoneS[E,A](step:scalaz.iteratee.StepT[E,F,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isDone", "tail" : "(iter: IterateeT[E, F, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.IterateeFunctions.isDone", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isDone[E,A](iter:scalaz.iteratee.IterateeT[E,F,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "extractS", "tail" : "(iter: ResumableStep[E, A])(F: Monad[F]): Option[A]", "member" : "scales.utils.iteratee.IterateeFunctions.extractS", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#extractS[E,A](iter:IterateeFunctions.this.ResumableStep[E,A])(implicitF:scalaz.Monad[F]):Option[A]", "kind" : "def"}, {"label" : "extract", "tail" : "(iter: ResumableIter[E, A])(F: Monad[F]): F[Option[A]]", "member" : "scales.utils.iteratee.IterateeFunctions.extract", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#extract[E,A](iter:IterateeFunctions.this.ResumableIter[E,A])(implicitF:scalaz.Monad[F]):F[Option[A]]", "kind" : "def"}, {"label" : "extractContS", "tail" : "(s: ResumableStep[E, A])(F: Monad[F]): ResumableIter[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.extractContS", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#extractContS[E,A](s:IterateeFunctions.this.ResumableStep[E,A])(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,A]", "kind" : "def"}, {"label" : "extractContFromDoneOrCont", "tail" : "(iter: ResumableIter[E, A])(F: Monad[F]): ResumableIter[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.extractContFromDoneOrCont", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#extractContFromDoneOrCont[E,A](iter:IterateeFunctions.this.ResumableIter[E,A])(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,A]", "kind" : "def"}, {"label" : "extractCont", "tail" : "(iter: ResumableIter[E, A])(F: Monad[F]): ResumableIter[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.extractCont", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#extractCont[E,A](iter:IterateeFunctions.this.ResumableIter[E,A])(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,A]", "kind" : "def"}, {"label" : "isResumableEOFS", "tail" : "(s: ResumableStep[E, A])(F: Monad[F]): Boolean", "member" : "scales.utils.iteratee.IterateeFunctions.isResumableEOFS", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isResumableEOFS[E,A](s:IterateeFunctions.this.ResumableStep[E,A])(implicitF:scalaz.Monad[F]):Boolean", "kind" : "def"}, {"label" : "isResumableEOF", "tail" : "(iter: ResumableIter[E, A])(F: Monad[F]): F[Boolean]", "member" : "scales.utils.iteratee.IterateeFunctions.isResumableEOF", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isResumableEOF[E,A](iter:IterateeFunctions.this.ResumableIter[E,A])(implicitF:scalaz.Monad[F]):F[Boolean]", "kind" : "def"}, {"label" : "resumableEOFDone", "tail" : "(input: A)(F: Monad[F]): ResumableStep[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.resumableEOFDone", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#resumableEOFDone[E,A](input:A)(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableStep[E,A]", "kind" : "def"}, {"label" : "resumableEOF", "tail" : "(input: A)(F: Monad[F]): ResumableIter[E, A]", "member" : "scales.utils.iteratee.IterateeFunctions.resumableEOF", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#resumableEOF[E,A](input:A)(implicitF:scalaz.Monad[F]):IterateeFunctions.this.ResumableIter[E,A]", "kind" : "def"}, {"label" : "ResumableStep", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.ResumableStep", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#ResumableStep[E,A]=scalaz.iteratee.StepT[E,F,(A,scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "ResumableIter", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.ResumableIter", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#ResumableIter[E,A]=scalaz.iteratee.IterateeT[E,F,(A,scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "ResumableIterListStep", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.ResumableIterListStep", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#ResumableIterListStep[E,A]=scalaz.iteratee.StepT[E,F,(Iterable[A],scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "ResumableIterList", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.ResumableIterList", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#ResumableIterList[E,A]=scalaz.iteratee.IterateeT[E,F,(Iterable[A],scalaz.iteratee.IterateeT[E,F,_])]", "kind" : "type"}, {"label" : "filter", "tail" : "(f: (E) ⇒ Boolean)(F: Monad[F]): IterateeT[E, F, Iterable[E]]", "member" : "scales.utils.iteratee.IterateeFunctions.filter", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#filter[E](f:E=>Boolean)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Iterable[E]]", "kind" : "def"}, {"label" : "find", "tail" : "(f: (E) ⇒ Boolean)(F: Monad[F]): IterateeT[E, F, Option[E]]", "member" : "scales.utils.iteratee.IterateeFunctions.find", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#find[E](f:E=>Boolean)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Option[E]]", "kind" : "def"}, {"label" : "dropWhileM", "tail" : "(f: (E) ⇒ F[Boolean])(F: Monad[F]): IterateeT[E, F, Option[E]]", "member" : "scales.utils.iteratee.IterateeFunctions.dropWhileM", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#dropWhileM[E](f:E=>F[Boolean])(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Option[E]]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (E) ⇒ Boolean)(F: Monad[F]): IterateeT[E, F, Option[E]]", "member" : "scales.utils.iteratee.IterateeFunctions.dropWhile", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#dropWhile[E](f:E=>Boolean)(implicitF:scalaz.Monad[F]):scalaz.iteratee.IterateeT[E,F,Option[E]]", "kind" : "def"}, {"label" : "iteratorEnumerator", "tail" : "(iter: Iterator[E])(F: Monad[F]): EnumeratorT[E, F]", "member" : "scales.utils.iteratee.IterateeFunctions.iteratorEnumerator", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#iteratorEnumerator[E](iter:Iterator[E])(implicitF:scalaz.Monad[F]):scalaz.iteratee.EnumeratorT[E,F]", "kind" : "def"}, {"label" : "IterateeImplicits", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.IterateeImplicits", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#IterateeImplicits", "kind" : "object"}, {"label" : "EphemeralStreamEnum", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.EphemeralStreamEnum", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#EphemeralStreamEnum", "kind" : "object"}, {"label" : "TheF", "tail" : "", "member" : "scales.utils.iteratee.IterateeFunctions.TheF", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#TheF[X]=F[X]", "kind" : "type"}, {"member" : "scales.utils.iteratee.IterateeFunctions#<init>", "error" : "unsupported entity"}, {"label" : "F", "tail" : ": Monad[F]", "member" : "scales.utils.iteratee.IterateeFunctions.F", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#F:scalaz.Monad[F]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/IterateeFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/iteratee\/IterateeFunctions.html", "kind" : "class"}, {"name" : "scales.utils.iteratee.IterateeImplicits", "members_trait" : [{"label" : "toEval", "tail" : "(i: ⇒ IterateeT[WHAT, F, RETURN]): Eval[WHAT, F, RETURN]", "member" : "scales.utils.iteratee.IterateeImplicits.toEval", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#toEval[WHAT,F[_],RETURN](i:=>scalaz.iteratee.IterateeT[WHAT,F,RETURN]):scales.utils.iteratee.Eval[WHAT,F,RETURN]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/IterateeImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/iteratee\/IterateeImplicits.html", "kind" : "trait"}, {"name" : "scales.utils.iteratee.Iteratees", "members_trait" : [{"label" : "idIteratees", "tail" : ": IterateeFunctions[scalaz.Id.Id]", "member" : "scales.utils.iteratee.Iteratees.idIteratees", "link" : "scales\/utils\/iteratee\/Iteratees.html#idIteratees:scales.utils.iteratee.IterateeFunctions[scalaz.Id.Id]", "kind" : "implicit val"}, {"label" : "trampolineIteratees", "tail" : ": IterateeFunctions[Trampoline]", "member" : "scales.utils.iteratee.Iteratees.trampolineIteratees", "link" : "scales\/utils\/iteratee\/Iteratees.html#trampolineIteratees:scales.utils.iteratee.IterateeFunctions[scalaz.Free.Trampoline]", "kind" : "implicit val"}, {"label" : "ioIteratees", "tail" : ": IterateeFunctions[IO]", "member" : "scales.utils.iteratee.Iteratees.ioIteratees", "link" : "scales\/utils\/iteratee\/Iteratees.html#ioIteratees:scales.utils.iteratee.IterateeFunctions[scalaz.effect.IO]", "kind" : "implicit val"}, {"label" : "iterateesOf", "tail" : "(F: Monad[F]): IterateeFunctions[F]", "member" : "scales.utils.iteratee.Iteratees.iterateesOf", "link" : "scales\/utils\/iteratee\/Iteratees.html#iterateesOf[F[_]](implicitF:scalaz.Monad[F]):scales.utils.iteratee.IterateeFunctions[F]", "kind" : "def"}, {"label" : "error", "tail" : "(string: String): Nothing", "member" : "scales.utils.iteratee.Iteratees.error", "link" : "scales\/utils\/iteratee\/Iteratees.html#error(string:String):Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/Iteratees.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/Iteratees.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/Iteratees.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/Iteratees.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/Iteratees.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/Iteratees.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/Iteratees.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/Iteratees.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/Iteratees.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/Iteratees.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/Iteratees.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/Iteratees.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/Iteratees.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/Iteratees.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/Iteratees.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/Iteratees.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/Iteratees.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/Iteratees.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/Iteratees.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/iteratee\/Iteratees.html", "kind" : "trait"}, {"name" : "scales.utils.iteratee.monadHelpers", "shortDescription" : "", "object" : "scales\/utils\/iteratee\/monadHelpers$.html", "members_object" : [{"label" : "TrampolinePerformer", "tail" : "", "member" : "scales.utils.iteratee.monadHelpers.TrampolinePerformer", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#TrampolinePerformer[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Performer", "tail" : "", "member" : "scales.utils.iteratee.monadHelpers.Performer", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#Performer[A,F[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "CanRunIt", "tail" : "", "member" : "scales.utils.iteratee.monadHelpers.CanRunIt", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#CanRunIt", "kind" : "object"}, {"label" : "CanRunIt", "tail" : "", "member" : "scales.utils.iteratee.monadHelpers.CanRunIt", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#CanRunIt[F[_]]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/iteratee\/monadHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/iteratee\/monadHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scales.org.apache.xerces.util" : [{"name" : "scales.org.apache.xerces.util.XML11Char", "shortDescription" : "This class defines the basic properties of characters in XML 1.1.", "members_class" : [{"member" : "scales.org.apache.xerces.util.XML11Char#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/org\/apache\/xerces\/util\/XML11Char.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/org\/apache\/xerces\/util\/XML11Char.html", "kind" : "class"}, {"name" : "scales.org.apache.xerces.util.XMLChar", "shortDescription" : "This class defines the basic XML character properties.", "members_class" : [{"member" : "scales.org.apache.xerces.util.XMLChar#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/org\/apache\/xerces\/util\/XMLChar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/org\/apache\/xerces\/util\/XMLChar.html", "kind" : "class"}], "scales.xml.trax" : [{"name" : "scales.xml.trax.EmptyNamespaceContext", "shortDescription" : "", "object" : "scales\/xml\/trax\/EmptyNamespaceContext$.html", "members_object" : [{"label" : "getPrefixes", "tail" : "(namespaceURI: String): Iterator[String]", "member" : "scales.xml.trax.EmptyNamespaceContext.getPrefixes", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#getPrefixes(namespaceURI:String):java.util.Iterator[String]", "kind" : "def"}, {"label" : "getPrefix", "tail" : "(namespaceURI: String): String", "member" : "scales.xml.trax.EmptyNamespaceContext.getPrefix", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#getPrefix(namespaceURI:String):String", "kind" : "def"}, {"label" : "getNamespaceURI", "tail" : "(prefix: String): String", "member" : "scales.xml.trax.EmptyNamespaceContext.getNamespaceURI", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#getNamespaceURI(prefix:String):String", "kind" : "def"}, {"label" : "ns", "tail" : ": Array[(String, String)]", "member" : "scales.xml.trax.EmptyNamespaceContext.ns", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#ns:Array[(String,String)]", "kind" : "val"}, {"label" : "parent", "tail" : ": EmptyNamespaceContext.type", "member" : "scales.xml.trax.EmptyNamespaceContext.parent", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#parent:scales.xml.trax.EmptyNamespaceContext.type", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/EmptyNamespaceContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.trax.EmptyStreamLocation", "shortDescription" : "", "object" : "scales\/xml\/trax\/EmptyStreamLocation$.html", "members_object" : [{"label" : "getSystemId", "tail" : ": String", "member" : "scales.xml.trax.EmptyStreamLocation.getSystemId", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#getSystemId:String", "kind" : "val"}, {"label" : "getPublicId", "tail" : ": String", "member" : "scales.xml.trax.EmptyStreamLocation.getPublicId", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#getPublicId:String", "kind" : "val"}, {"label" : "getLineNumber", "tail" : ": Int", "member" : "scales.xml.trax.EmptyStreamLocation.getLineNumber", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#getLineNumber:Int", "kind" : "val"}, {"label" : "getColumnNumber", "tail" : ": Int", "member" : "scales.xml.trax.EmptyStreamLocation.getColumnNumber", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#getColumnNumber:Int", "kind" : "val"}, {"label" : "getCharacterOffset", "tail" : ": Int", "member" : "scales.xml.trax.EmptyStreamLocation.getCharacterOffset", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#getCharacterOffset:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/EmptyStreamLocation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.trax.NamespaceContextFunctions", "shortDescription" : "Provides a namespace context, needs pushing \/ popping etc", "object" : "scales\/xml\/trax\/NamespaceContextFunctions$.html", "members_object" : [{"label" : "newContext", "tail" : "(prev: TNC, elem: Elem): TNC { ... \/* 3 definitions in type refinement *\/ }", "member" : "scales.xml.trax.NamespaceContextFunctions.newContext", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#newContext(prev:scales.xml.trax.TNC,elem:scales.xml.Elem):scales.xml.trax.TNC{lazyvalpreToNS:scala.collection.immutable.Map[String,String];valnsToPre:scala.collection.immutable.Map[String,List[String]];defgetPrefixes(namespaceURI:String):java.util.Iterator[String]}", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/NamespaceContextFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.trax.PullTypeConversionImplicits", "members_trait" : [{"label" : "dslToStream", "tail" : "(ds: DslBuilder): Iterator[xml.PullType]", "member" : "scales.xml.trax.PullTypeConversionImplicits.dslToStream", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#dslToStream(ds:scales.xml.dsl.DslBuilder):Iterator[scales.xml.PullType]", "kind" : "implicit def"}, {"label" : "treeToStream", "tail" : "(tree: xml.XmlTree): Iterator[xml.PullType]", "member" : "scales.xml.trax.PullTypeConversionImplicits.treeToStream", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#treeToStream(tree:scales.xml.XmlTree):Iterator[scales.xml.PullType]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/PullTypeConversionImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "All safe conversions from T to Iterator[PullType].", "trait" : "scales\/xml\/trax\/PullTypeConversionImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.trax.ScalesResult", "shortDescription" : "A TrAX Result", "members_case class" : [{"label" : "doc", "tail" : "(): Doc", "member" : "scales.xml.trax.ScalesResult.doc", "link" : "scales\/xml\/trax\/ScalesResult.html#doc:scales.xml.Doc", "kind" : "def"}, {"member" : "scales.xml.trax.ScalesResult#<init>", "error" : "unsupported entity"}, {"label" : "strategy", "tail" : ": PathOptimisationStrategy[Token]", "member" : "scales.xml.trax.ScalesResult.strategy", "link" : "scales\/xml\/trax\/ScalesResult.html#strategy:scales.xml.parser.strategies.PathOptimisationStrategy[Token]", "kind" : "val"}, {"label" : "getSystemId", "tail" : "(): String", "member" : "javax.xml.transform.sax.SAXResult.getSystemId", "link" : "scales\/xml\/trax\/ScalesResult.html#getSystemId():String", "kind" : "def"}, {"label" : "setSystemId", "tail" : "(arg0: String): Unit", "member" : "javax.xml.transform.sax.SAXResult.setSystemId", "link" : "scales\/xml\/trax\/ScalesResult.html#setSystemId(x$1:String):Unit", "kind" : "def"}, {"label" : "getLexicalHandler", "tail" : "(): LexicalHandler", "member" : "javax.xml.transform.sax.SAXResult.getLexicalHandler", "link" : "scales\/xml\/trax\/ScalesResult.html#getLexicalHandler():org.xml.sax.ext.LexicalHandler", "kind" : "def"}, {"label" : "setLexicalHandler", "tail" : "(arg0: LexicalHandler): Unit", "member" : "javax.xml.transform.sax.SAXResult.setLexicalHandler", "link" : "scales\/xml\/trax\/ScalesResult.html#setLexicalHandler(x$1:org.xml.sax.ext.LexicalHandler):Unit", "kind" : "def"}, {"label" : "getHandler", "tail" : "(): ContentHandler", "member" : "javax.xml.transform.sax.SAXResult.getHandler", "link" : "scales\/xml\/trax\/ScalesResult.html#getHandler():org.xml.sax.ContentHandler", "kind" : "def"}, {"label" : "setHandler", "tail" : "(arg0: ContentHandler): Unit", "member" : "javax.xml.transform.sax.SAXResult.setHandler", "link" : "scales\/xml\/trax\/ScalesResult.html#setHandler(x$1:org.xml.sax.ContentHandler):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/ScalesResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/ScalesResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/ScalesResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/ScalesResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/ScalesResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/ScalesResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/ScalesResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/ScalesResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/ScalesResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/ScalesResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/ScalesResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/ScalesResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/ScalesResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/trax\/ScalesResult.html", "kind" : "case class"}, {"name" : "scales.xml.trax.ScalesSource", "shortDescription" : "Use as a basis for TrAX or javax.xml.validation and some other services.", "members_case class" : [{"member" : "scales.xml.trax.ScalesSource#<init>", "error" : "unsupported entity"}, {"label" : "documentLike", "tail" : ": DocLike", "member" : "scales.xml.trax.ScalesSource.documentLike", "link" : "scales\/xml\/trax\/ScalesSource.html#documentLike:scales.xml.DocLike", "kind" : "val"}, {"label" : "stream", "tail" : ": Iterator[xml.PullType]", "member" : "scales.xml.trax.ScalesSource.stream", "link" : "scales\/xml\/trax\/ScalesSource.html#stream:Iterator[scales.xml.PullType]", "kind" : "val"}, {"label" : "getSystemId", "tail" : "(): String", "member" : "javax.xml.transform.stax.StAXSource.getSystemId", "link" : "scales\/xml\/trax\/ScalesSource.html#getSystemId():String", "kind" : "def"}, {"label" : "setSystemId", "tail" : "(arg0: String): Unit", "member" : "javax.xml.transform.stax.StAXSource.setSystemId", "link" : "scales\/xml\/trax\/ScalesSource.html#setSystemId(x$1:String):Unit", "kind" : "def"}, {"label" : "getXMLStreamReader", "tail" : "(): XMLStreamReader", "member" : "javax.xml.transform.stax.StAXSource.getXMLStreamReader", "link" : "scales\/xml\/trax\/ScalesSource.html#getXMLStreamReader():javax.xml.stream.XMLStreamReader", "kind" : "def"}, {"label" : "getXMLEventReader", "tail" : "(): XMLEventReader", "member" : "javax.xml.transform.stax.StAXSource.getXMLEventReader", "link" : "scales\/xml\/trax\/ScalesSource.html#getXMLEventReader():javax.xml.stream.XMLEventReader", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/ScalesSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/ScalesSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/ScalesSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/ScalesSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/ScalesSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/ScalesSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/ScalesSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/ScalesSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/ScalesSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/ScalesSource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/ScalesSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/ScalesSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/ScalesSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/trax\/ScalesSource.html", "kind" : "case class"}, {"name" : "scales.xml.trax.ScalesStreamReader", "members_trait" : [{"label" : "standaloneSet", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.standaloneSet", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#standaloneSet():Boolean", "kind" : "def"}, {"label" : "require", "tail" : "(tipe: Int, namespaceURI: String, localName: String): Unit", "member" : "scales.xml.trax.ScalesStreamReader.require", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#require(tipe:Int,namespaceURI:String,localName:String):Unit", "kind" : "def"}, {"label" : "nextTag", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.nextTag", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#nextTag():Int", "kind" : "def"}, {"label" : "next", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.next", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#next():Int", "kind" : "def"}, {"label" : "doPop", "tail" : "(): Unit", "member" : "scales.xml.trax.ScalesStreamReader.doPop", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#doPop:Unit", "kind" : "def"}, {"label" : "isWhiteSpace", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.isWhiteSpace", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isWhiteSpace():Boolean", "kind" : "def"}, {"label" : "isStartElement", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.isStartElement", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isStartElement():Boolean", "kind" : "def"}, {"label" : "isStandalone", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.isStandalone", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isStandalone():Boolean", "kind" : "def"}, {"label" : "isEndElement", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.isEndElement", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isEndElement():Boolean", "kind" : "def"}, {"label" : "isCharacters", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.isCharacters", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isCharacters():Boolean", "kind" : "def"}, {"label" : "isAttributeSpecified", "tail" : "(index: Int): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.isAttributeSpecified", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isAttributeSpecified(index:Int):Boolean", "kind" : "def"}, {"label" : "hasText", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.hasText", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#hasText():Boolean", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.hasNext", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#hasNext():Boolean", "kind" : "def"}, {"label" : "hasName", "tail" : "(): Boolean", "member" : "scales.xml.trax.ScalesStreamReader.hasName", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#hasName():Boolean", "kind" : "def"}, {"label" : "getVersion", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getVersion", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getVersion():String", "kind" : "def"}, {"label" : "getTextStart", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.getTextStart", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getTextStart():Int", "kind" : "def"}, {"label" : "getTextLength", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.getTextLength", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getTextLength():Int", "kind" : "def"}, {"label" : "getTextCharacters", "tail" : "(sourceStart: Int, target: Array[Char], targetStart: Int, length: Int): Int", "member" : "scales.xml.trax.ScalesStreamReader.getTextCharacters", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getTextCharacters(sourceStart:Int,target:Array[Char],targetStart:Int,length:Int):Int", "kind" : "def"}, {"label" : "getTextCharacters", "tail" : "(): Array[Char]", "member" : "scales.xml.trax.ScalesStreamReader.getTextCharacters", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getTextCharacters():Array[Char]", "kind" : "def"}, {"label" : "getText", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getText", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getText():String", "kind" : "def"}, {"label" : "getProperty", "tail" : "(name: String): AnyRef", "member" : "scales.xml.trax.ScalesStreamReader.getProperty", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getProperty(name:String):Object", "kind" : "def"}, {"label" : "getPrefix", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getPrefix", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getPrefix():String", "kind" : "def"}, {"label" : "getPITarget", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getPITarget", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getPITarget():String", "kind" : "def"}, {"label" : "getPIData", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getPIData", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getPIData():String", "kind" : "def"}, {"label" : "getNamespaceURI", "tail" : "(prefix: String): String", "member" : "scales.xml.trax.ScalesStreamReader.getNamespaceURI", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getNamespaceURI(prefix:String):String", "kind" : "def"}, {"label" : "getNamespaceURI", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getNamespaceURI", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getNamespaceURI(index:Int):String", "kind" : "def"}, {"label" : "getNamespaceURI", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getNamespaceURI", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getNamespaceURI():String", "kind" : "def"}, {"label" : "getNamespacePrefix", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getNamespacePrefix", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getNamespacePrefix(index:Int):String", "kind" : "def"}, {"label" : "getNamespaceCount", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.getNamespaceCount", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getNamespaceCount():Int", "kind" : "def"}, {"label" : "getNamespaceContext", "tail" : "(): NamespaceContext", "member" : "scales.xml.trax.ScalesStreamReader.getNamespaceContext", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getNamespaceContext():javax.xml.namespace.NamespaceContext", "kind" : "def"}, {"label" : "getName", "tail" : "(): javax.xml.namespace.QName", "member" : "scales.xml.trax.ScalesStreamReader.getName", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getName():javax.xml.namespace.QName", "kind" : "def"}, {"label" : "getLocation", "tail" : "(): Location", "member" : "scales.xml.trax.ScalesStreamReader.getLocation", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getLocation():javax.xml.stream.Location", "kind" : "def"}, {"label" : "getLocalName", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getLocalName", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getLocalName():String", "kind" : "def"}, {"label" : "elemName", "tail" : "(): QName", "member" : "scales.xml.trax.ScalesStreamReader.elemName", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#elemName:scales.xml.QName", "kind" : "def"}, {"label" : "getEventType", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.getEventType", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getEventType():Int", "kind" : "def"}, {"label" : "getEncoding", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getEncoding", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getEncoding():String", "kind" : "def"}, {"label" : "getElementText", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getElementText", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getElementText():String", "kind" : "def"}, {"label" : "getCharacterEncodingScheme", "tail" : "(): String", "member" : "scales.xml.trax.ScalesStreamReader.getCharacterEncodingScheme", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getCharacterEncodingScheme():String", "kind" : "def"}, {"label" : "getAttributeValue", "tail" : "(namespaceURI: String, localName: String): String", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeValue", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeValue(namespaceURI:String,localName:String):String", "kind" : "def"}, {"label" : "getAttributeValue", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeValue", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeValue(index:Int):String", "kind" : "def"}, {"label" : "getAttributeType", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeType", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeType(index:Int):String", "kind" : "def"}, {"label" : "getAttributePrefix", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getAttributePrefix", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributePrefix(index:Int):String", "kind" : "def"}, {"label" : "getAttributeNamespace", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeNamespace", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeNamespace(index:Int):String", "kind" : "def"}, {"label" : "getAttributeName", "tail" : "(index: Int): javax.xml.namespace.QName", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeName", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeName(index:Int):javax.xml.namespace.QName", "kind" : "def"}, {"label" : "getAttributeLocalName", "tail" : "(index: Int): String", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeLocalName", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeLocalName(index:Int):String", "kind" : "def"}, {"label" : "getAttributeCount", "tail" : "(): Int", "member" : "scales.xml.trax.ScalesStreamReader.getAttributeCount", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getAttributeCount():Int", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "scales.xml.trax.ScalesStreamReader.close", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#close():Unit", "kind" : "def"}, {"label" : "attribs", "tail" : ": Array[Attribute]", "member" : "scales.xml.trax.ScalesStreamReader.attribs", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#attribs:Array[scales.xml.Attribute]", "kind" : "val"}, {"label" : "nc", "tail" : ": TNC", "member" : "scales.xml.trax.ScalesStreamReader.nc", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#nc:scales.xml.trax.TNC", "kind" : "val"}, {"label" : "shouldPop", "tail" : ": Boolean", "member" : "scales.xml.trax.ScalesStreamReader.shouldPop", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#shouldPop:Boolean", "kind" : "val"}, {"label" : "doEndDoc", "tail" : ": Boolean", "member" : "scales.xml.trax.ScalesStreamReader.doEndDoc", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#doEndDoc:Boolean", "kind" : "val"}, {"label" : "setEv", "tail" : "(): Unit", "member" : "scales.xml.trax.ScalesStreamReader.setEv", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#setEv():Unit", "kind" : "def"}, {"label" : "endItr", "tail" : ": Iterator[xml.Misc]", "member" : "scales.xml.trax.ScalesStreamReader.endItr", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#endItr:Iterator[scales.xml.Misc]", "kind" : "lazy val"}, {"label" : "prologItr", "tail" : ": Iterator[xml.Misc]", "member" : "scales.xml.trax.ScalesStreamReader.prologItr", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#prologItr:Iterator[scales.xml.Misc]", "kind" : "lazy val"}, {"label" : "startedDoc", "tail" : ": Boolean", "member" : "scales.xml.trax.ScalesStreamReader.startedDoc", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#startedDoc:Boolean", "kind" : "val"}, {"label" : "evType", "tail" : ": Int", "member" : "scales.xml.trax.ScalesStreamReader.evType", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#evType:Int", "kind" : "val"}, {"label" : "ev", "tail" : ": xml.PullType", "member" : "scales.xml.trax.ScalesStreamReader.ev", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#ev:scales.xml.PullType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/ScalesStreamReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "docLike", "tail" : ": DocLike", "member" : "scales.xml.trax.ScalesStreamReader.docLike", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#docLike:scales.xml.DocLike", "kind" : "abstract val"}, {"label" : "itr", "tail" : ": Iterator[xml.PullType]", "member" : "scales.xml.trax.ScalesStreamReader.itr", "link" : "scales\/xml\/trax\/ScalesStreamReader.html#itr:Iterator[scales.xml.PullType]", "kind" : "abstract val"}], "shortDescription" : "Provides a stream reader interface for StAX.", "trait" : "scales\/xml\/trax\/ScalesStreamReader.html", "kind" : "trait"}, {"name" : "scales.xml.trax.TNC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/TNC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/TNC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/TNC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/TNC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/TNC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/TNC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/TNC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TNC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TNC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TNC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/TNC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/TNC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/TNC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/TNC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/TNC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/TNC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/TNC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/TNC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/TNC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ns", "tail" : ": Array[(String, String)]", "member" : "scales.xml.trax.TNC.ns", "link" : "scales\/xml\/trax\/TNC.html#ns:Array[(String,String)]", "kind" : "abstract val"}, {"label" : "parent", "tail" : ": TNC", "member" : "scales.xml.trax.TNC.parent", "link" : "scales\/xml\/trax\/TNC.html#parent:scales.xml.trax.TNC", "kind" : "abstract val"}, {"label" : "getPrefixes", "tail" : "(arg0: String): Iterator[_]", "member" : "javax.xml.namespace.NamespaceContext.getPrefixes", "link" : "scales\/xml\/trax\/TNC.html#getPrefixes(x$1:String):java.util.Iterator[_]", "kind" : "abstract def"}, {"label" : "getPrefix", "tail" : "(arg0: String): String", "member" : "javax.xml.namespace.NamespaceContext.getPrefix", "link" : "scales\/xml\/trax\/TNC.html#getPrefix(x$1:String):String", "kind" : "abstract def"}, {"label" : "getNamespaceURI", "tail" : "(arg0: String): String", "member" : "javax.xml.namespace.NamespaceContext.getNamespaceURI", "link" : "scales\/xml\/trax\/TNC.html#getNamespaceURI(x$1:String):String", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/xml\/trax\/TNC.html", "kind" : "trait"}, {"name" : "scales.xml.trax.TraxConversionImplicits", "members_trait" : [{"label" : "docToSource", "tail" : "(doc: Doc)(serf: SerializerFactory, sf: SerializeableXml[Doc]): Source", "member" : "scales.xml.trax.TraxConversionImplicits.docToSource", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#docToSource(doc:scales.xml.Doc)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsf:scales.xml.serializers.SerializeableXml[scales.xml.Doc]):javax.xml.transform.Source", "kind" : "implicit def"}, {"label" : "treeToSource", "tail" : "(tree: xml.XmlTree)(serf: SerializerFactory, sf: SerializeableXml[xml.XmlTree]): Source", "member" : "scales.xml.trax.TraxConversionImplicits.treeToSource", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#treeToSource(tree:scales.xml.XmlTree)(implicitserf:scales.xml.serializers.SerializerFactory,implicitsf:scales.xml.serializers.SerializeableXml[scales.xml.XmlTree]):javax.xml.transform.Source", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/TraxConversionImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/trax\/TraxConversionImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.trax.TraxSourceConversions", "members_trait" : [{"label" : "streamOr", "tail" : "(xml: T, f: ⇒ Source)(serf: SerializerFactory, serXml: SerializeableXml[T]): Source", "member" : "scales.xml.trax.TraxSourceConversions.streamOr", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#streamOr[T](xml:T,f:=>javax.xml.transform.Source)(implicitserf:scales.xml.serializers.SerializerFactory,implicitserXml:scales.xml.serializers.SerializeableXml[T]):javax.xml.transform.Source", "kind" : "def"}, {"label" : "asStreamSource", "tail" : "(xml: T)(serf: SerializerFactory, serXml: SerializeableXml[T]): Source", "member" : "scales.xml.trax.TraxSourceConversions.asStreamSource", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#asStreamSource[T](xml:T)(implicitserf:scales.xml.serializers.SerializerFactory,implicitserXml:scales.xml.serializers.SerializeableXml[T]):javax.xml.transform.Source", "kind" : "def"}, {"label" : "convertToStream", "tail" : "(tree: xml.XmlTree): Iterator[xml.PullType]", "member" : "scales.xml.trax.TraxSourceConversions.convertToStream", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#convertToStream(tree:scales.xml.XmlTree):Iterator[scales.xml.PullType]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/TraxSourceConversions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/TraxSourceConversions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/trax\/TraxSourceConversions.html", "kind" : "trait"}, {"name" : "scales.xml.trax.TreeIterable", "shortDescription" : "", "members_class" : [{"label" : "EndElemS", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.EndElemS", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#EndElemS", "kind" : "object"}, {"label" : "End", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.End", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#End", "kind" : "object"}, {"label" : "OnItem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.OnItem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#OnItem", "kind" : "object"}, {"label" : "StartElem", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.StartElem", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StartElem", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "scales.utils.collection.path.AbstractPathIterator.State", "link" : "scales\/utils\/collection\/path\/AbstractPathIterator.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scales\/xml\/trax\/TreeIterable.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "end", "tail" : "(): xml.PullType", "member" : "scales.xml.trax.TreeIterable.end", "link" : "scales\/xml\/trax\/TreeIterable.html#end:scales.xml.PullType", "kind" : "def"}, {"label" : "event", "tail" : "(): xml.PullType", "member" : "scales.xml.trax.TreeIterable.event", "link" : "scales\/xml\/trax\/TreeIterable.html#event:scales.xml.PullType", "kind" : "def"}, {"label" : "initialPath", "tail" : ": Path[XmlItem, Elem, xml.XCC]", "member" : "scales.xml.trax.TreeIterable.initialPath", "link" : "scales\/xml\/trax\/TreeIterable.html#initialPath:scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]", "kind" : "lazy val"}, {"member" : "scales.xml.trax.TreeIterable#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : "(): xml.PullType", "member" : "scales.utils.collection.path.AbstractPathIterator.next", "link" : "scales\/xml\/trax\/TreeIterable.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.hasNext", "link" : "scales\/xml\/trax\/TreeIterable.html#hasNext:Boolean", "kind" : "def"}, {"label" : "prepareNext", "tail" : "(): Unit", "member" : "scales.utils.collection.path.AbstractPathIterator.prepareNext", "link" : "scales\/xml\/trax\/TreeIterable.html#prepareNext:Unit", "kind" : "def"}, {"label" : "nextState", "tail" : ": State", "member" : "scales.utils.collection.path.AbstractPathIterator.nextState", "link" : "scales\/xml\/trax\/TreeIterable.html#nextState:AbstractPathIterator.this.State", "kind" : "val"}, {"label" : "doNext", "tail" : "(ev: xml.PullType): (State, xml.PullType)", "member" : "scales.utils.collection.path.AbstractPathIterator.doNext", "link" : "scales\/xml\/trax\/TreeIterable.html#doNext(ev:T):(AbstractPathIterator.this.State,T)", "kind" : "def"}, {"label" : "canDoNext", "tail" : "(): Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.canDoNext", "link" : "scales\/xml\/trax\/TreeIterable.html#canDoNext:Boolean", "kind" : "final def"}, {"label" : "isForward", "tail" : ": Boolean", "member" : "scales.utils.collection.path.AbstractPathIterator.isForward", "link" : "scales\/xml\/trax\/TreeIterable.html#isForward:Boolean", "kind" : "val"}, {"label" : "path", "tail" : ": Path[XmlItem, Elem, xml.XCC]", "member" : "scales.utils.collection.path.AbstractPathIterator.path", "link" : "scales\/xml\/trax\/TreeIterable.html#path:scales.utils.collection.path.Path[Item,Section,CC]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scales\/xml\/trax\/TreeIterable.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.PullType]", "member" : "scala.collection.Iterator.toStream", "link" : "scales\/xml\/trax\/TreeIterable.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.toIterator", "link" : "scales\/xml\/trax\/TreeIterable.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.PullType]", "member" : "scala.collection.Iterator.toTraversable", "link" : "scales\/xml\/trax\/TreeIterable.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scales\/xml\/trax\/TreeIterable.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "scales\/xml\/trax\/TreeIterable.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scales\/xml\/trax\/TreeIterable.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.duplicate", "link" : "scales\/xml\/trax\/TreeIterable.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scales\/xml\/trax\/TreeIterable.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scales\/xml\/trax\/TreeIterable.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scales\/xml\/trax\/TreeIterable.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[xml.PullType]", "member" : "scala.collection.Iterator.buffered", "link" : "scales\/xml\/trax\/TreeIterable.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/trax\/TreeIterable.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scales\/xml\/trax\/TreeIterable.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/trax\/TreeIterable.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scales\/xml\/trax\/TreeIterable.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.PullType) ⇒ Boolean): Option[xml.PullType]", "member" : "scala.collection.Iterator.find", "link" : "scales\/xml\/trax\/TreeIterable.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scales\/xml\/trax\/TreeIterable.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "scales\/xml\/trax\/TreeIterable.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.PullType) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "scales\/xml\/trax\/TreeIterable.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.PullType) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "scales\/xml\/trax\/TreeIterable.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scales\/xml\/trax\/TreeIterable.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(xml.PullType, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scales\/xml\/trax\/TreeIterable.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "scales\/xml\/trax\/TreeIterable.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(xml.PullType, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scales\/xml\/trax\/TreeIterable.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scales\/xml\/trax\/TreeIterable.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.span", "link" : "scales\/xml\/trax\/TreeIterable.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.PullType) ⇒ Boolean): (Iterator[xml.PullType], Iterator[xml.PullType])", "member" : "scala.collection.Iterator.partition", "link" : "scales\/xml\/trax\/TreeIterable.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scales\/xml\/trax\/TreeIterable.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scales\/xml\/trax\/TreeIterable.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scales\/xml\/trax\/TreeIterable.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.PullType, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scales\/xml\/trax\/TreeIterable.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filterNot", "link" : "scales\/xml\/trax\/TreeIterable.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.withFilter", "link" : "scales\/xml\/trax\/TreeIterable.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (xml.PullType, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "scales\/xml\/trax\/TreeIterable.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.PullType) ⇒ Boolean): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.filter", "link" : "scales\/xml\/trax\/TreeIterable.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.PullType) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scales\/xml\/trax\/TreeIterable.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scales\/xml\/trax\/TreeIterable.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.PullType) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scales\/xml\/trax\/TreeIterable.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scales\/xml\/trax\/TreeIterable.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.slice", "link" : "scales\/xml\/trax\/TreeIterable.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.drop", "link" : "scales\/xml\/trax\/TreeIterable.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.take", "link" : "scales\/xml\/trax\/TreeIterable.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scales\/xml\/trax\/TreeIterable.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "scales\/xml\/trax\/TreeIterable.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scales\/xml\/trax\/TreeIterable.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[xml.PullType]", "member" : "scala.collection.Iterator.seq", "link" : "scales\/xml\/trax\/TreeIterable.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/trax\/TreeIterable.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/trax\/TreeIterable.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/trax\/TreeIterable.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/trax\/TreeIterable.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/trax\/TreeIterable.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/trax\/TreeIterable.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.PullType, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/trax\/TreeIterable.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.PullType, Col[xml.PullType]]): Col[xml.PullType]", "member" : "scala.collection.TraversableOnce.to", "link" : "scales\/xml\/trax\/TreeIterable.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.PullType]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/trax\/TreeIterable.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/trax\/TreeIterable.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/trax\/TreeIterable.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/trax\/TreeIterable.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.PullType]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/trax\/TreeIterable.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.PullType]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "scales\/xml\/trax\/TreeIterable.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/trax\/TreeIterable.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/trax\/TreeIterable.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/trax\/TreeIterable.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/trax\/TreeIterable.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/trax\/TreeIterable.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/trax\/TreeIterable.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.PullType) ⇒ B)(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/trax\/TreeIterable.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/trax\/TreeIterable.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.PullType", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/trax\/TreeIterable.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/trax\/TreeIterable.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/trax\/TreeIterable.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.PullType) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/trax\/TreeIterable.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/trax\/TreeIterable.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/trax\/TreeIterable.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/trax\/TreeIterable.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.PullType, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/trax\/TreeIterable.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.PullType) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/trax\/TreeIterable.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "scales\/xml\/trax\/TreeIterable.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/trax\/TreeIterable.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "scales\/xml\/trax\/TreeIterable.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/trax\/TreeIterable.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.PullType, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/trax\/TreeIterable.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.PullType) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/trax\/TreeIterable.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.PullType, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/trax\/TreeIterable.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.PullType) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/trax\/TreeIterable.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/trax\/TreeIterable.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/trax\/TreeIterable.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.PullType]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/trax\/TreeIterable.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/trax\/TreeIterable.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/trax\/TreeIterable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/trax\/TreeIterable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/trax\/TreeIterable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/trax\/TreeIterable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/trax\/TreeIterable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/trax\/TreeIterable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/trax\/TreeIterable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TreeIterable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TreeIterable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/trax\/TreeIterable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/trax\/TreeIterable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/trax\/TreeIterable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/trax\/TreeIterable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/trax\/TreeIterable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/trax\/TreeIterable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/trax\/TreeIterable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/trax\/TreeIterable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/trax\/TreeIterable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/trax\/TreeIterable.html", "kind" : "class"}], "scales" : [], "scales.xml.xpath" : [{"name" : "scales.xml.xpath.Ancestors", "shortDescription" : "Returns the ancestors \/ parents of the path", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/xml\/xpath\/Ancestors.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): ParentIterator", "member" : "scales.xml.xpath.Ancestors.iterator", "link" : "scales\/xml\/xpath\/Ancestors.html#iterator:Ancestors.this.ParentIterator", "kind" : "def"}, {"label" : "ParentIterator", "tail" : "", "member" : "scales.xml.xpath.Ancestors.ParentIterator", "link" : "scales\/xml\/xpath\/Ancestors.html#ParentIteratorextendsIterator[scales.xml.XmlPath]", "kind" : "class"}, {"member" : "scales.xml.xpath.Ancestors#<init>", "error" : "unsupported entity"}, {"label" : "initial", "tail" : ": xml.XmlPath", "member" : "scales.xml.xpath.Ancestors.initial", "link" : "scales\/xml\/xpath\/Ancestors.html#initial:scales.xml.XmlPath", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.Iterable.seq", "link" : "scales\/xml\/xpath\/Ancestors.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "scales\/xml\/xpath\/Ancestors.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/xml\/xpath\/Ancestors.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/xml\/xpath\/Ancestors.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/xml\/xpath\/Ancestors.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.XmlPath]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/xml\/xpath\/Ancestors.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "scales\/xml\/xpath\/Ancestors.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "scales\/xml\/xpath\/Ancestors.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/xml\/xpath\/Ancestors.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "scales\/xml\/xpath\/Ancestors.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "scales\/xml\/xpath\/Ancestors.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.dropRight", "link" : "scales\/xml\/xpath\/Ancestors.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.takeRight", "link" : "scales\/xml\/xpath\/Ancestors.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/xml\/xpath\/Ancestors.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/xml\/xpath\/Ancestors.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/xml\/xpath\/Ancestors.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "scales\/xml\/xpath\/Ancestors.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.drop", "link" : "scales\/xml\/xpath\/Ancestors.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.take", "link" : "scales\/xml\/xpath\/Ancestors.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.slice", "link" : "scales\/xml\/xpath\/Ancestors.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): xml.XmlPath", "member" : "scala.collection.IterableLike.head", "link" : "scales\/xml\/xpath\/Ancestors.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.XmlPath]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/xml\/xpath\/Ancestors.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/xml\/xpath\/Ancestors.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "scales\/xml\/xpath\/Ancestors.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "scales\/xml\/xpath\/Ancestors.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "scales\/xml\/xpath\/Ancestors.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Option[xml.XmlPath]", "member" : "scala.collection.IterableLike.find", "link" : "scales\/xml\/xpath\/Ancestors.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "scales\/xml\/xpath\/Ancestors.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "scales\/xml\/xpath\/Ancestors.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.XmlPath) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "scales\/xml\/xpath\/Ancestors.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[xml.XmlPath]): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.toCollection", "link" : "scales\/xml\/xpath\/Ancestors.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "scales\/xml\/xpath\/Ancestors.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/xml\/xpath\/Ancestors.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/xml\/xpath\/Ancestors.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (xml.XmlPath) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/xml\/xpath\/Ancestors.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (xml.XmlPath) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/xml\/xpath\/Ancestors.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/xml\/xpath\/Ancestors.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "scales\/xml\/xpath\/Ancestors.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): FilterMonadic[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/xml\/xpath\/Ancestors.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/xml\/xpath\/Ancestors.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "scales\/xml\/xpath\/Ancestors.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.XmlPath, Col[xml.XmlPath]]): Col[xml.XmlPath]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/xml\/xpath\/Ancestors.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/xml\/xpath\/Ancestors.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/xml\/xpath\/Ancestors.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/xml\/xpath\/Ancestors.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "scales\/xml\/xpath\/Ancestors.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.span", "link" : "scales\/xml\/xpath\/Ancestors.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "scales\/xml\/xpath\/Ancestors.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.init", "link" : "scales\/xml\/xpath\/Ancestors.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[xml.XmlPath]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/xml\/xpath\/Ancestors.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): xml.XmlPath", "member" : "scala.collection.TraversableLike.last", "link" : "scales\/xml\/xpath\/Ancestors.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.tail", "link" : "scales\/xml\/xpath\/Ancestors.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[xml.XmlPath]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/xml\/xpath\/Ancestors.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/xml\/xpath\/Ancestors.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/xml\/xpath\/Ancestors.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/xml\/xpath\/Ancestors.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (xml.XmlPath) ⇒ K): Map[K, Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/xml\/xpath\/Ancestors.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/xml\/xpath\/Ancestors.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.XmlPath, B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/xml\/xpath\/Ancestors.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/xml\/xpath\/Ancestors.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/xml\/xpath\/Ancestors.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.XmlPath) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/xml\/xpath\/Ancestors.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.XmlPath) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/xml\/xpath\/Ancestors.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/xml\/xpath\/Ancestors.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/xml\/xpath\/Ancestors.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/xml\/xpath\/Ancestors.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/xml\/xpath\/Ancestors.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[xml.XmlPath, ParIterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "scales\/xml\/xpath\/Ancestors.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/xml\/xpath\/Ancestors.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/xml\/xpath\/Ancestors.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/xml\/xpath\/Ancestors.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[xml.XmlPath]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/xml\/xpath\/Ancestors.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Ancestors.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Ancestors.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Ancestors.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Ancestors.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Ancestors.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Ancestors.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.XmlPath, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/xpath\/Ancestors.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/xpath\/Ancestors.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/xpath\/Ancestors.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/xpath\/Ancestors.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/xpath\/Ancestors.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/xpath\/Ancestors.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/xpath\/Ancestors.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/xpath\/Ancestors.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/xpath\/Ancestors.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/xpath\/Ancestors.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/xpath\/Ancestors.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/xpath\/Ancestors.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/xpath\/Ancestors.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/xpath\/Ancestors.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/xpath\/Ancestors.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/xpath\/Ancestors.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/xpath\/Ancestors.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.XmlPath) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/xpath\/Ancestors.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/xpath\/Ancestors.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/xpath\/Ancestors.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/xpath\/Ancestors.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.XmlPath, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/xpath\/Ancestors.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.XmlPath) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/xpath\/Ancestors.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/xpath\/Ancestors.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/xpath\/Ancestors.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/xpath\/Ancestors.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/xpath\/Ancestors.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.XmlPath, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/xpath\/Ancestors.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/xpath\/Ancestors.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/xpath\/Ancestors.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/xpath\/Ancestors.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/xpath\/Ancestors.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/xpath\/Ancestors.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Ancestors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Ancestors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Ancestors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Ancestors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Ancestors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Ancestors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Ancestors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Ancestors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Ancestors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Ancestors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Ancestors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Ancestors.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Ancestors.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Ancestors.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Ancestors.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Ancestors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Ancestors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Ancestors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/xpath\/Ancestors.html", "kind" : "class"}, {"name" : "scales.xml.xpath.AQNameNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AQNameNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: xml.AttributeQName): Option[QName]", "member" : "scales.xml.xpath.AQNameNames.name", "link" : "scales\/xml\/xpath\/AQNameNames$.html#name(implicitt:scales.xml.AttributeQName):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: xml.AttributeQName): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/AQNameNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AQNameNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AQNameNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AQNameNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AQNameNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AQNameNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AQNameNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AQNameNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AQNameNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AQNameNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AQNameNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AQNameNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AQNameNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AQNameNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AQNameNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AQNameNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AQNameNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AQNameNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AQNameNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AQNameNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.AttributeAxis", "members_trait" : [{"label" : "\\\\@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\\\@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\\\@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\\\@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\\\@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\*:@", "tail" : "(local: String): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\*:@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\*:@(local:String):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*:@", "tail" : "(local: String): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*:@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#*:@(local:String):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#*@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#*@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#*@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#*@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "i_*@", "tail" : "(): Iterable[AttributePath]", "member" : "scales.xml.xpath.AttributeAxis.i_*@", "link" : "scales\/xml\/xpath\/AttributeAxis.html#i_*@:Iterable[scales.xml.xpath.AttributePath]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/AttributeAxis.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/AttributeAxis.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/AttributeAxis.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/AttributeAxis.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/AttributeAxis.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/AttributeAxis.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/AttributeAxis.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/AttributeAxis.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/AttributeAxis.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/AttributeAxis.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/AttributeAxis.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/AttributeAxis.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/AttributeAxis.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/AttributeAxis.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/AttributeAxis.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/AttributeAxis.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributeAxis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributeAxis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributeAxis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributeAxis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributeAxis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributeAxis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributeAxis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeAxis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeAxis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeAxis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributeAxis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributeAxis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributeAxis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributeAxis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributeAxis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributeAxis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributeAxis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributeAxis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributeAxis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "helper", "tail" : ": BuilderHelper[xml.XmlPath, T]", "member" : "scales.xml.xpath.AttributeAxis.helper", "link" : "scales\/xml\/xpath\/AttributeAxis.html#helper:scales.utils.collection.BuilderHelper[scales.xml.XmlPath,AttributeAxis.this.T]", "kind" : "implicit abstract val"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.just", "link" : "scales\/xml\/xpath\/AttributeAxis.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.empty", "link" : "scales\/xml\/xpath\/AttributeAxis.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.newThis", "link" : "scales\/xml\/xpath\/AttributeAxis.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "abstract def"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.Axis.path", "link" : "scales\/xml\/xpath\/AttributeAxis.html#path:scales.xml.xpath.XPathInfo", "kind" : "abstract val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[T, xml.XmlPath, T]", "member" : "scales.xml.xpath.Axis.cbf", "link" : "scales\/xml\/xpath\/AttributeAxis.html#cbf:scala.collection.generic.CanBuildFrom[Axis.this.T,scales.xml.XmlPath,Axis.this.T]", "kind" : "abstract val"}, {"member" : "scales.xml.xpath.Axis.T", "error" : "unsupported entity"}], "shortDescription" : "The * and @ must be swapped otherwise its an annotation", "trait" : "scales\/xml\/xpath\/AttributeAxis.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.AttributeNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AttributeNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: Attribute): Option[QName]", "member" : "scales.xml.xpath.AttributeNames.name", "link" : "scales\/xml\/xpath\/AttributeNames$.html#name(implicitt:scales.xml.Attribute):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: Attribute): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/AttributeNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributeNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributeNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributeNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributeNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributeNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributeNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributeNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributeNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributeNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributeNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributeNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributeNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributeNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributeNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributeNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributeNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.AttributePath", "shortDescription" : "Simple container for keeping relationship between the parent and attribute", "members_case class" : [{"member" : "scales.xml.xpath.AttributePath#<init>", "error" : "unsupported entity"}, {"label" : "parent", "tail" : ": xml.XmlPath", "member" : "scales.xml.xpath.AttributePath.parent", "link" : "scales\/xml\/xpath\/AttributePath.html#parent:scales.xml.XmlPath", "kind" : "val"}, {"label" : "attribute", "tail" : ": Attribute", "member" : "scales.xml.xpath.AttributePath.attribute", "link" : "scales\/xml\/xpath\/AttributePath.html#attribute:scales.xml.Attribute", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/xpath\/AttributePath.html", "kind" : "case class"}, {"name" : "scales.xml.xpath.AttributePathComparisoms", "shortDescription" : "", "members_case class" : [{"label" : "===", "tail" : "(other: String): Boolean", "member" : "scales.xml.xpath.AttributePathComparisoms.===", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#===(other:String):Boolean", "kind" : "def"}, {"member" : "scales.xml.xpath.AttributePathComparisoms#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": AttributePath", "member" : "scales.xml.xpath.AttributePathComparisoms.path", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#path:scales.xml.xpath.AttributePath", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathComparisoms.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/xpath\/AttributePathComparisoms.html", "kind" : "case class"}, {"name" : "scales.xml.xpath.AttributePathNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AttributePathNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: AttributePath): Option[QName]", "member" : "scales.xml.xpath.AttributePathNames.name", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#name(implicitt:scales.xml.xpath.AttributePath):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: AttributePath): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePathNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.AttributePaths", "shortDescription" : "Attributes that have been selected", "members_case class" : [{"label" : "===", "tail" : "(textValue: ⇒ String): AttributePaths[PT]", "member" : "scales.xml.xpath.AttributePaths.===", "link" : "scales\/xml\/xpath\/AttributePaths.html#===(textValue:=>String):scales.xml.xpath.AttributePaths[PT]", "kind" : "def"}, {"label" : "oneOr", "tail" : "(handler: (Iterable[AttributePath]) ⇒ Iterable[AttributePath]): Iterable[AttributePath]", "member" : "scales.xml.xpath.AttributePaths.oneOr", "link" : "scales\/xml\/xpath\/AttributePaths.html#oneOr(handler:Iterable[scales.xml.xpath.AttributePath]=>Iterable[scales.xml.xpath.AttributePath]):Iterable[scales.xml.xpath.AttributePath]", "kind" : "def"}, {"label" : "one", "tail" : "(): Iterable[AttributePath]", "member" : "scales.xml.xpath.AttributePaths.one", "link" : "scales\/xml\/xpath\/AttributePaths.html#one:Iterable[scales.xml.xpath.AttributePath]", "kind" : "def"}, {"label" : "*@", "tail" : "(qname: UnprefixedQName): AttributePaths[PT]", "member" : "scales.xml.xpath.AttributePaths.*@", "link" : "scales\/xml\/xpath\/AttributePaths.html#*@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[PT]", "kind" : "def"}, {"label" : "*@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[PT]", "member" : "scales.xml.xpath.AttributePaths.*@", "link" : "scales\/xml\/xpath\/AttributePaths.html#*@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[PT]", "kind" : "def"}, {"label" : "*@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[PT]", "member" : "scales.xml.xpath.AttributePaths.*@", "link" : "scales\/xml\/xpath\/AttributePaths.html#*@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[PT]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[PT]", "member" : "scales.xml.xpath.AttributePaths.\\^", "link" : "scales\/xml\/xpath\/AttributePaths.html#\\^():scales.xml.xpath.XPath[PT]", "kind" : "def"}, {"member" : "scales.xml.xpath.AttributePaths#<init>", "error" : "unsupported entity"}, {"label" : "cbf", "tail" : ": CanBuildFrom[PT, xml.XmlPath, PT]", "member" : "scales.xml.xpath.AttributePaths.cbf", "link" : "scales\/xml\/xpath\/AttributePaths.html#cbf:scala.collection.generic.CanBuildFrom[PT,scales.xml.XmlPath,PT]", "kind" : "val"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.AttributePaths.path", "link" : "scales\/xml\/xpath\/AttributePaths.html#path:scales.xml.xpath.XPathInfo", "kind" : "val"}, {"label" : "attributes", "tail" : ": Iterable[AttributePath]", "member" : "scales.xml.xpath.AttributePaths.attributes", "link" : "scales\/xml\/xpath\/AttributePaths.html#attributes:Iterable[scales.xml.xpath.AttributePath]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePaths.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePaths.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePaths.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePaths.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePaths.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePaths.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePaths.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePaths.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePaths.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePaths.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePaths.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePaths.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePaths.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePaths.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePaths.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePaths.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/xpath\/AttributePaths.html", "kind" : "case class"}, {"name" : "scales.xml.xpath.AttributePathsNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AttributePathsNames$.html", "members_object" : [{"label" : "name", "tail" : "(a: AttributePaths[_]): Option[QName]", "member" : "scales.xml.xpath.AttributePathsNames.name", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#name(implicita:scales.xml.xpath.AttributePaths[_]):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: AttributePaths[_]): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathsNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.AttributePathsText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AttributePathsText$.html", "members_object" : [{"label" : "text", "tail" : "(a: AttributePaths[_]): String", "member" : "scales.xml.xpath.AttributePathsText.text", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#text(implicita:scales.xml.xpath.AttributePaths[_]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePathsText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathsText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.AttributePathText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AttributePathText$.html", "members_object" : [{"label" : "text", "tail" : "(a: AttributePath): String", "member" : "scales.xml.xpath.AttributePathText.text", "link" : "scales\/xml\/xpath\/AttributePathText$.html#text(implicita:scales.xml.xpath.AttributePath):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributePathText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributePathText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributePathText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributePathText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributePathText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributePathText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributePathText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributePathText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributePathText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributePathText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributePathText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributePathText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributePathText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributePathText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributePathText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributePathText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.AttributeText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/AttributeText$.html", "members_object" : [{"label" : "text", "tail" : "(a: Attribute): String", "member" : "scales.xml.xpath.AttributeText.text", "link" : "scales\/xml\/xpath\/AttributeText$.html#text(implicita:scales.xml.Attribute):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/AttributeText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/AttributeText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/AttributeText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/AttributeText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/AttributeText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/AttributeText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/AttributeText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/AttributeText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/AttributeText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/AttributeText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/AttributeText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/AttributeText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/AttributeText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/AttributeText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/AttributeText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/AttributeText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/AttributeText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.Axis", "members_trait" : [{"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/Axis.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/Axis.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/Axis.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/Axis.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/Axis.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/Axis.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/Axis.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/Axis.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/Axis.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/Axis.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/Axis.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/Axis.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/Axis.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/Axis.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/Axis.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/Axis.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/Axis.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/Axis.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/Axis.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Axis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Axis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Axis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Axis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Axis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Axis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Axis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Axis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Axis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Axis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Axis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Axis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/Axis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Axis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Axis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Axis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Axis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Axis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Axis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.just", "link" : "scales\/xml\/xpath\/Axis.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.empty", "link" : "scales\/xml\/xpath\/Axis.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.newThis", "link" : "scales\/xml\/xpath\/Axis.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "abstract def"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.Axis.path", "link" : "scales\/xml\/xpath\/Axis.html#path:scales.xml.xpath.XPathInfo", "kind" : "abstract val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[T, xml.XmlPath, T]", "member" : "scales.xml.xpath.Axis.cbf", "link" : "scales\/xml\/xpath\/Axis.html#cbf:scala.collection.generic.CanBuildFrom[Axis.this.T,scales.xml.XmlPath,Axis.this.T]", "kind" : "abstract val"}, {"member" : "scales.xml.xpath.Axis.T", "error" : "unsupported entity"}], "shortDescription" : "", "object" : "scales\/xml\/xpath\/Axis$.html", "members_object" : [{"label" : "lazy_recUnpack", "tail" : "(axis: Axis)(xmlPath: Iterable[xml.XmlPath]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.lazy_recUnpack", "link" : "scales\/xml\/xpath\/Axis$.html#lazy_recUnpack(axis:scales.xml.xpath.Axis)(xmlPath:Iterable[scales.xml.XmlPath]):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "eager_recUnpack", "tail" : "(xmlPath: Iterable[xml.XmlPath]): List[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.eager_recUnpack", "link" : "scales\/xml\/xpath\/Axis$.html#eager_recUnpack(xmlPath:Iterable[scales.xml.XmlPath]):List[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Axis$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Axis$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Axis$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Axis$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Axis$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Axis$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Axis$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Axis$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Axis$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Axis$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Axis$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Axis$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/Axis$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Axis$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Axis$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Axis$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Axis$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Axis$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Axis$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/xml\/xpath\/Axis.html", "kind" : "object"}, {"name" : "scales.xml.xpath.DIF", "shortDescription" : "Dummy implicit filler for easing interface issues", "object" : "scales\/xml\/xpath\/DIF$.html", "members_class" : [{"member" : "scales.xml.xpath.DIF#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/DIF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/DIF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/DIF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/DIF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/DIF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/DIF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/DIF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DIF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DIF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DIF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/DIF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/DIF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/DIF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/DIF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/DIF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/DIF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/DIF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/DIF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/DIF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "dif", "tail" : ": DIF", "member" : "scales.xml.xpath.DIF.dif", "link" : "scales\/xml\/xpath\/DIF$.html#dif:scales.xml.xpath.DIF", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/DIF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/DIF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/DIF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/DIF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/DIF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/DIF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/DIF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DIF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DIF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DIF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/DIF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/DIF$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/DIF$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/DIF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/DIF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/DIF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/DIF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/DIF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/DIF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/xpath\/DIF.html", "kind" : "class"}, {"name" : "scales.xml.xpath.DirectXPath", "shortDescription" : "Pos and filter for a direct access does not flatmap.", "members_class" : [{"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.DirectXPath.process", "link" : "scales\/xml\/xpath\/DirectXPath.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[DirectXPath.this.T]", "kind" : "def"}, {"member" : "scales.xml.xpath.DirectXPath#<init>", "error" : "unsupported entity"}, {"label" : "cbf", "tail" : ": CanBuildFrom[PT, xml.XmlPath, PT]", "member" : "scales.xml.xpath.DirectXPath.cbf", "link" : "scales\/xml\/xpath\/DirectXPath.html#cbf:scala.collection.generic.CanBuildFrom[PT,scales.xml.XmlPath,PT]", "kind" : "val"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.DirectXPath.path", "link" : "scales\/xml\/xpath\/DirectXPath.html#path:scales.xml.xpath.XPathInfo", "kind" : "val"}, {"label" : "|", "tail" : "(other: XPath[T]): XPath[T]", "member" : "scales.xml.xpath.XPath.|", "link" : "scales\/xml\/xpath\/DirectXPath.html#|(other:scales.xml.xpath.XPath[XPath.this.T]):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "oneOr", "tail" : "(handler: (XPath[T]) ⇒ Iterable[xml.XmlPath]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.oneOr", "link" : "scales\/xml\/xpath\/DirectXPath.html#oneOr(handler:scales.xml.xpath.XPath[XPath.this.T]=>Iterable[scales.xml.XmlPath]):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "one", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.one", "link" : "scales\/xml\/xpath\/DirectXPath.html#one:Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "|>", "tail" : "(f: (XPath[T]) ⇒ XPath[T]): XPath[T]", "member" : "scales.xml.xpath.XPath.|>", "link" : "scales\/xml\/xpath\/DirectXPath.html#|>(f:scales.xml.xpath.XPath[XPath.this.T]=>scales.xml.xpath.XPath[XPath.this.T]):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "in", "tail" : "(f: (XPath[T]) ⇒ XPath[T]): XPath[T]", "member" : "scales.xml.xpath.XPath.in", "link" : "scales\/xml\/xpath\/DirectXPath.html#in(f:scales.xml.xpath.XPath[XPath.this.T]=>scales.xml.xpath.XPath[XPath.this.T]):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.just", "link" : "scales\/xml\/xpath\/DirectXPath.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.empty", "link" : "scales\/xml\/xpath\/DirectXPath.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.XPath.newThis", "link" : "scales\/xml\/xpath\/DirectXPath.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "T", "tail" : "", "member" : "scales.xml.xpath.XPath.T", "link" : "scales\/xml\/xpath\/DirectXPath.html#T=PT", "kind" : "type"}, {"label" : "helper", "tail" : ": BuilderHelper[xml.XmlPath, PT]", "member" : "scales.xml.xpath.XPath.helper", "link" : "scales\/xml\/xpath\/DirectXPath.html#helper:scales.utils.collection.BuilderHelper[scales.xml.XmlPath,PT]", "kind" : "implicit val"}, {"label" : "descendant_or_self_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.descendant_or_self_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#descendant_or_self_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "ancestor_or_self_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.ancestor_or_self_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#ancestor_or_self_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "ancestor_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.ancestor_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#ancestor_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "preceding_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.preceding_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#preceding_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "following_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.following_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#following_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "descendant_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.descendant_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#descendant_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "following_sibling_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.SiblingsAxis.following_sibling_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#following_sibling_:::scales.xml.xpath.XPath[SiblingsAxis.this.T]", "kind" : "def"}, {"label" : "preceding_sibling_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.SiblingsAxis.preceding_sibling_::", "link" : "scales\/xml\/xpath\/DirectXPath.html#preceding_sibling_:::scales.xml.xpath.XPath[SiblingsAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\*:@", "tail" : "(local: String): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\*:@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\*:@(local:String):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*:@", "tail" : "(local: String): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*:@", "link" : "scales\/xml\/xpath\/DirectXPath.html#*:@(local:String):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/DirectXPath.html#*@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/DirectXPath.html#*@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/DirectXPath.html#*@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/DirectXPath.html#*@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "i_*@", "tail" : "(): Iterable[AttributePath]", "member" : "scales.xml.xpath.AttributeAxis.i_*@", "link" : "scales\/xml\/xpath\/DirectXPath.html#i_*@:Iterable[scales.xml.xpath.AttributePath]", "kind" : "def"}, {"label" : "pi", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.pi", "link" : "scales\/xml\/xpath\/DirectXPath.html#pi:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "comment", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.comment", "link" : "scales\/xml\/xpath\/DirectXPath.html#comment:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "cdata", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.cdata", "link" : "scales\/xml\/xpath\/DirectXPath.html#cdata:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "text", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.text", "link" : "scales\/xml\/xpath\/DirectXPath.html#text:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "textOnly", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.textOnly", "link" : "scales\/xml\/xpath\/DirectXPath.html#textOnly:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*:*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/DirectXPath.html#*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/DirectXPath.html#*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/DirectXPath.html#*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*:*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*:*", "link" : "scales\/xml\/xpath\/DirectXPath.html#*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/DirectXPath.html#*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/DirectXPath.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/DirectXPath.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/DirectXPath.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/DirectXPath.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/DirectXPath.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/DirectXPath.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/DirectXPath.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/DirectXPath.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/DirectXPath.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/DirectXPath.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/DirectXPath.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/DirectXPath.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/DirectXPath.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/DirectXPath.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/DirectXPath.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/DirectXPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/DirectXPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/DirectXPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/DirectXPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/DirectXPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/DirectXPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/DirectXPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DirectXPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DirectXPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DirectXPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/DirectXPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/DirectXPath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/DirectXPath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/DirectXPath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/DirectXPath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/DirectXPath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/DirectXPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/DirectXPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/DirectXPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/xpath\/DirectXPath.html", "kind" : "class"}, {"name" : "scales.xml.xpath.DocumentSplitters", "members_trait" : [{"label" : "descendant_or_self_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.descendant_or_self_::", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#descendant_or_self_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "ancestor_or_self_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.ancestor_or_self_::", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#ancestor_or_self_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "ancestor_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.ancestor_::", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#ancestor_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "preceding_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.preceding_::", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#preceding_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "following_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.following_::", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#following_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "descendant_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.descendant_::", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#descendant_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/DocumentSplitters.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.just", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.empty", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.newThis", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "abstract def"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.Axis.path", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#path:scales.xml.xpath.XPathInfo", "kind" : "abstract val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[T, xml.XmlPath, T]", "member" : "scales.xml.xpath.Axis.cbf", "link" : "scales\/xml\/xpath\/DocumentSplitters.html#cbf:scala.collection.generic.CanBuildFrom[Axis.this.T,scales.xml.XmlPath,Axis.this.T]", "kind" : "abstract val"}, {"member" : "scales.xml.xpath.Axis.T", "error" : "unsupported entity"}], "shortDescription" : "Following and preceding split the document in two", "trait" : "scales\/xml\/xpath\/DocumentSplitters.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.DslNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/DslNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: DslBuilder): Option[QName]", "member" : "scales.xml.xpath.DslNames.name", "link" : "scales\/xml\/xpath\/DslNames$.html#name(implicitt:scales.xml.dsl.DslBuilder):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: DslBuilder): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/DslNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/DslNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/DslNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/DslNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/DslNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/DslNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/DslNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/DslNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DslNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DslNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DslNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/DslNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/DslNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/DslNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/DslNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/DslNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/DslNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/DslNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/DslNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/DslNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.DslText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/DslText$.html", "members_object" : [{"label" : "text", "tail" : "(t: DslBuilder): String", "member" : "scales.xml.xpath.DslText.text", "link" : "scales\/xml\/xpath\/DslText$.html#text(implicitt:scales.xml.dsl.DslBuilder):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/DslText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/DslText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/DslText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/DslText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/DslText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/DslText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/DslText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DslText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DslText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/DslText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/DslText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/DslText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/DslText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/DslText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/DslText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/DslText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/DslText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/DslText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/DslText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.ElementStep", "members_trait" : [{"label" : "\\\\*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\\\*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\\\*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*:*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\\\*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\\\*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\\\*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/ElementStep.html#*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/ElementStep.html#*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/ElementStep.html#*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*:*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*:*", "link" : "scales\/xml\/xpath\/ElementStep.html#*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/ElementStep.html#\\*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/ElementStep.html#*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/ElementStep.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/ElementStep.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/ElementStep.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/ElementStep.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/ElementStep.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/ElementStep.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/ElementStep.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/ElementStep.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/ElementStep.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/ElementStep.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/ElementStep.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/ElementStep.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/ElementStep.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/ElementStep.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/ElementStep.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/ElementStep.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/ElementStep.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/ElementStep.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/ElementStep.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/ElementStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/ElementStep.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/ElementStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/ElementStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/ElementStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/ElementStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/ElementStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ElementStep.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ElementStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ElementStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/ElementStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/ElementStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/ElementStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/ElementStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/ElementStep.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/ElementStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/ElementStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/ElementStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/ElementStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.just", "link" : "scales\/xml\/xpath\/ElementStep.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.empty", "link" : "scales\/xml\/xpath\/ElementStep.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.newThis", "link" : "scales\/xml\/xpath\/ElementStep.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "abstract def"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.Axis.path", "link" : "scales\/xml\/xpath\/ElementStep.html#path:scales.xml.xpath.XPathInfo", "kind" : "abstract val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[T, xml.XmlPath, T]", "member" : "scales.xml.xpath.Axis.cbf", "link" : "scales\/xml\/xpath\/ElementStep.html#cbf:scala.collection.generic.CanBuildFrom[Axis.this.T,scales.xml.XmlPath,Axis.this.T]", "kind" : "abstract val"}, {"member" : "scales.xml.xpath.Axis.T", "error" : "unsupported entity"}], "shortDescription" : "", "trait" : "scales\/xml\/xpath\/ElementStep.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.ElemNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/ElemNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: Elem): Option[QName]", "member" : "scales.xml.xpath.ElemNames.name", "link" : "scales\/xml\/xpath\/ElemNames$.html#name(implicitt:scales.xml.Elem):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: Elem): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/ElemNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/ElemNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/ElemNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/ElemNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/ElemNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/ElemNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/ElemNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/ElemNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ElemNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ElemNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ElemNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/ElemNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/ElemNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/ElemNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/ElemNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/ElemNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/ElemNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/ElemNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/ElemNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/ElemNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.EmptyQName", "shortDescription" : "Represents an empty qname for those cases that should return empty string", "object" : "scales\/xml\/xpath\/EmptyQName$.html", "members_object" : [{"label" : "empty", "tail" : ": NoNamespaceQName", "member" : "scales.xml.xpath.EmptyQName.empty", "link" : "scales\/xml\/xpath\/EmptyQName$.html#empty:scales.xml.NoNamespaceQName", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/EmptyQName$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/EmptyQName$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/EmptyQName$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/EmptyQName$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/EmptyQName$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/EmptyQName$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/EmptyQName$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/EmptyQName$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/EmptyQName$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/EmptyQName$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/EmptyQName$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/EmptyQName$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/EmptyQName$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/EmptyQName$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/EmptyQName$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/EmptyQName$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/EmptyQName$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/EmptyQName$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/EmptyQName$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.Following", "shortDescription" : "Iterates over paths using the document order as per the following_:: axis.", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/xml\/xpath\/Following.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Path[XmlItem, Elem, xml.XCC]]", "member" : "scales.xml.xpath.Following.iterator", "link" : "scales\/xml\/xpath\/Following.html#iterator:Iterator[scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]]", "kind" : "def"}, {"label" : "f", "tail" : ": Option[Path[XmlItem, Elem, xml.XCC]]", "member" : "scales.xml.xpath.Following.f", "link" : "scales\/xml\/xpath\/Following.html#f:Option[scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]]", "kind" : "val"}, {"member" : "scales.xml.xpath.Following#<init>", "error" : "unsupported entity"}, {"label" : "initial", "tail" : ": xml.XmlPath", "member" : "scales.xml.xpath.Following.initial", "link" : "scales\/xml\/xpath\/Following.html#initial:scales.xml.XmlPath", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.Iterable.seq", "link" : "scales\/xml\/xpath\/Following.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "scales\/xml\/xpath\/Following.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/xml\/xpath\/Following.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/xml\/xpath\/Following.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/xml\/xpath\/Following.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.XmlPath]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/xml\/xpath\/Following.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "scales\/xml\/xpath\/Following.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "scales\/xml\/xpath\/Following.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/xml\/xpath\/Following.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "scales\/xml\/xpath\/Following.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "scales\/xml\/xpath\/Following.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.dropRight", "link" : "scales\/xml\/xpath\/Following.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.takeRight", "link" : "scales\/xml\/xpath\/Following.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/xml\/xpath\/Following.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/xml\/xpath\/Following.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/xml\/xpath\/Following.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "scales\/xml\/xpath\/Following.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.drop", "link" : "scales\/xml\/xpath\/Following.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.take", "link" : "scales\/xml\/xpath\/Following.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.slice", "link" : "scales\/xml\/xpath\/Following.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): xml.XmlPath", "member" : "scala.collection.IterableLike.head", "link" : "scales\/xml\/xpath\/Following.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.XmlPath]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/xml\/xpath\/Following.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/xml\/xpath\/Following.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "scales\/xml\/xpath\/Following.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "scales\/xml\/xpath\/Following.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "scales\/xml\/xpath\/Following.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Option[xml.XmlPath]", "member" : "scala.collection.IterableLike.find", "link" : "scales\/xml\/xpath\/Following.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "scales\/xml\/xpath\/Following.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "scales\/xml\/xpath\/Following.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.XmlPath) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "scales\/xml\/xpath\/Following.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[xml.XmlPath]): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.toCollection", "link" : "scales\/xml\/xpath\/Following.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "scales\/xml\/xpath\/Following.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/xml\/xpath\/Following.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/xml\/xpath\/Following.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (xml.XmlPath) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/xml\/xpath\/Following.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (xml.XmlPath) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/xml\/xpath\/Following.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/xml\/xpath\/Following.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "scales\/xml\/xpath\/Following.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): FilterMonadic[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/xml\/xpath\/Following.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/xml\/xpath\/Following.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "scales\/xml\/xpath\/Following.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.XmlPath, Col[xml.XmlPath]]): Col[xml.XmlPath]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/xml\/xpath\/Following.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/xml\/xpath\/Following.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/xml\/xpath\/Following.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/xml\/xpath\/Following.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "scales\/xml\/xpath\/Following.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.span", "link" : "scales\/xml\/xpath\/Following.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "scales\/xml\/xpath\/Following.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.init", "link" : "scales\/xml\/xpath\/Following.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[xml.XmlPath]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/xml\/xpath\/Following.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): xml.XmlPath", "member" : "scala.collection.TraversableLike.last", "link" : "scales\/xml\/xpath\/Following.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.tail", "link" : "scales\/xml\/xpath\/Following.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[xml.XmlPath]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/xml\/xpath\/Following.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/xml\/xpath\/Following.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/xml\/xpath\/Following.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/xml\/xpath\/Following.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (xml.XmlPath) ⇒ K): Map[K, Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/xml\/xpath\/Following.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/xml\/xpath\/Following.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.XmlPath, B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/xml\/xpath\/Following.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/xml\/xpath\/Following.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/xml\/xpath\/Following.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.XmlPath) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/xml\/xpath\/Following.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.XmlPath) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/xml\/xpath\/Following.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/xml\/xpath\/Following.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/xml\/xpath\/Following.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/xml\/xpath\/Following.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/xml\/xpath\/Following.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[xml.XmlPath, ParIterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "scales\/xml\/xpath\/Following.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/xml\/xpath\/Following.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/xml\/xpath\/Following.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/xml\/xpath\/Following.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[xml.XmlPath]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/xml\/xpath\/Following.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Following.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Following.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Following.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Following.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Following.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Following.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.XmlPath, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/xpath\/Following.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/xpath\/Following.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/xpath\/Following.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/xpath\/Following.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/xpath\/Following.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/xpath\/Following.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/xpath\/Following.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/xpath\/Following.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/xpath\/Following.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/xpath\/Following.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/xpath\/Following.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/xpath\/Following.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/xpath\/Following.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/xpath\/Following.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/xpath\/Following.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/xpath\/Following.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/xpath\/Following.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.XmlPath) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/xpath\/Following.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/xpath\/Following.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/xpath\/Following.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/xpath\/Following.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.XmlPath, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/xpath\/Following.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.XmlPath) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/xpath\/Following.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/xpath\/Following.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/xpath\/Following.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/xpath\/Following.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/xpath\/Following.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.XmlPath, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/xpath\/Following.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/xpath\/Following.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/xpath\/Following.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/xpath\/Following.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/xpath\/Following.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/xpath\/Following.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Following.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Following.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Following.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Following.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Following.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Following.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Following.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Following.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Following.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Following.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Following.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Following.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Following.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Following.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Following.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Following.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Following.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Following.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/xpath\/Following.html", "kind" : "class"}, {"name" : "scales.xml.xpath.FunctionImplicits", "members_trait" : [{"label" : "xpathToNames", "tail" : "(): Names[XPath[T]]", "member" : "scales.xml.xpath.NamesImplicits.xpathToNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#xpathToNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsNames", "tail" : "(): Names[AttributePaths[T]]", "member" : "scales.xml.xpath.NamesImplicits.attribPathsNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#attribPathsNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslNames", "tail" : ": DslNames.type", "member" : "scales.xml.xpath.NamesImplicits.dslNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#dslNames:scales.xml.xpath.DslNames.type", "kind" : "implicit val"}, {"label" : "aqnameNames", "tail" : ": AQNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.aqnameNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#aqnameNames:scales.xml.xpath.AQNameNames.type", "kind" : "implicit val"}, {"label" : "qnameNames", "tail" : ": QNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.qnameNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#qnameNames:scales.xml.xpath.QNameNames.type", "kind" : "implicit val"}, {"label" : "xtreeNames", "tail" : ": XmlTreeNames.type", "member" : "scales.xml.xpath.NamesImplicits.xtreeNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#xtreeNames:scales.xml.xpath.XmlTreeNames.type", "kind" : "implicit val"}, {"label" : "elemNames", "tail" : ": ElemNames.type", "member" : "scales.xml.xpath.NamesImplicits.elemNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#elemNames:scales.xml.xpath.ElemNames.type", "kind" : "implicit val"}, {"label" : "xpathNames", "tail" : ": XmlPathNames.type", "member" : "scales.xml.xpath.NamesImplicits.xpathNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#xpathNames:scales.xml.xpath.XmlPathNames.type", "kind" : "implicit val"}, {"label" : "attributePathNames", "tail" : ": AttributePathNames.type", "member" : "scales.xml.xpath.NamesImplicits.attributePathNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#attributePathNames:scales.xml.xpath.AttributePathNames.type", "kind" : "implicit val"}, {"label" : "attribNames", "tail" : ": AttributeNames.type", "member" : "scales.xml.xpath.NamesImplicits.attribNames", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#attribNames:scales.xml.xpath.AttributeNames.type", "kind" : "implicit val"}, {"label" : "dif", "tail" : ": DIF", "member" : "scales.xml.xpath.NamesImplicits.dif", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#dif:scales.xml.xpath.DIF", "kind" : "implicit val"}, {"label" : "xpathToTextValue", "tail" : "(): TextValue[XPath[T]]", "member" : "scales.xml.xpath.TextImplicits.xpathToTextValue", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#xpathToTextValue[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsText", "tail" : "(): TextValue[AttributePaths[T]]", "member" : "scales.xml.xpath.TextImplicits.attribPathsText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#attribPathsText[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslText", "tail" : ": DslText.type", "member" : "scales.xml.xpath.TextImplicits.dslText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#dslText:scales.xml.xpath.DslText.type", "kind" : "implicit val"}, {"label" : "itemOrElemText", "tail" : ": ItemOrElemText.type", "member" : "scales.xml.xpath.TextImplicits.itemOrElemText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#itemOrElemText:scales.xml.xpath.ItemOrElemText.type", "kind" : "implicit val"}, {"label" : "itemText", "tail" : ": XmlItemText.type", "member" : "scales.xml.xpath.TextImplicits.itemText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#itemText:scales.xml.xpath.XmlItemText.type", "kind" : "implicit val"}, {"label" : "xmlpathText", "tail" : ": XmlPathText.type", "member" : "scales.xml.xpath.TextImplicits.xmlpathText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#xmlpathText:scales.xml.xpath.XmlPathText.type", "kind" : "implicit val"}, {"label" : "attribPathText", "tail" : ": AttributePathText.type", "member" : "scales.xml.xpath.TextImplicits.attribPathText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#attribPathText:scales.xml.xpath.AttributePathText.type", "kind" : "implicit val"}, {"label" : "attribText", "tail" : ": AttributeText.type", "member" : "scales.xml.xpath.TextImplicits.attribText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#attribText:scales.xml.xpath.AttributeText.type", "kind" : "implicit val"}, {"label" : "xtreeText", "tail" : ": XmlTreeText.type", "member" : "scales.xml.xpath.TextImplicits.xtreeText", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#xtreeText:scales.xml.xpath.XmlTreeText.type", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/FunctionImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/FunctionImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/xpath\/FunctionImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.Functions", "members_trait" : [{"label" : "hasLocalNameA", "tail" : "(local: String): (AttributePath) ⇒ Boolean", "member" : "scales.xml.xpath.Functions.hasLocalNameA", "link" : "scales\/xml\/xpath\/Functions.html#hasLocalNameA(local:String):scales.xml.xpath.AttributePath=>Boolean", "kind" : "def"}, {"label" : "hasLocalNameX", "tail" : "(local: String): (xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.Functions.hasLocalNameX", "link" : "scales\/xml\/xpath\/Functions.html#hasLocalNameX(local:String):scales.xml.XmlPath=>Boolean", "kind" : "def"}, {"label" : "normalizeSpace", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.normalizeSpace", "link" : "scales\/xml\/xpath\/Functions.html#normalizeSpace[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "value", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.value", "link" : "scales\/xml\/xpath\/Functions.html#value[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "string", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.string", "link" : "scales\/xml\/xpath\/Functions.html#string[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "text", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.text", "link" : "scales\/xml\/xpath\/Functions.html#text[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "normalizeSpace", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.normalizeSpace", "link" : "scales\/xml\/xpath\/Functions.html#normalizeSpace[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "value", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.value", "link" : "scales\/xml\/xpath\/Functions.html#value[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "string", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.string", "link" : "scales\/xml\/xpath\/Functions.html#string[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "text", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.text", "link" : "scales\/xml\/xpath\/Functions.html#text[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "hasNamespace", "tail" : "(namespaceUri: String)(name: Names[T], d: DIF): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.hasNamespace", "link" : "scales\/xml\/xpath\/Functions.html#hasNamespace[T](namespaceUri:String)(implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):T=>Boolean", "kind" : "def"}, {"label" : "namespaceUri", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.namespaceUri", "link" : "scales\/xml\/xpath\/Functions.html#namespaceUri[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "namespaceUri", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.namespaceUri", "link" : "scales\/xml\/xpath\/Functions.html#namespaceUri[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "hasNamespace", "tail" : "(namespace: Namespace)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.hasNamespace", "link" : "scales\/xml\/xpath\/Functions.html#hasNamespace[T](namespace:scales.xml.Namespace)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "namespace", "tail" : "(t: T, name: Names[T], d: DIF): UnderlyingNamespace", "member" : "scales.xml.xpath.NameFunctions.namespace", "link" : "scales\/xml\/xpath\/Functions.html#namespace[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):scales.xml.UnderlyingNamespace", "kind" : "def"}, {"label" : "pqName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.pqName", "link" : "scales\/xml\/xpath\/Functions.html#pqName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "pqName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.pqName", "link" : "scales\/xml\/xpath\/Functions.html#pqName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.qualifiedName", "link" : "scales\/xml\/xpath\/Functions.html#qualifiedName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.qualifiedName", "link" : "scales\/xml\/xpath\/Functions.html#qualifiedName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "hasQName", "tail" : "(t: T)(name: Names[T]): Boolean", "member" : "scales.xml.xpath.NameFunctions.hasQName", "link" : "scales\/xml\/xpath\/Functions.html#hasQName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):Boolean", "kind" : "def"}, {"label" : "hasQName", "tail" : "(t: T, name: Names[T], d: DIF): Boolean", "member" : "scales.xml.xpath.NameFunctions.hasQName", "link" : "scales\/xml\/xpath\/Functions.html#hasQName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(t: T)(iname: Names[T]): QName", "member" : "scales.xml.xpath.NameFunctions.name", "link" : "scales\/xml\/xpath\/Functions.html#name[T](t:T)(implicitiname:scales.xml.xpath.Names[T]):scales.xml.QName", "kind" : "def"}, {"label" : "name", "tail" : "(t: T, name: Names[T], d: DIF): QName", "member" : "scales.xml.xpath.NameFunctions.name", "link" : "scales\/xml\/xpath\/Functions.html#name[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):scales.xml.QName", "kind" : "def"}, {"label" : "qName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.qName", "link" : "scales\/xml\/xpath\/Functions.html#qName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "qName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.qName", "link" : "scales\/xml\/xpath\/Functions.html#qName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "qname", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.qname", "link" : "scales\/xml\/xpath\/Functions.html#qname[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "qname", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.qname", "link" : "scales\/xml\/xpath\/Functions.html#qname[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "isEquivalent", "tail" : "(qname: QName)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.isEquivalent", "link" : "scales\/xml\/xpath\/Functions.html#isEquivalent[T](qname:scales.xml.QName)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "isExactly", "tail" : "(qname: QName)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.isExactly", "link" : "scales\/xml\/xpath\/Functions.html#isExactly[T](qname:scales.xml.QName)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "hasLocalName", "tail" : "(localName: String)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.hasLocalName", "link" : "scales\/xml\/xpath\/Functions.html#hasLocalName[T](localName:String)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "localName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.localName", "link" : "scales\/xml\/xpath\/Functions.html#localName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "localName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.localName", "link" : "scales\/xml\/xpath\/Functions.html#localName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Functions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Functions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Functions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Functions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Functions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Functions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Functions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Functions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Functions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Functions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Functions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Functions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/Functions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Functions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Functions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Functions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Functions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Functions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Functions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Collects all type class based xpath functions, exposed via Functions in package", "trait" : "scales\/xml\/xpath\/Functions.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.ItemOrElemText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/ItemOrElemText$.html", "members_object" : [{"label" : "text", "tail" : "(t: xml.ItemOrElem): String", "member" : "scales.xml.xpath.ItemOrElemText.text", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#text(implicitt:scales.xml.ItemOrElem):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/ItemOrElemText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.NameFunctions", "members_trait" : [{"label" : "hasNamespace", "tail" : "(namespaceUri: String)(name: Names[T], d: DIF): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.hasNamespace", "link" : "scales\/xml\/xpath\/NameFunctions.html#hasNamespace[T](namespaceUri:String)(implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):T=>Boolean", "kind" : "def"}, {"label" : "namespaceUri", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.namespaceUri", "link" : "scales\/xml\/xpath\/NameFunctions.html#namespaceUri[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "namespaceUri", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.namespaceUri", "link" : "scales\/xml\/xpath\/NameFunctions.html#namespaceUri[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "hasNamespace", "tail" : "(namespace: Namespace)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.hasNamespace", "link" : "scales\/xml\/xpath\/NameFunctions.html#hasNamespace[T](namespace:scales.xml.Namespace)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "namespace", "tail" : "(t: T, name: Names[T], d: DIF): UnderlyingNamespace", "member" : "scales.xml.xpath.NameFunctions.namespace", "link" : "scales\/xml\/xpath\/NameFunctions.html#namespace[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):scales.xml.UnderlyingNamespace", "kind" : "def"}, {"label" : "pqName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.pqName", "link" : "scales\/xml\/xpath\/NameFunctions.html#pqName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "pqName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.pqName", "link" : "scales\/xml\/xpath\/NameFunctions.html#pqName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.qualifiedName", "link" : "scales\/xml\/xpath\/NameFunctions.html#qualifiedName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "qualifiedName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.qualifiedName", "link" : "scales\/xml\/xpath\/NameFunctions.html#qualifiedName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "hasQName", "tail" : "(t: T)(name: Names[T]): Boolean", "member" : "scales.xml.xpath.NameFunctions.hasQName", "link" : "scales\/xml\/xpath\/NameFunctions.html#hasQName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):Boolean", "kind" : "def"}, {"label" : "hasQName", "tail" : "(t: T, name: Names[T], d: DIF): Boolean", "member" : "scales.xml.xpath.NameFunctions.hasQName", "link" : "scales\/xml\/xpath\/NameFunctions.html#hasQName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):Boolean", "kind" : "def"}, {"label" : "name", "tail" : "(t: T)(iname: Names[T]): QName", "member" : "scales.xml.xpath.NameFunctions.name", "link" : "scales\/xml\/xpath\/NameFunctions.html#name[T](t:T)(implicitiname:scales.xml.xpath.Names[T]):scales.xml.QName", "kind" : "def"}, {"label" : "name", "tail" : "(t: T, name: Names[T], d: DIF): QName", "member" : "scales.xml.xpath.NameFunctions.name", "link" : "scales\/xml\/xpath\/NameFunctions.html#name[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):scales.xml.QName", "kind" : "def"}, {"label" : "qName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.qName", "link" : "scales\/xml\/xpath\/NameFunctions.html#qName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "qName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.qName", "link" : "scales\/xml\/xpath\/NameFunctions.html#qName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "qname", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.qname", "link" : "scales\/xml\/xpath\/NameFunctions.html#qname[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "qname", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.qname", "link" : "scales\/xml\/xpath\/NameFunctions.html#qname[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "isEquivalent", "tail" : "(qname: QName)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.isEquivalent", "link" : "scales\/xml\/xpath\/NameFunctions.html#isEquivalent[T](qname:scales.xml.QName)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "isExactly", "tail" : "(qname: QName)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.isExactly", "link" : "scales\/xml\/xpath\/NameFunctions.html#isExactly[T](qname:scales.xml.QName)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "hasLocalName", "tail" : "(localName: String)(name: Names[T]): (T) ⇒ Boolean", "member" : "scales.xml.xpath.NameFunctions.hasLocalName", "link" : "scales\/xml\/xpath\/NameFunctions.html#hasLocalName[T](localName:String)(implicitname:scales.xml.xpath.Names[T]):T=>Boolean", "kind" : "def"}, {"label" : "localName", "tail" : "(t: T)(name: Names[T]): String", "member" : "scales.xml.xpath.NameFunctions.localName", "link" : "scales\/xml\/xpath\/NameFunctions.html#localName[T](t:T)(implicitname:scales.xml.xpath.Names[T]):String", "kind" : "def"}, {"label" : "localName", "tail" : "(t: T, name: Names[T], d: DIF): String", "member" : "scales.xml.xpath.NameFunctions.localName", "link" : "scales\/xml\/xpath\/NameFunctions.html#localName[T](implicitt:T,implicitname:scales.xml.xpath.Names[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/NameFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/NameFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/NameFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/NameFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/NameFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/NameFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/NameFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/NameFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/NameFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/NameFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/NameFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/NameFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/NameFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/NameFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/NameFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/NameFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/NameFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/NameFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/NameFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Functions providing access to QNames", "trait" : "scales\/xml\/xpath\/NameFunctions.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.Names", "members_trait" : [{"label" : "flatName", "tail" : "(t: T): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/Names.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Names.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Names.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Names.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Names.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Names.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Names.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Names.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Names.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Names.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Names.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Names.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Names.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/Names.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Names.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Names.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Names.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Names.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Names.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Names.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "name", "tail" : "(t: T): Option[QName]", "member" : "scales.xml.xpath.Names.name", "link" : "scales\/xml\/xpath\/Names.html#name(implicitt:T):Option[scales.xml.QName]", "kind" : "abstract def"}], "shortDescription" : "Type class representing Xml objects which provide qnames.", "trait" : "scales\/xml\/xpath\/Names.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.NamesImplicits", "members_trait" : [{"label" : "xpathToNames", "tail" : "(): Names[XPath[T]]", "member" : "scales.xml.xpath.NamesImplicits.xpathToNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#xpathToNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsNames", "tail" : "(): Names[AttributePaths[T]]", "member" : "scales.xml.xpath.NamesImplicits.attribPathsNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#attribPathsNames[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.Names[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslNames", "tail" : ": DslNames.type", "member" : "scales.xml.xpath.NamesImplicits.dslNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#dslNames:scales.xml.xpath.DslNames.type", "kind" : "implicit val"}, {"label" : "aqnameNames", "tail" : ": AQNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.aqnameNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#aqnameNames:scales.xml.xpath.AQNameNames.type", "kind" : "implicit val"}, {"label" : "qnameNames", "tail" : ": QNameNames.type", "member" : "scales.xml.xpath.NamesImplicits.qnameNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#qnameNames:scales.xml.xpath.QNameNames.type", "kind" : "implicit val"}, {"label" : "xtreeNames", "tail" : ": XmlTreeNames.type", "member" : "scales.xml.xpath.NamesImplicits.xtreeNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#xtreeNames:scales.xml.xpath.XmlTreeNames.type", "kind" : "implicit val"}, {"label" : "elemNames", "tail" : ": ElemNames.type", "member" : "scales.xml.xpath.NamesImplicits.elemNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#elemNames:scales.xml.xpath.ElemNames.type", "kind" : "implicit val"}, {"label" : "xpathNames", "tail" : ": XmlPathNames.type", "member" : "scales.xml.xpath.NamesImplicits.xpathNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#xpathNames:scales.xml.xpath.XmlPathNames.type", "kind" : "implicit val"}, {"label" : "attributePathNames", "tail" : ": AttributePathNames.type", "member" : "scales.xml.xpath.NamesImplicits.attributePathNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#attributePathNames:scales.xml.xpath.AttributePathNames.type", "kind" : "implicit val"}, {"label" : "attribNames", "tail" : ": AttributeNames.type", "member" : "scales.xml.xpath.NamesImplicits.attribNames", "link" : "scales\/xml\/xpath\/NamesImplicits.html#attribNames:scales.xml.xpath.AttributeNames.type", "kind" : "implicit val"}, {"label" : "dif", "tail" : ": DIF", "member" : "scales.xml.xpath.NamesImplicits.dif", "link" : "scales\/xml\/xpath\/NamesImplicits.html#dif:scales.xml.xpath.DIF", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/NamesImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/NamesImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/NamesImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/NamesImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/NamesImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/NamesImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/NamesImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/NamesImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/NamesImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/NamesImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/NamesImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/NamesImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/NamesImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/NamesImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/NamesImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/NamesImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/NamesImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/NamesImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/NamesImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Name type classes", "trait" : "scales\/xml\/xpath\/NamesImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.OtherNodeTypes", "members_trait" : [{"label" : "pi", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.pi", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#pi:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "comment", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.comment", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#comment:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "cdata", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.cdata", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#cdata:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "text", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.text", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#text:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "textOnly", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.textOnly", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#textOnly:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.just", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.empty", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.newThis", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "abstract def"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.Axis.path", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#path:scales.xml.xpath.XPathInfo", "kind" : "abstract val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[T, xml.XmlPath, T]", "member" : "scales.xml.xpath.Axis.cbf", "link" : "scales\/xml\/xpath\/OtherNodeTypes.html#cbf:scala.collection.generic.CanBuildFrom[Axis.this.T,scales.xml.XmlPath,Axis.this.T]", "kind" : "abstract val"}, {"member" : "scales.xml.xpath.Axis.T", "error" : "unsupported entity"}], "shortDescription" : "Little depature from standard, rather than duplicate all of the \\ and \\\\ nodes, just a simple \\\\*() comment() will do", "trait" : "scales\/xml\/xpath\/OtherNodeTypes.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.PositionalEquals", "shortDescription" : "", "object" : "scales\/xml\/xpath\/PositionalEquals$.html", "members_object" : [{"label" : "xpathPositionalEqual", "tail" : ": Equal[Path[XmlItem, Elem, xml.XCC]]", "member" : "scales.xml.xpath.PositionalEquals.xpathPositionalEqual", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#xpathPositionalEqual:scalaz.Equal[scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/PositionalEquals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/PositionalEquals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.Preceding", "shortDescription" : "Iterates over paths using reverse document order and, as per the preceding_:: axis, skips all ancestors.", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scales\/xml\/xpath\/Preceding.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Path[XmlItem, Elem, xml.XCC]]", "member" : "scales.xml.xpath.Preceding.iterator", "link" : "scales\/xml\/xpath\/Preceding.html#iterator:Iterator[scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]]", "kind" : "def"}, {"label" : "parents", "tail" : ": Ancestors", "member" : "scales.xml.xpath.Preceding.parents", "link" : "scales\/xml\/xpath\/Preceding.html#parents:scales.xml.xpath.Ancestors", "kind" : "val"}, {"label" : "p", "tail" : ": Option[Path[XmlItem, Elem, xml.XCC]]", "member" : "scales.xml.xpath.Preceding.p", "link" : "scales\/xml\/xpath\/Preceding.html#p:Option[scales.utils.collection.path.Path[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]]", "kind" : "val"}, {"member" : "scales.xml.xpath.Preceding#<init>", "error" : "unsupported entity"}, {"label" : "initial", "tail" : ": xml.XmlPath", "member" : "scales.xml.xpath.Preceding.initial", "link" : "scales\/xml\/xpath\/Preceding.html#initial:scales.xml.XmlPath", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.Iterable.seq", "link" : "scales\/xml\/xpath\/Preceding.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "scales\/xml\/xpath\/Preceding.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/xml\/xpath\/Preceding.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.view", "link" : "scales\/xml\/xpath\/Preceding.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scales\/xml\/xpath\/Preceding.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[xml.XmlPath]", "member" : "scala.collection.IterableLike.toStream", "link" : "scales\/xml\/xpath\/Preceding.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "scales\/xml\/xpath\/Preceding.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "scales\/xml\/xpath\/Preceding.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scales\/xml\/xpath\/Preceding.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "scales\/xml\/xpath\/Preceding.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "scales\/xml\/xpath\/Preceding.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.dropRight", "link" : "scales\/xml\/xpath\/Preceding.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.takeRight", "link" : "scales\/xml\/xpath\/Preceding.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/xml\/xpath\/Preceding.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scales\/xml\/xpath\/Preceding.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scales\/xml\/xpath\/Preceding.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "scales\/xml\/xpath\/Preceding.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.drop", "link" : "scales\/xml\/xpath\/Preceding.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.take", "link" : "scales\/xml\/xpath\/Preceding.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.slice", "link" : "scales\/xml\/xpath\/Preceding.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): xml.XmlPath", "member" : "scala.collection.IterableLike.head", "link" : "scales\/xml\/xpath\/Preceding.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[xml.XmlPath]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scales\/xml\/xpath\/Preceding.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scales\/xml\/xpath\/Preceding.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "scales\/xml\/xpath\/Preceding.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "scales\/xml\/xpath\/Preceding.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "scales\/xml\/xpath\/Preceding.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Option[xml.XmlPath]", "member" : "scala.collection.IterableLike.find", "link" : "scales\/xml\/xpath\/Preceding.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "scales\/xml\/xpath\/Preceding.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "scales\/xml\/xpath\/Preceding.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (xml.XmlPath) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "scales\/xml\/xpath\/Preceding.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[xml.XmlPath]): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.toCollection", "link" : "scales\/xml\/xpath\/Preceding.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "scales\/xml\/xpath\/Preceding.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scales\/xml\/xpath\/Preceding.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (xml.XmlPath) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scales\/xml\/xpath\/Preceding.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (xml.XmlPath) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scales\/xml\/xpath\/Preceding.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (xml.XmlPath) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scales\/xml\/xpath\/Preceding.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scales\/xml\/xpath\/Preceding.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "scales\/xml\/xpath\/Preceding.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): FilterMonadic[xml.XmlPath, Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scales\/xml\/xpath\/Preceding.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "scales\/xml\/xpath\/Preceding.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "scales\/xml\/xpath\/Preceding.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, xml.XmlPath, Col[xml.XmlPath]]): Col[xml.XmlPath]", "member" : "scala.collection.TraversableLike.to", "link" : "scales\/xml\/xpath\/Preceding.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scales\/xml\/xpath\/Preceding.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scales\/xml\/xpath\/Preceding.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scales\/xml\/xpath\/Preceding.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "scales\/xml\/xpath\/Preceding.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.span", "link" : "scales\/xml\/xpath\/Preceding.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "scales\/xml\/xpath\/Preceding.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.init", "link" : "scales\/xml\/xpath\/Preceding.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[xml.XmlPath]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scales\/xml\/xpath\/Preceding.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): xml.XmlPath", "member" : "scala.collection.TraversableLike.last", "link" : "scales\/xml\/xpath\/Preceding.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.tail", "link" : "scales\/xml\/xpath\/Preceding.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[xml.XmlPath]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scales\/xml\/xpath\/Preceding.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scales\/xml\/xpath\/Preceding.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scales\/xml\/xpath\/Preceding.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scales\/xml\/xpath\/Preceding.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (xml.XmlPath) ⇒ K): Map[K, Iterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scales\/xml\/xpath\/Preceding.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): (Iterable[xml.XmlPath], Iterable[xml.XmlPath])", "member" : "scala.collection.TraversableLike.partition", "link" : "scales\/xml\/xpath\/Preceding.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[xml.XmlPath, B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scales\/xml\/xpath\/Preceding.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scales\/xml\/xpath\/Preceding.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.filter", "link" : "scales\/xml\/xpath\/Preceding.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (xml.XmlPath) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scales\/xml\/xpath\/Preceding.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (xml.XmlPath) ⇒ B)(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scales\/xml\/xpath\/Preceding.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/xml\/xpath\/Preceding.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scales\/xml\/xpath\/Preceding.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[xml.XmlPath], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scales\/xml\/xpath\/Preceding.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scales\/xml\/xpath\/Preceding.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[xml.XmlPath, ParIterable[xml.XmlPath]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "scales\/xml\/xpath\/Preceding.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scales\/xml\/xpath\/Preceding.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scala.collection.TraversableLike.repr", "link" : "scales\/xml\/xpath\/Preceding.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scales\/xml\/xpath\/Preceding.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[xml.XmlPath]", "member" : "scala.collection.Parallelizable.par", "link" : "scales\/xml\/xpath\/Preceding.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Preceding.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Preceding.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scales\/xml\/xpath\/Preceding.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Preceding.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Preceding.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scales\/xml\/xpath\/Preceding.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[xml.XmlPath, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scales\/xml\/xpath\/Preceding.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scales\/xml\/xpath\/Preceding.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scales\/xml\/xpath\/Preceding.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "scales\/xml\/xpath\/Preceding.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scales\/xml\/xpath\/Preceding.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "scales\/xml\/xpath\/Preceding.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scales\/xml\/xpath\/Preceding.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scales\/xml\/xpath\/Preceding.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/xpath\/Preceding.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scales\/xml\/xpath\/Preceding.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scales\/xml\/xpath\/Preceding.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scales\/xml\/xpath\/Preceding.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (xml.XmlPath) ⇒ B)(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scales\/xml\/xpath\/Preceding.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.max", "link" : "scales\/xml\/xpath\/Preceding.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): xml.XmlPath", "member" : "scala.collection.TraversableOnce.min", "link" : "scales\/xml\/xpath\/Preceding.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scales\/xml\/xpath\/Preceding.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scales\/xml\/xpath\/Preceding.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, xml.XmlPath) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scales\/xml\/xpath\/Preceding.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scales\/xml\/xpath\/Preceding.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scales\/xml\/xpath\/Preceding.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scales\/xml\/xpath\/Preceding.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (xml.XmlPath, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scales\/xml\/xpath\/Preceding.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, xml.XmlPath) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scales\/xml\/xpath\/Preceding.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "scales\/xml\/xpath\/Preceding.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "scales\/xml\/xpath\/Preceding.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (xml.XmlPath, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scales\/xml\/xpath\/Preceding.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, xml.XmlPath) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scales\/xml\/xpath\/Preceding.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[xml.XmlPath, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scales\/xml\/xpath\/Preceding.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (xml.XmlPath) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scales\/xml\/xpath\/Preceding.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scales\/xml\/xpath\/Preceding.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "scales\/xml\/xpath\/Preceding.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[xml.XmlPath]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scales\/xml\/xpath\/Preceding.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "scales\/xml\/xpath\/Preceding.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/Preceding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/Preceding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/Preceding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/Preceding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/Preceding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/Preceding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/Preceding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Preceding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Preceding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/Preceding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/Preceding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/Preceding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/Preceding.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/Preceding.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/Preceding.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/Preceding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/Preceding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/Preceding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/xpath\/Preceding.html", "kind" : "class"}, {"name" : "scales.xml.xpath.QNameNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/QNameNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: QName): Option[QName]", "member" : "scales.xml.xpath.QNameNames.name", "link" : "scales\/xml\/xpath\/QNameNames$.html#name(implicitt:scales.xml.QName):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: QName): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/QNameNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/QNameNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/QNameNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/QNameNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/QNameNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/QNameNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/QNameNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/QNameNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/QNameNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/QNameNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/QNameNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/QNameNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/QNameNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/QNameNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/QNameNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/QNameNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/QNameNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/QNameNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/QNameNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/QNameNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.SiblingsAxis", "members_trait" : [{"label" : "following_sibling_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.SiblingsAxis.following_sibling_::", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#following_sibling_:::scales.xml.xpath.XPath[SiblingsAxis.this.T]", "kind" : "def"}, {"label" : "preceding_sibling_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.SiblingsAxis.preceding_sibling_::", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#preceding_sibling_:::scales.xml.xpath.XPath[SiblingsAxis.this.T]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/SiblingsAxis.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.just", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.Axis.empty", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "abstract def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.newThis", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "abstract def"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.Axis.path", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#path:scales.xml.xpath.XPathInfo", "kind" : "abstract val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[T, xml.XmlPath, T]", "member" : "scales.xml.xpath.Axis.cbf", "link" : "scales\/xml\/xpath\/SiblingsAxis.html#cbf:scala.collection.generic.CanBuildFrom[Axis.this.T,scales.xml.XmlPath,Axis.this.T]", "kind" : "abstract val"}, {"member" : "scales.xml.xpath.Axis.T", "error" : "unsupported entity"}], "shortDescription" : "Unlike XPath spec no reverse axis are directly provided by the dsl", "trait" : "scales\/xml\/xpath\/SiblingsAxis.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.TextFunctions", "members_trait" : [{"label" : "normalizeSpace", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.normalizeSpace", "link" : "scales\/xml\/xpath\/TextFunctions.html#normalizeSpace[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "value", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.value", "link" : "scales\/xml\/xpath\/TextFunctions.html#value[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "string", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.string", "link" : "scales\/xml\/xpath\/TextFunctions.html#string[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "text", "tail" : "(t: T)(value: TextValue[T]): String", "member" : "scales.xml.xpath.TextFunctions.text", "link" : "scales\/xml\/xpath\/TextFunctions.html#text[T](t:T)(implicitvalue:scales.xml.xpath.TextValue[T]):String", "kind" : "def"}, {"label" : "normalizeSpace", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.normalizeSpace", "link" : "scales\/xml\/xpath\/TextFunctions.html#normalizeSpace[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "value", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.value", "link" : "scales\/xml\/xpath\/TextFunctions.html#value[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "string", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.string", "link" : "scales\/xml\/xpath\/TextFunctions.html#string[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "text", "tail" : "(t: T, value: TextValue[T], d: DIF): String", "member" : "scales.xml.xpath.TextFunctions.text", "link" : "scales\/xml\/xpath\/TextFunctions.html#text[T](implicitt:T,implicitvalue:scales.xml.xpath.TextValue[T],implicitd:scales.xml.xpath.DIF):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/TextFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/TextFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/TextFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/TextFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/TextFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/TextFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/TextFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/TextFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/TextFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/TextFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/TextFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/TextFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/TextFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/TextFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/TextFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/TextFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/xpath\/TextFunctions.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.TextImplicits", "members_trait" : [{"label" : "xpathToTextValue", "tail" : "(): TextValue[XPath[T]]", "member" : "scales.xml.xpath.TextImplicits.xpathToTextValue", "link" : "scales\/xml\/xpath\/TextImplicits.html#xpathToTextValue[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.XPath[T]]", "kind" : "implicit def"}, {"label" : "attribPathsText", "tail" : "(): TextValue[AttributePaths[T]]", "member" : "scales.xml.xpath.TextImplicits.attribPathsText", "link" : "scales\/xml\/xpath\/TextImplicits.html#attribPathsText[T<:Iterable[scales.xml.XmlPath]]:scales.xml.xpath.TextValue[scales.xml.xpath.AttributePaths[T]]", "kind" : "implicit def"}, {"label" : "dslText", "tail" : ": DslText.type", "member" : "scales.xml.xpath.TextImplicits.dslText", "link" : "scales\/xml\/xpath\/TextImplicits.html#dslText:scales.xml.xpath.DslText.type", "kind" : "implicit val"}, {"label" : "itemOrElemText", "tail" : ": ItemOrElemText.type", "member" : "scales.xml.xpath.TextImplicits.itemOrElemText", "link" : "scales\/xml\/xpath\/TextImplicits.html#itemOrElemText:scales.xml.xpath.ItemOrElemText.type", "kind" : "implicit val"}, {"label" : "itemText", "tail" : ": XmlItemText.type", "member" : "scales.xml.xpath.TextImplicits.itemText", "link" : "scales\/xml\/xpath\/TextImplicits.html#itemText:scales.xml.xpath.XmlItemText.type", "kind" : "implicit val"}, {"label" : "xmlpathText", "tail" : ": XmlPathText.type", "member" : "scales.xml.xpath.TextImplicits.xmlpathText", "link" : "scales\/xml\/xpath\/TextImplicits.html#xmlpathText:scales.xml.xpath.XmlPathText.type", "kind" : "implicit val"}, {"label" : "attribPathText", "tail" : ": AttributePathText.type", "member" : "scales.xml.xpath.TextImplicits.attribPathText", "link" : "scales\/xml\/xpath\/TextImplicits.html#attribPathText:scales.xml.xpath.AttributePathText.type", "kind" : "implicit val"}, {"label" : "attribText", "tail" : ": AttributeText.type", "member" : "scales.xml.xpath.TextImplicits.attribText", "link" : "scales\/xml\/xpath\/TextImplicits.html#attribText:scales.xml.xpath.AttributeText.type", "kind" : "implicit val"}, {"label" : "xtreeText", "tail" : ": XmlTreeText.type", "member" : "scales.xml.xpath.TextImplicits.xtreeText", "link" : "scales\/xml\/xpath\/TextImplicits.html#xtreeText:scales.xml.xpath.XmlTreeText.type", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/TextImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/TextImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/TextImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/TextImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/TextImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/TextImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/TextImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/TextImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/TextImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/TextImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/TextImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/TextImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/TextImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/TextImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/TextImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/TextImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/xpath\/TextImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.TextValue", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/TextValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/TextValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/TextValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/TextValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/TextValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/TextValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/TextValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextValue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/TextValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/TextValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/TextValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/TextValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/TextValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/TextValue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/TextValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/TextValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/TextValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/TextValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "text", "tail" : "(t: T): String", "member" : "scales.xml.xpath.TextValue.text", "link" : "scales\/xml\/xpath\/TextValue.html#text(implicitt:T):String", "kind" : "abstract def"}], "shortDescription" : "Type class for text values", "trait" : "scales\/xml\/xpath\/TextValue.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.XmlItemText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XmlItemText$.html", "members_object" : [{"label" : "text", "tail" : "(a: XmlItem): String", "member" : "scales.xml.xpath.XmlItemText.text", "link" : "scales\/xml\/xpath\/XmlItemText$.html#text(implicita:scales.xml.XmlItem):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlItemText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlItemText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlItemText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlItemText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlItemText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlItemText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlItemText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlItemText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlItemText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlItemText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlItemText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlItemText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlItemText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlItemText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlItemText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlItemText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlItemText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlItemText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlItemText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.XmlPathComparisoms", "shortDescription" : "", "members_case class" : [{"label" : "===", "tail" : "(other: String): Boolean", "member" : "scales.xml.xpath.XmlPathComparisoms.===", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#===(other:String):Boolean", "kind" : "def"}, {"member" : "scales.xml.xpath.XmlPathComparisoms#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": xml.XmlPath", "member" : "scales.xml.xpath.XmlPathComparisoms.path", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#path:scales.xml.XmlPath", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathComparisoms.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/xpath\/XmlPathComparisoms.html", "kind" : "case class"}, {"name" : "scales.xml.xpath.XmlPathImplicits", "members_trait" : [{"label" : "BooleanToBoolean", "tail" : ": (Boolean) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.BooleanToBoolean", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#BooleanToBoolean:Boolean=>Boolean", "kind" : "implicit val"}, {"label" : "NumberToBoolean", "tail" : ": (Number) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.NumberToBoolean", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#NumberToBoolean:Number=>Boolean", "kind" : "implicit val"}, {"label" : "StringToBoolean", "tail" : ": (String) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.StringToBoolean", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#StringToBoolean:String=>Boolean", "kind" : "implicit val"}, {"label" : "IterableToBoolean", "tail" : ": (Iterable[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.IterableToBoolean", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#IterableToBoolean:Iterable[_]=>Boolean", "kind" : "implicit val"}, {"label" : "AttributePathsToBoolean", "tail" : ": (AttributePaths[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.AttributePathsToBoolean", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#AttributePathsToBoolean:scales.xml.xpath.AttributePaths[_]=>Boolean", "kind" : "implicit val"}, {"label" : "XPathToBoolean", "tail" : ": (XPath[_]) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.XPathToBoolean", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#XPathToBoolean:scales.xml.xpath.XPath[_]=>Boolean", "kind" : "implicit val"}, {"label" : "fromAPathToAComparisoms", "tail" : "(path: AttributePath): AttributePathComparisoms", "member" : "scales.xml.xpath.XmlPathImplicits.fromAPathToAComparisoms", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#fromAPathToAComparisoms(path:scales.xml.xpath.AttributePath):scales.xml.xpath.AttributePathComparisoms", "kind" : "implicit def"}, {"label" : "fromPathToComparisoms", "tail" : "(path: xml.XmlPath): XmlPathComparisoms", "member" : "scales.xml.xpath.XmlPathImplicits.fromPathToComparisoms", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#fromPathToComparisoms(path:scales.xml.XmlPath):scales.xml.xpath.XmlPathComparisoms", "kind" : "implicit def"}, {"label" : "fromAttributePathsToIterable", "tail" : "(attrs: AttributePaths[T]): Iterable[AttributePath]", "member" : "scales.xml.xpath.XmlPathImplicits.fromAttributePathsToIterable", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#fromAttributePathsToIterable[T<:Iterable[scales.xml.XmlPath]](attrs:scales.xml.xpath.AttributePaths[T]):Iterable[scales.xml.xpath.AttributePath]", "kind" : "implicit def"}, {"label" : "fromXPathToIterable", "tail" : "(xpath: XPath[_]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XmlPathImplicits.fromXPathToIterable", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#fromXPathToIterable(xpath:scales.xml.xpath.XPath[_]):Iterable[scales.xml.XmlPath]", "kind" : "implicit def"}, {"label" : "fromXmlPathToXPath", "tail" : "(xmlPath: xml.XmlPath)(cbf: CanBuildFrom[List[xml.XmlPath], xml.XmlPath, List[xml.XmlPath]]): XPath[List[xml.XmlPath]]", "member" : "scales.xml.xpath.XmlPathImplicits.fromXmlPathToXPath", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#fromXmlPathToXPath(xmlPath:scales.xml.XmlPath)(implicitcbf:scala.collection.generic.CanBuildFrom[List[scales.xml.XmlPath],scales.xml.XmlPath,List[scales.xml.XmlPath]]):scales.xml.xpath.XPath[List[scales.xml.XmlPath]]", "kind" : "implicit def"}, {"label" : "fromAttrPathToAttribute", "tail" : "(attrPath: AttributePath): Attribute", "member" : "scales.xml.xpath.XmlPathImplicits.fromAttrPathToAttribute", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#fromAttrPathToAttribute(attrPath:scales.xml.xpath.AttributePath):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "samePath", "tail" : ": (xml.XmlPath, xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPathImplicits.samePath", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#samePath:(scales.xml.XmlPath,scales.xml.XmlPath)=>Boolean", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/xpath\/XmlPathImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.XmlPathNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XmlPathNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: xml.XmlPath): Option[QName]", "member" : "scales.xml.xpath.XmlPathNames.name", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#name(implicitt:scales.xml.XmlPath):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: xml.XmlPath): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlPathNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.XmlPaths", "members_trait" : [{"label" : "isElem", "tail" : ": (xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPaths.isElem", "link" : "scales\/xml\/xpath\/XmlPaths.html#isElem:scales.xml.XmlPath=>Boolean", "kind" : "val"}, {"label" : "isItem", "tail" : ": (xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPaths.isItem", "link" : "scales\/xml\/xpath\/XmlPaths.html#isItem:scales.xml.XmlPath=>Boolean", "kind" : "val"}, {"label" : "elem", "tail" : "(path: xml.XmlPath): Elem", "member" : "scales.xml.xpath.XmlPaths.elem", "link" : "scales\/xml\/xpath\/XmlPaths.html#elem(implicitpath:scales.xml.XmlPath):scales.xml.Elem", "kind" : "def"}, {"label" : "attributes", "tail" : "(path: xml.XmlPath): xml.Attributes", "member" : "scales.xml.xpath.XmlPaths.attributes", "link" : "scales\/xml\/xpath\/XmlPaths.html#attributes(implicitpath:scales.xml.XmlPath):scales.xml.Attributes", "kind" : "def"}, {"label" : "isText", "tail" : ": (xml.XmlPath) ⇒ Boolean", "member" : "scales.xml.xpath.XmlPaths.isText", "link" : "scales\/xml\/xpath\/XmlPaths.html#isText:scales.xml.XmlPath=>Boolean", "kind" : "val"}, {"label" : "eager", "tail" : "(xmlPath: xml.XmlPath)(cbf: CanBuildFrom[List[xml.XmlPath], xml.XmlPath, List[xml.XmlPath]]): XPath[List[xml.XmlPath]]", "member" : "scales.xml.xpath.XmlPaths.eager", "link" : "scales\/xml\/xpath\/XmlPaths.html#eager(xmlPath:scales.xml.XmlPath)(implicitcbf:scala.collection.generic.CanBuildFrom[List[scales.xml.XmlPath],scales.xml.XmlPath,List[scales.xml.XmlPath]]):scales.xml.xpath.XPath[List[scales.xml.XmlPath]]", "kind" : "def"}, {"label" : "viewed", "tail" : "(xmlPath: xml.XmlPath)(cbf: CanBuildFrom[List[xml.XmlPath], xml.XmlPath, List[xml.XmlPath]]): XPath[List[xml.XmlPath]]", "member" : "scales.xml.xpath.XmlPaths.viewed", "link" : "scales\/xml\/xpath\/XmlPaths.html#viewed(xmlPath:scales.xml.XmlPath)(implicitcbf:scala.collection.generic.CanBuildFrom[List[scales.xml.XmlPath],scales.xml.XmlPath,List[scales.xml.XmlPath]]):scales.xml.xpath.XPath[List[scales.xml.XmlPath]]", "kind" : "def"}, {"label" : "lazyRaw", "tail" : "(xpath: XPath[T]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XmlPaths.lazyRaw", "link" : "scales\/xml\/xpath\/XmlPaths.html#lazyRaw[T<:Iterable[scales.xml.XmlPath]](xpath:scales.xml.xpath.XPath[T]):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "raw", "tail" : "(xpath: XPath[T]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XmlPaths.raw", "link" : "scales\/xml\/xpath\/XmlPaths.html#raw[T<:Iterable[scales.xml.XmlPath]](xpath:scales.xml.xpath.XPath[T]):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlPaths.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlPaths.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlPaths.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlPaths.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlPaths.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlPaths.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlPaths.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPaths.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPaths.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPaths.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlPaths.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlPaths.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlPaths.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlPaths.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlPaths.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlPaths.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlPaths.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlPaths.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlPaths.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/xpath\/XmlPaths.html", "kind" : "trait"}, {"name" : "scales.xml.xpath.XmlPathText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XmlPathText$.html", "members_object" : [{"label" : "text", "tail" : "(t: xml.XmlPath): String", "member" : "scales.xml.xpath.XmlPathText.text", "link" : "scales\/xml\/xpath\/XmlPathText$.html#text(implicitt:scales.xml.XmlPath):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlPathText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlPathText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlPathText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlPathText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlPathText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlPathText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlPathText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlPathText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlPathText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlPathText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlPathText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlPathText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlPathText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlPathText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlPathText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlPathText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.XmlTreeNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XmlTreeNames$.html", "members_object" : [{"label" : "name", "tail" : "(t: xml.XmlTree): Option[QName]", "member" : "scales.xml.xpath.XmlTreeNames.name", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#name(implicitt:scales.xml.XmlTree):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: xml.XmlTree): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlTreeNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.XmlTreeText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XmlTreeText$.html", "members_object" : [{"label" : "text", "tail" : "(t: xml.XmlTree): String", "member" : "scales.xml.xpath.XmlTreeText.text", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#text(implicitt:scales.xml.XmlTree):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XmlTreeText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XmlTreeText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.XPath", "shortDescription" : "In contrast to the specs reverse axis are not supported.", "members_class" : [{"label" : "|", "tail" : "(other: XPath[T]): XPath[T]", "member" : "scales.xml.xpath.XPath.|", "link" : "scales\/xml\/xpath\/XPath.html#|(other:scales.xml.xpath.XPath[XPath.this.T]):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "oneOr", "tail" : "(handler: (XPath[T]) ⇒ Iterable[xml.XmlPath]): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.oneOr", "link" : "scales\/xml\/xpath\/XPath.html#oneOr(handler:scales.xml.xpath.XPath[XPath.this.T]=>Iterable[scales.xml.XmlPath]):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "one", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.one", "link" : "scales\/xml\/xpath\/XPath.html#one:Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "|>", "tail" : "(f: (XPath[T]) ⇒ XPath[T]): XPath[T]", "member" : "scales.xml.xpath.XPath.|>", "link" : "scales\/xml\/xpath\/XPath.html#|>(f:scales.xml.xpath.XPath[XPath.this.T]=>scales.xml.xpath.XPath[XPath.this.T]):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "in", "tail" : "(f: (XPath[T]) ⇒ XPath[T]): XPath[T]", "member" : "scales.xml.xpath.XPath.in", "link" : "scales\/xml\/xpath\/XPath.html#in(f:scales.xml.xpath.XPath[XPath.this.T]=>scales.xml.xpath.XPath[XPath.this.T]):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "just", "tail" : "(only: xml.XmlPath): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.just", "link" : "scales\/xml\/xpath\/XPath.html#just(only:scales.xml.XmlPath):Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Iterable[xml.XmlPath]", "member" : "scales.xml.xpath.XPath.empty", "link" : "scales\/xml\/xpath\/XPath.html#empty:Iterable[scales.xml.XmlPath]", "kind" : "def"}, {"label" : "newThis", "tail" : "(xpathInfo: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.XPath.newThis", "link" : "scales\/xml\/xpath\/XPath.html#newThis(xpathInfo:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[XPath.this.T]", "kind" : "def"}, {"label" : "T", "tail" : "", "member" : "scales.xml.xpath.XPath.T", "link" : "scales\/xml\/xpath\/XPath.html#T=PT", "kind" : "type"}, {"member" : "scales.xml.xpath.XPath#<init>", "error" : "unsupported entity"}, {"label" : "helper", "tail" : ": BuilderHelper[xml.XmlPath, PT]", "member" : "scales.xml.xpath.XPath.helper", "link" : "scales\/xml\/xpath\/XPath.html#helper:scales.utils.collection.BuilderHelper[scales.xml.XmlPath,PT]", "kind" : "implicit val"}, {"label" : "cbf", "tail" : ": CanBuildFrom[PT, xml.XmlPath, PT]", "member" : "scales.xml.xpath.XPath.cbf", "link" : "scales\/xml\/xpath\/XPath.html#cbf:scala.collection.generic.CanBuildFrom[PT,scales.xml.XmlPath,PT]", "kind" : "val"}, {"label" : "path", "tail" : ": XPathInfo", "member" : "scales.xml.xpath.XPath.path", "link" : "scales\/xml\/xpath\/XPath.html#path:scales.xml.xpath.XPathInfo", "kind" : "val"}, {"label" : "descendant_or_self_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.descendant_or_self_::", "link" : "scales\/xml\/xpath\/XPath.html#descendant_or_self_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "ancestor_or_self_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.ancestor_or_self_::", "link" : "scales\/xml\/xpath\/XPath.html#ancestor_or_self_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "ancestor_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.ancestor_::", "link" : "scales\/xml\/xpath\/XPath.html#ancestor_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "preceding_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.preceding_::", "link" : "scales\/xml\/xpath\/XPath.html#preceding_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "following_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.following_::", "link" : "scales\/xml\/xpath\/XPath.html#following_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "descendant_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.DocumentSplitters.descendant_::", "link" : "scales\/xml\/xpath\/XPath.html#descendant_:::scales.xml.xpath.XPath[DocumentSplitters.this.T]", "kind" : "def"}, {"label" : "following_sibling_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.SiblingsAxis.following_sibling_::", "link" : "scales\/xml\/xpath\/XPath.html#following_sibling_:::scales.xml.xpath.XPath[SiblingsAxis.this.T]", "kind" : "def"}, {"label" : "preceding_sibling_::", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.SiblingsAxis.preceding_sibling_::", "link" : "scales\/xml\/xpath\/XPath.html#preceding_sibling_:::scales.xml.xpath.XPath[SiblingsAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\\\@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\\\@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\\\@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\\\@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\\\@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\*:@", "tail" : "(local: String): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\*:@", "link" : "scales\/xml\/xpath\/XPath.html#\\*:@(local:String):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*:@", "tail" : "(local: String): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*:@", "link" : "scales\/xml\/xpath\/XPath.html#*:@(local:String):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "\\@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.\\@", "link" : "scales\/xml\/xpath\/XPath.html#\\@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(qname: UnprefixedQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/XPath.html#*@(qname:scales.xml.UnprefixedQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(attrQName: xml.AttributeQName): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/XPath.html#*@(attrQName:scales.xml.AttributeQName):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(pred: (AttributePath) ⇒ Boolean): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/XPath.html#*@(pred:scales.xml.xpath.AttributePath=>Boolean):scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "*@", "tail" : "(): AttributePaths[T]", "member" : "scales.xml.xpath.AttributeAxis.*@", "link" : "scales\/xml\/xpath\/XPath.html#*@:scales.xml.xpath.AttributePaths[AttributeAxis.this.T]", "kind" : "def"}, {"label" : "i_*@", "tail" : "(): Iterable[AttributePath]", "member" : "scales.xml.xpath.AttributeAxis.i_*@", "link" : "scales\/xml\/xpath\/XPath.html#i_*@:Iterable[scales.xml.xpath.AttributePath]", "kind" : "def"}, {"label" : "pi", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.pi", "link" : "scales\/xml\/xpath\/XPath.html#pi:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "comment", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.comment", "link" : "scales\/xml\/xpath\/XPath.html#comment:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "cdata", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.cdata", "link" : "scales\/xml\/xpath\/XPath.html#cdata:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "text", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.text", "link" : "scales\/xml\/xpath\/XPath.html#text:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "textOnly", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.OtherNodeTypes.textOnly", "link" : "scales\/xml\/xpath\/XPath.html#textOnly:scales.xml.xpath.XPath[OtherNodeTypes.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\\\*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\\\*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*:*", "link" : "scales\/xml\/xpath\/XPath.html#\\\\*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\\\*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\\\*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\\\*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/XPath.html#*:scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(pos: Int): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/XPath.html#*(pos:Int):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/XPath.html#*(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*:*", "link" : "scales\/xml\/xpath\/XPath.html#\\*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*:*", "tail" : "(local: String): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*:*", "link" : "scales\/xml\/xpath\/XPath.html#*:*(local:String):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "\\*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.\\*", "link" : "scales\/xml\/xpath\/XPath.html#\\*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "*", "tail" : "(qname: QName): XPath[T]", "member" : "scales.xml.xpath.ElementStep.*", "link" : "scales\/xml\/xpath\/XPath.html#*(qname:scales.xml.QName):scales.xml.xpath.XPath[ElementStep.this.T]", "kind" : "def"}, {"label" : "===", "tail" : "(textValue: ⇒ String): XPath[T]", "member" : "scales.xml.xpath.Axis.===", "link" : "scales\/xml\/xpath\/XPath.html#===(textValue:=>String):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(pred: (xml.XmlPath) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.filter", "link" : "scales\/xml\/xpath\/XPath.html#filter(pred:scales.xml.XmlPath=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xmap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[xml.XmlPath]): XPath[T]", "member" : "scales.xml.xpath.Axis.xmap", "link" : "scales\/xml\/xpath\/XPath.html#xmap(f:Iterable[scales.xml.XmlPath]=>Iterable[scales.xml.XmlPath]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "\\\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\\\", "link" : "scales\/xml\/xpath\/XPath.html#\\\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\+", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\+", "link" : "scales\/xml\/xpath\/XPath.html#\\+:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\", "link" : "scales\/xml\/xpath\/XPath.html#\\:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "\\^", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.\\^", "link" : "scales\/xml\/xpath\/XPath.html#\\^:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos", "link" : "scales\/xml\/xpath\/XPath.html#pos(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_==", "tail" : "(p: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_==", "link" : "scales\/xml\/xpath\/XPath.html#pos_==(p:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_<", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_<", "link" : "scales\/xml\/xpath\/XPath.html#pos_<(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_>", "tail" : "(pos: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_>", "link" : "scales\/xml\/xpath\/XPath.html#pos_>(pos:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "pos_eq_last", "tail" : "(): XPath[T]", "member" : "scales.xml.xpath.Axis.pos_eq_last", "link" : "scales\/xml\/xpath\/XPath.html#pos_eq_last:scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_==", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_==", "link" : "scales\/xml\/xpath\/XPath.html#last_==(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_<", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_<", "link" : "scales\/xml\/xpath\/XPath.html#last_<(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "last_>", "tail" : "(n: ⇒ Int): XPath[T]", "member" : "scales.xml.xpath.Axis.last_>", "link" : "scales\/xml\/xpath\/XPath.html#last_>(n:=>Int):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "xlast", "tail" : "(onN: (Int) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xlast", "link" : "scales\/xml\/xpath\/XPath.html#xlast(onN:Int=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xfilter", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Boolean): XPath[T]", "member" : "scales.xml.xpath.Axis.xfilter", "link" : "scales\/xml\/xpath\/XPath.html#xfilter(f:Iterable[scales.xml.XmlPath]=>Boolean):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "xflatMap", "tail" : "(f: (Iterable[xml.XmlPath]) ⇒ Iterable[Iterable[xml.XmlPath]]): XPath[T]", "member" : "scales.xml.xpath.Axis.xflatMap", "link" : "scales\/xml\/xpath\/XPath.html#xflatMap(f:Iterable[scales.xml.XmlPath]=>Iterable[Iterable[scales.xml.XmlPath]]):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "final def"}, {"label" : "process", "tail" : "(newNodes: Iterable[Iterable[xml.XmlPath]], info: XPathInfo): XPath[T]", "member" : "scales.xml.xpath.Axis.process", "link" : "scales\/xml\/xpath\/XPath.html#process(newNodes:Iterable[Iterable[scales.xml.XmlPath]],info:scales.xml.xpath.XPathInfo):scales.xml.xpath.XPath[Axis.this.T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XPath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XPath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XPath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XPath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XPath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/xpath\/XPath.html", "kind" : "class"}, {"name" : "scales.xml.xpath.XPathInfo", "shortDescription" : "XPaths need sorting upon unions etc, and duplicate filtering on \\^ parents", "members_case class" : [{"member" : "scales.xml.xpath.XPathInfo#<init>", "error" : "unsupported entity"}, {"label" : "direct", "tail" : ": Boolean", "member" : "scales.xml.xpath.XPathInfo.direct", "link" : "scales\/xml\/xpath\/XPathInfo.html#direct:Boolean", "kind" : "val"}, {"label" : "eager", "tail" : ": Boolean", "member" : "scales.xml.xpath.XPathInfo.eager", "link" : "scales\/xml\/xpath\/XPathInfo.html#eager:Boolean", "kind" : "val"}, {"label" : "initialNode", "tail" : ": Boolean", "member" : "scales.xml.xpath.XPathInfo.initialNode", "link" : "scales\/xml\/xpath\/XPathInfo.html#initialNode:Boolean", "kind" : "val"}, {"label" : "filterDuplicates", "tail" : ": Boolean", "member" : "scales.xml.xpath.XPathInfo.filterDuplicates", "link" : "scales\/xml\/xpath\/XPathInfo.html#filterDuplicates:Boolean", "kind" : "val"}, {"label" : "mustBeSorted", "tail" : ": Boolean", "member" : "scales.xml.xpath.XPathInfo.mustBeSorted", "link" : "scales\/xml\/xpath\/XPathInfo.html#mustBeSorted:Boolean", "kind" : "val"}, {"label" : "nodes", "tail" : ": Iterable[Iterable[xml.XmlPath]]", "member" : "scales.xml.xpath.XPathInfo.nodes", "link" : "scales\/xml\/xpath\/XPathInfo.html#nodes:Iterable[Iterable[scales.xml.XmlPath]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XPathInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XPathInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XPathInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XPathInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XPathInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XPathInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XPathInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XPathInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XPathInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XPathInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XPathInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XPathInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XPathInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/xpath\/XPathInfo.html", "kind" : "case class"}, {"name" : "scales.xml.xpath.XPathNames", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XPathNames$.html", "members_object" : [{"label" : "name", "tail" : "(a: XPath[_]): Option[QName]", "member" : "scales.xml.xpath.XPathNames.name", "link" : "scales\/xml\/xpath\/XPathNames$.html#name(implicita:scales.xml.xpath.XPath[_]):Option[scales.xml.QName]", "kind" : "def"}, {"label" : "flatName", "tail" : "(t: XPath[_]): QName", "member" : "scales.xml.xpath.Names.flatName", "link" : "scales\/xml\/xpath\/XPathNames$.html#flatName(implicitt:T):scales.xml.QName", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XPathNames$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XPathNames$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XPathNames$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XPathNames$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XPathNames$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XPathNames$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XPathNames$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathNames$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathNames$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathNames$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XPathNames$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XPathNames$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XPathNames$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XPathNames$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XPathNames$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XPathNames$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XPathNames$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XPathNames$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XPathNames$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.xml.xpath.XPathText", "shortDescription" : "", "object" : "scales\/xml\/xpath\/XPathText$.html", "members_object" : [{"label" : "text", "tail" : "(a: XPath[_]): String", "member" : "scales.xml.xpath.XPathText.text", "link" : "scales\/xml\/xpath\/XPathText$.html#text(implicita:scales.xml.xpath.XPath[_]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/xpath\/XPathText$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/xpath\/XPathText$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/xpath\/XPathText$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/xpath\/XPathText$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/xpath\/XPathText$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/xpath\/XPathText$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/xpath\/XPathText$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathText$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathText$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/xpath\/XPathText$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/xpath\/XPathText$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/xpath\/XPathText$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/xpath\/XPathText$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/xpath\/XPathText$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/xpath\/XPathText$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/xpath\/XPathText$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/xpath\/XPathText$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/xpath\/XPathText$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/xpath\/XPathText$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scales.utils.io" : [{"name" : "scales.utils.io.AppendableWriter", "shortDescription" : "To provide a writer to LSSerializer (and anything else that wants it _)we need to wrap appendables.", "members_case class" : [{"label" : "write", "tail" : "(cbuf: Array[Char], off: Int, len: Int): Unit", "member" : "scales.utils.io.AppendableWriter.write", "link" : "scales\/utils\/io\/AppendableWriter.html#write(cbuf:Array[Char],off:Int,len:Int):Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "scales.utils.io.AppendableWriter.flush", "link" : "scales\/utils\/io\/AppendableWriter.html#flush():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "scales.utils.io.AppendableWriter.close", "link" : "scales\/utils\/io\/AppendableWriter.html#close():Unit", "kind" : "def"}, {"member" : "scales.utils.io.AppendableWriter#<init>", "error" : "unsupported entity"}, {"label" : "out", "tail" : ": Appendable", "member" : "scales.utils.io.AppendableWriter.out", "link" : "scales\/utils\/io\/AppendableWriter.html#out:Appendable", "kind" : "val"}, {"label" : "append", "tail" : "(arg0: Char): Writer", "member" : "java.io.Writer.append", "link" : "scales\/utils\/io\/AppendableWriter.html#append(x$1:Char):java.io.Writer", "kind" : "def"}, {"label" : "append", "tail" : "(arg0: CharSequence, arg1: Int, arg2: Int): Writer", "member" : "java.io.Writer.append", "link" : "scales\/utils\/io\/AppendableWriter.html#append(x$1:CharSequence,x$2:Int,x$3:Int):java.io.Writer", "kind" : "def"}, {"label" : "append", "tail" : "(arg0: CharSequence): Writer", "member" : "java.io.Writer.append", "link" : "scales\/utils\/io\/AppendableWriter.html#append(x$1:CharSequence):java.io.Writer", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: String, arg1: Int, arg2: Int): Unit", "member" : "java.io.Writer.write", "link" : "scales\/utils\/io\/AppendableWriter.html#write(x$1:String,x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: String): Unit", "member" : "java.io.Writer.write", "link" : "scales\/utils\/io\/AppendableWriter.html#write(x$1:String):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Array[Char]): Unit", "member" : "java.io.Writer.write", "link" : "scales\/utils\/io\/AppendableWriter.html#write(x$1:Array[Char]):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Int): Unit", "member" : "java.io.Writer.write", "link" : "scales\/utils\/io\/AppendableWriter.html#write(x$1:Int):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/AppendableWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/AppendableWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/AppendableWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/AppendableWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/AppendableWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/AppendableWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/AppendableWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/AppendableWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/AppendableWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/AppendableWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/AppendableWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/AppendableWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/AppendableWriter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/AppendableWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/AppendableWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/AppendableWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/io\/AppendableWriter.html", "kind" : "case class"}, {"name" : "scales.utils.io.ByteArrayPool", "shortDescription" : "Pools byte arrays", "members_class" : [{"label" : "create", "tail" : "(): Array[Byte]", "member" : "scales.utils.io.ByteArrayPool.create", "link" : "scales\/utils\/io\/ByteArrayPool.html#create:Array[Byte]", "kind" : "def"}, {"member" : "scales.utils.io.ByteArrayPool#<init>", "error" : "unsupported entity"}, {"label" : "byteArraySize", "tail" : ": Int", "member" : "scales.utils.io.ByteArrayPool.byteArraySize", "link" : "scales\/utils\/io\/ByteArrayPool.html#byteArraySize:Int", "kind" : "val"}, {"label" : "loan", "tail" : "(tThunk: (Array[Byte]) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/utils\/io\/ByteArrayPool.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): Array[Byte]", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/utils\/io\/ByteArrayPool.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: Array[Byte]): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/utils\/io\/ByteArrayPool.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): Array[Byte]", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/utils\/io\/ByteArrayPool.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/utils\/io\/ByteArrayPool.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/utils\/io\/ByteArrayPool.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ByteArrayPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ByteArrayPool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ByteArrayPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ByteArrayPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ByteArrayPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ByteArrayPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ByteArrayPool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ByteArrayPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ByteArrayPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ByteArrayPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ByteArrayPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ByteArrayPool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/ByteArrayPool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ByteArrayPool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/ByteArrayPool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/ByteArrayPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ByteArrayPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ByteArrayPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ByteArrayPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/io\/ByteArrayPool.html", "kind" : "class"}, {"name" : "scales.utils.io.Chunk", "shortDescription" : "A section of a Byte array.", "members_case class" : [{"member" : "scales.utils.io.Chunk#<init>", "error" : "unsupported entity"}, {"label" : "length", "tail" : ": Int", "member" : "scales.utils.io.Chunk.length", "link" : "scales\/utils\/io\/Chunk.html#length:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "scales.utils.io.Chunk.offset", "link" : "scales\/utils\/io\/Chunk.html#offset:Int", "kind" : "val"}, {"label" : "array", "tail" : ": Array[Byte]", "member" : "scales.utils.io.Chunk.array", "link" : "scales\/utils\/io\/Chunk.html#array:Array[Byte]", "kind" : "val"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEmpty", "link" : "scales\/utils\/io\/Chunk.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isEOF", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEOF", "link" : "scales\/utils\/io\/Chunk.html#isEOF:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/Chunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/Chunk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/Chunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/Chunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/Chunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/Chunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/Chunk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/Chunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/Chunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/Chunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/Chunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/Chunk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/Chunk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/Chunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/Chunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/Chunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/io\/Chunk.html", "kind" : "case class"}, {"name" : "scales.utils.io.DataChunk", "members_trait" : [{"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEmpty", "link" : "scales\/utils\/io\/DataChunk.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isEOF", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEOF", "link" : "scales\/utils\/io\/DataChunk.html#isEOF:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DataChunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DataChunk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DataChunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DataChunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DataChunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DataChunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DataChunk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DataChunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DataChunk.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DataChunk.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DataChunk.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DataChunk.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DataChunk.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DataChunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DataChunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DataChunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "scales.utils.io.DataChunk.length", "link" : "scales\/utils\/io\/DataChunk.html#length:Int", "kind" : "abstract def"}, {"label" : "offset", "tail" : "(): Int", "member" : "scales.utils.io.DataChunk.offset", "link" : "scales\/utils\/io\/DataChunk.html#offset:Int", "kind" : "abstract def"}, {"label" : "array", "tail" : "(): Array[Byte]", "member" : "scales.utils.io.DataChunk.array", "link" : "scales\/utils\/io\/DataChunk.html#array:Array[Byte]", "kind" : "abstract def"}], "shortDescription" : "Represents a chunk of data to feed into an async parser.", "trait" : "scales\/utils\/io\/DataChunk.html", "kind" : "trait"}, {"name" : "scales.utils.io.DataChunker", "members_trait" : [{"label" : "underlyingClosed", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunker.underlyingClosed", "link" : "scales\/utils\/io\/DataChunker.html#underlyingClosed:Boolean", "kind" : "def"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/utils\/io\/DataChunker.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/utils\/io\/DataChunker.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/utils\/io\/DataChunker.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DataChunker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DataChunker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DataChunker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DataChunker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DataChunker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DataChunker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DataChunker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DataChunker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DataChunker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DataChunker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DataChunker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DataChunker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DataChunker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DataChunker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DataChunker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DataChunker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nextChunk", "tail" : "(): DataChunk", "member" : "scales.utils.io.DataChunker.nextChunk", "link" : "scales\/utils\/io\/DataChunker.html#nextChunk:scales.utils.io.DataChunk", "kind" : "abstract def"}, {"label" : "ev", "tail" : ": DataChunkEvidence[T]", "member" : "scales.utils.io.DataChunker.ev", "link" : "scales\/utils\/io\/DataChunker.html#ev:scales.utils.io.DataChunkEvidence[T]", "kind" : "implicit abstract val"}, {"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.doClose", "link" : "scales\/utils\/io\/DataChunker.html#doClose:Unit", "kind" : "abstract def"}], "shortDescription" : "An abstraction over a stream that provides DataChunks", "trait" : "scales\/utils\/io\/DataChunker.html", "kind" : "trait"}, {"name" : "scales.utils.io.DataChunkEvidence", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DataChunkEvidence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DataChunkEvidence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DataChunkEvidence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DataChunkEvidence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DataChunkEvidence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DataChunkEvidence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DataChunkEvidence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunkEvidence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunkEvidence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunkEvidence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DataChunkEvidence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DataChunkEvidence.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DataChunkEvidence.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DataChunkEvidence.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DataChunkEvidence.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DataChunkEvidence.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DataChunkEvidence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DataChunkEvidence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DataChunkEvidence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scales\/utils\/io\/DataChunkEvidence$.html", "members_object" : [{"label" : "justDataChunk", "tail" : ": DataChunkEvidence[DataChunk]", "member" : "scales.utils.io.DataChunkEvidence.justDataChunk", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#justDataChunk:scales.utils.io.DataChunkEvidence[scales.utils.io.DataChunk]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DataChunkEvidence$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DataChunkEvidence$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scales\/utils\/io\/DataChunkEvidence.html", "kind" : "trait"}, {"name" : "scales.utils.io.DefaultBufferPool", "shortDescription" : "Default buffer pool backed by byte arrays", "object" : "scales\/utils\/io\/DefaultBufferPool$.html", "members_object" : [{"label" : "create", "tail" : "(): ByteBuffer", "member" : "scales.utils.io.JVMBufferPool.create", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#create:java.nio.ByteBuffer", "kind" : "def"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.io.JVMBufferPool.reduceSize", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "bufferSize", "tail" : ": Int", "member" : "scales.utils.io.JVMBufferPool.bufferSize", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#bufferSize:Int", "kind" : "val"}, {"label" : "loan", "tail" : "(tThunk: (ByteBuffer) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): ByteBuffer", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: ByteBuffer): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): ByteBuffer", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DefaultBufferPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DefaultBufferPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.io.DefaultByteArrayPool", "shortDescription" : "Default Byte Array pool with 8k chunks", "object" : "scales\/utils\/io\/DefaultByteArrayPool$.html", "members_object" : [{"label" : "create", "tail" : "(): Array[Byte]", "member" : "scales.utils.io.ByteArrayPool.create", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#create:Array[Byte]", "kind" : "def"}, {"label" : "byteArraySize", "tail" : ": Int", "member" : "scales.utils.io.ByteArrayPool.byteArraySize", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#byteArraySize:Int", "kind" : "val"}, {"label" : "loan", "tail" : "(tThunk: (Array[Byte]) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): Array[Byte]", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: Array[Byte]): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): Array[Byte]", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.resources.SimpleUnboundedPool.reduceSize", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#reduceSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DefaultByteArrayPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.io.DirectBufferPool", "shortDescription" : "ByteBuffer.allocateDirect(bufferSize) backed pool", "members_class" : [{"label" : "create", "tail" : "(): ByteBuffer", "member" : "scales.utils.io.DirectBufferPool.create", "link" : "scales\/utils\/io\/DirectBufferPool.html#create:java.nio.ByteBuffer", "kind" : "def"}, {"member" : "scales.utils.io.DirectBufferPool#<init>", "error" : "unsupported entity"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.io.DirectBufferPool.reduceSize", "link" : "scales\/utils\/io\/DirectBufferPool.html#reduceSize:Int", "kind" : "val"}, {"label" : "bufferSize", "tail" : ": Int", "member" : "scales.utils.io.DirectBufferPool.bufferSize", "link" : "scales\/utils\/io\/DirectBufferPool.html#bufferSize:Int", "kind" : "val"}, {"label" : "loan", "tail" : "(tThunk: (ByteBuffer) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/utils\/io\/DirectBufferPool.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): ByteBuffer", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/utils\/io\/DirectBufferPool.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: ByteBuffer): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/utils\/io\/DirectBufferPool.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): ByteBuffer", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/utils\/io\/DirectBufferPool.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/utils\/io\/DirectBufferPool.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/DirectBufferPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/DirectBufferPool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/DirectBufferPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/DirectBufferPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/DirectBufferPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/DirectBufferPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/DirectBufferPool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DirectBufferPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DirectBufferPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/DirectBufferPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/DirectBufferPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/DirectBufferPool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/DirectBufferPool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/DirectBufferPool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/DirectBufferPool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/DirectBufferPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/DirectBufferPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/DirectBufferPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/DirectBufferPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/io\/DirectBufferPool.html", "kind" : "class"}, {"name" : "scales.utils.io.EmptyData", "shortDescription" : "Represents a data stream with no immediate data to return.", "object" : "scales\/utils\/io\/EmptyData$.html", "members_object" : [{"label" : "isEmpty", "tail" : ": Boolean", "member" : "scales.utils.io.EmptyData.isEmpty", "link" : "scales\/utils\/io\/EmptyData$.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "length", "tail" : ": Int", "member" : "scales.utils.io.EmptyData.length", "link" : "scales\/utils\/io\/EmptyData$.html#length:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "scales.utils.io.EmptyData.offset", "link" : "scales\/utils\/io\/EmptyData$.html#offset:Int", "kind" : "val"}, {"label" : "array", "tail" : ": Array[Byte]", "member" : "scales.utils.io.EmptyData.array", "link" : "scales\/utils\/io\/EmptyData$.html#array:Array[Byte]", "kind" : "val"}, {"label" : "isEOF", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEOF", "link" : "scales\/utils\/io\/EmptyData$.html#isEOF:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/EmptyData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/EmptyData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/EmptyData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/EmptyData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/EmptyData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/EmptyData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/EmptyData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/EmptyData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/EmptyData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/EmptyData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/EmptyData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/EmptyData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/EmptyData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/EmptyData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/EmptyData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/EmptyData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/EmptyData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/EmptyData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/EmptyData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.io.EOFData", "shortDescription" : "Represents the end of a stream, no more Bytes are available", "object" : "scales\/utils\/io\/EOFData$.html", "members_object" : [{"label" : "isEOF", "tail" : ": Boolean", "member" : "scales.utils.io.EOFData.isEOF", "link" : "scales\/utils\/io\/EOFData$.html#isEOF:Boolean", "kind" : "val"}, {"label" : "length", "tail" : ": Int", "member" : "scales.utils.io.EOFData.length", "link" : "scales\/utils\/io\/EOFData$.html#length:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "scales.utils.io.EOFData.offset", "link" : "scales\/utils\/io\/EOFData$.html#offset:Int", "kind" : "val"}, {"label" : "array", "tail" : ": Array[Byte]", "member" : "scales.utils.io.EOFData.array", "link" : "scales\/utils\/io\/EOFData$.html#array:Array[Byte]", "kind" : "val"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEmpty", "link" : "scales\/utils\/io\/EOFData$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/EOFData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/EOFData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/EOFData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/EOFData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/EOFData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/EOFData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/EOFData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/EOFData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/EOFData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/EOFData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/EOFData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/EOFData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/EOFData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/EOFData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/EOFData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/EOFData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/EOFData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/EOFData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/EOFData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.io.FullChunk", "shortDescription" : "Represents the full array", "members_case class" : [{"label" : "length", "tail" : "(): Int", "member" : "scales.utils.io.FullChunk.length", "link" : "scales\/utils\/io\/FullChunk.html#length:Int", "kind" : "def"}, {"label" : "offset", "tail" : "(): Int", "member" : "scales.utils.io.FullChunk.offset", "link" : "scales\/utils\/io\/FullChunk.html#offset:Int", "kind" : "def"}, {"member" : "scales.utils.io.FullChunk#<init>", "error" : "unsupported entity"}, {"label" : "array", "tail" : ": Array[Byte]", "member" : "scales.utils.io.FullChunk.array", "link" : "scales\/utils\/io\/FullChunk.html#array:Array[Byte]", "kind" : "val"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEmpty", "link" : "scales\/utils\/io\/FullChunk.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isEOF", "tail" : "(): Boolean", "member" : "scales.utils.io.DataChunk.isEOF", "link" : "scales\/utils\/io\/FullChunk.html#isEOF:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/FullChunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/FullChunk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/FullChunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/FullChunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/FullChunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/FullChunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/FullChunk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/FullChunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/FullChunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/FullChunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/FullChunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/FullChunk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/FullChunk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/FullChunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/FullChunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/FullChunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/io\/FullChunk.html", "kind" : "case class"}, {"name" : "scales.utils.io.JVMBufferPool", "shortDescription" : "ByteBuffer.allocate(bufferSize) backed pool", "members_class" : [{"label" : "create", "tail" : "(): ByteBuffer", "member" : "scales.utils.io.JVMBufferPool.create", "link" : "scales\/utils\/io\/JVMBufferPool.html#create:java.nio.ByteBuffer", "kind" : "def"}, {"member" : "scales.utils.io.JVMBufferPool#<init>", "error" : "unsupported entity"}, {"label" : "reduceSize", "tail" : ": Int", "member" : "scales.utils.io.JVMBufferPool.reduceSize", "link" : "scales\/utils\/io\/JVMBufferPool.html#reduceSize:Int", "kind" : "val"}, {"label" : "bufferSize", "tail" : ": Int", "member" : "scales.utils.io.JVMBufferPool.bufferSize", "link" : "scales\/utils\/io\/JVMBufferPool.html#bufferSize:Int", "kind" : "val"}, {"label" : "loan", "tail" : "(tThunk: (ByteBuffer) ⇒ X): X", "member" : "scales.utils.resources.SimpleUnboundedPool.loan", "link" : "scales\/utils\/io\/JVMBufferPool.html#loan[X](tThunk:T=>X):X", "kind" : "def"}, {"label" : "doCreate", "tail" : "(): ByteBuffer", "member" : "scales.utils.resources.SimpleUnboundedPool.doCreate", "link" : "scales\/utils\/io\/JVMBufferPool.html#doCreate:T", "kind" : "final def"}, {"label" : "giveBack", "tail" : "(t: ByteBuffer): Unit", "member" : "scales.utils.resources.SimpleUnboundedPool.giveBack", "link" : "scales\/utils\/io\/JVMBufferPool.html#giveBack(t:T):Unit", "kind" : "def"}, {"label" : "grab", "tail" : "(): ByteBuffer", "member" : "scales.utils.resources.SimpleUnboundedPool.grab", "link" : "scales\/utils\/io\/JVMBufferPool.html#grab:T", "kind" : "def"}, {"label" : "size", "tail" : ": AtomicInteger", "member" : "scales.utils.resources.SimpleUnboundedPool.size", "link" : "scales\/utils\/io\/JVMBufferPool.html#size:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/JVMBufferPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/JVMBufferPool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/JVMBufferPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/JVMBufferPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/JVMBufferPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/JVMBufferPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/JVMBufferPool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/JVMBufferPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/JVMBufferPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/JVMBufferPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/JVMBufferPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/JVMBufferPool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/JVMBufferPool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/JVMBufferPool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/JVMBufferPool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/JVMBufferPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/JVMBufferPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/JVMBufferPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/JVMBufferPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/io\/JVMBufferPool.html", "kind" : "class"}, {"name" : "scales.utils.io.ProxiedCloseOnNeedInputStream", "shortDescription" : "Wrap the InputStream to allow better bracketing etc.", "members_case class" : [{"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.doClose", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#doClose():Unit", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Long): Long", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.skip", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#skip(n:Long):Long", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.reset", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#reset():Unit", "kind" : "def"}, {"label" : "read", "tail" : "(cbuf: Array[Byte], off: Int, len: Int): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#read(cbuf:Array[Byte],off:Int,len:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(cbuf: Array[Byte]): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#read(cbuf:Array[Byte]):Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#read():Int", "kind" : "def"}, {"label" : "markSupported", "tail" : "(): Boolean", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.markSupported", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#markSupported():Boolean", "kind" : "def"}, {"label" : "mark", "tail" : "(rah: Int): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.mark", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#mark(rah:Int):Unit", "kind" : "def"}, {"label" : "available", "tail" : "(): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.available", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#available():Int", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.close", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#close():Unit", "kind" : "def"}, {"member" : "scales.utils.io.ProxiedCloseOnNeedInputStream#<init>", "error" : "unsupported entity"}, {"label" : "orig", "tail" : ": InputStream", "member" : "scales.utils.io.ProxiedCloseOnNeedInputStream.orig", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#orig:java.io.InputStream", "kind" : "val"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/io\/ProxiedCloseOnNeedInputStream.html", "kind" : "case class"}, {"name" : "scales.utils.io.ProxiedCloseOnNeedReader", "shortDescription" : "Wrap the Reader to allow better bracketing etc.", "members_case class" : [{"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.doClose", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#doClose():Unit", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Long): Long", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.skip", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#skip(n:Long):Long", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.reset", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#reset():Unit", "kind" : "def"}, {"label" : "ready", "tail" : "(): Boolean", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.ready", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#ready():Boolean", "kind" : "def"}, {"label" : "read", "tail" : "(target: CharBuffer): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#read(target:java.nio.CharBuffer):Int", "kind" : "def"}, {"label" : "read", "tail" : "(cbuf: Array[Char], off: Int, len: Int): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#read(cbuf:Array[Char],off:Int,len:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(cbuf: Array[Char]): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#read(cbuf:Array[Char]):Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.read", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#read():Int", "kind" : "def"}, {"label" : "markSupported", "tail" : "(): Boolean", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.markSupported", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#markSupported():Boolean", "kind" : "def"}, {"label" : "mark", "tail" : "(rah: Int): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.mark", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#mark(rah:Int):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.close", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#close():Unit", "kind" : "def"}, {"member" : "scales.utils.io.ProxiedCloseOnNeedReader#<init>", "error" : "unsupported entity"}, {"label" : "orig", "tail" : ": Reader", "member" : "scales.utils.io.ProxiedCloseOnNeedReader.orig", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#orig:java.io.Reader", "kind" : "val"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/utils\/io\/ProxiedCloseOnNeedReader.html", "kind" : "case class"}, {"name" : "scales.utils.io.RBCImplicitWrapper", "shortDescription" : "Convenience function for wrapping a channel", "members_class" : [{"label" : "wrapped", "tail" : "(): DataChunker[DataChunk]", "member" : "scales.utils.io.RBCImplicitWrapper.wrapped", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#wrapped:scales.utils.io.DataChunker[scales.utils.io.DataChunk]", "kind" : "def"}, {"member" : "scales.utils.io.RBCImplicitWrapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/RBCImplicitWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/io\/RBCImplicitWrapper.html", "kind" : "class"}, {"name" : "scales.utils.io.ReadableByteChannelWrapper", "shortDescription" : "", "object" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html", "members_class" : [{"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.io.ReadableByteChannelWrapper.doClose", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#doClose:Unit", "kind" : "def"}, {"member" : "scales.utils.io.ReadableByteChannelWrapper#<init>", "error" : "unsupported entity"}, {"label" : "backingArray", "tail" : ": Array[Byte]", "member" : "scales.utils.io.ReadableByteChannelWrapper.backingArray", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#backingArray:Array[Byte]", "kind" : "val"}, {"label" : "buffer", "tail" : ": ByteBuffer", "member" : "scales.utils.io.ReadableByteChannelWrapper.buffer", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#buffer:java.nio.ByteBuffer", "kind" : "val"}, {"label" : "nextChunk", "tail" : "(): DataChunk", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.nextChunk", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#nextChunk:scales.utils.io.DataChunk", "kind" : "final def"}, {"label" : "direct", "tail" : "(): DataChunk", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.direct", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#direct():scales.utils.io.DataChunk", "kind" : "def"}, {"label" : "jbytes", "tail" : "(): DataChunk", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.jbytes", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#jbytes():scales.utils.io.DataChunk", "kind" : "def"}, {"label" : "underlyingClosed", "tail" : "(): Boolean", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.underlyingClosed", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#underlyingClosed:Boolean", "kind" : "def"}, {"label" : "ev", "tail" : ": DataChunkEvidence[T]", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.ev", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#ev:scales.utils.io.DataChunkEvidence[T]", "kind" : "implicit val"}, {"label" : "closeChannel", "tail" : ": Boolean", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.closeChannel", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#closeChannel:Boolean", "kind" : "val"}, {"label" : "channel", "tail" : ": ReadableByteChannel", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.channel", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#channel:java.nio.channels.ReadableByteChannel", "kind" : "val"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "emptyBytes", "tail" : ": Array[Byte]", "member" : "scales.utils.io.ReadableByteChannelWrapper.emptyBytes", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#emptyBytes:Array[Byte]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/io\/ReadableByteChannelWrapper.html", "kind" : "object"}, {"name" : "scales.utils.io.ReadableByteChannelWrapperBase", "shortDescription" : "Wraps a ReadableByteChannel to provide DataChunks, optionally closes the channel (defaults to closing).", "members_class" : [{"label" : "nextChunk", "tail" : "(): DataChunk", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.nextChunk", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#nextChunk:scales.utils.io.DataChunk", "kind" : "final def"}, {"label" : "direct", "tail" : "(): DataChunk", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.direct", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#direct():scales.utils.io.DataChunk", "kind" : "def"}, {"label" : "jbytes", "tail" : "(): DataChunk", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.jbytes", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#jbytes():scales.utils.io.DataChunk", "kind" : "def"}, {"label" : "doClose", "tail" : "(): Unit", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.doClose", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#doClose:Unit", "kind" : "def"}, {"label" : "underlyingClosed", "tail" : "(): Boolean", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.underlyingClosed", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#underlyingClosed:Boolean", "kind" : "def"}, {"member" : "scales.utils.io.ReadableByteChannelWrapperBase#<init>", "error" : "unsupported entity"}, {"label" : "ev", "tail" : ": DataChunkEvidence[T]", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.ev", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#ev:scales.utils.io.DataChunkEvidence[T]", "kind" : "implicit val"}, {"label" : "backingArray", "tail" : ": Array[Byte]", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.backingArray", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#backingArray:Array[Byte]", "kind" : "val"}, {"label" : "closeChannel", "tail" : ": Boolean", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.closeChannel", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#closeChannel:Boolean", "kind" : "val"}, {"label" : "buffer", "tail" : ": ByteBuffer", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.buffer", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#buffer:java.nio.ByteBuffer", "kind" : "val"}, {"label" : "channel", "tail" : ": ReadableByteChannel", "member" : "scales.utils.io.ReadableByteChannelWrapperBase.channel", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#channel:java.nio.channels.ReadableByteChannel", "kind" : "val"}, {"label" : "++", "tail" : "(close2: CloseOnNeed): CloseOnNeed", "member" : "scales.utils.resources.CloseOnNeed.++", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#++(close2:scales.utils.resources.CloseOnNeed):scales.utils.resources.CloseOnNeed", "kind" : "def"}, {"label" : "closeResource", "tail" : "(): Unit", "member" : "scales.utils.resources.CloseOnNeed.closeResource", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#closeResource:Unit", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "scales.utils.resources.CloseOnNeed.isClosed", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#isClosed:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/io\/ReadableByteChannelWrapperBase.html", "kind" : "class"}, {"name" : "scales.utils.io.ReadableByteChannelWrapperImplicits", "members_trait" : [{"label" : "AsyncDataChunkerEnumerator", "tail" : "", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.AsyncDataChunkerEnumerator", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#AsyncDataChunkerEnumerator[T,F[_]]extendsEnumeratorT[scales.utils.io.DataChunk,F]", "kind" : "class"}, {"label" : "INFINITE_RETRIES", "tail" : ": Int", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.INFINITE_RETRIES", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#INFINITE_RETRIES:Int", "kind" : "val"}, {"label" : "dataChunkerEnumerator", "tail" : "(chunker: DataChunker[T])(arg0: Monad[F]): EnumeratorT[DataChunk, F]", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.dataChunkerEnumerator", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#dataChunkerEnumerator[T,F[_]](chunker:scales.utils.io.DataChunker[T])(implicitevidence$1:scalaz.Monad[F]):scalaz.iteratee.EnumeratorT[scales.utils.io.DataChunk,F]", "kind" : "implicit def"}, {"label" : "toRBCWrapper", "tail" : "(channel: ReadableByteChannel)(ev: DataChunkEvidence[DataChunk]): RBCImplicitWrapper", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.toRBCWrapper", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#toRBCWrapper(channel:java.nio.channels.ReadableByteChannel)(implicitev:scales.utils.io.DataChunkEvidence[scales.utils.io.DataChunk]):scales.utils.io.RBCImplicitWrapper", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html", "kind" : "trait"}, {"name" : "scales.utils.io.ScalesUtilsIO", "shortDescription" : "", "object" : "scales\/utils\/io\/ScalesUtilsIO$.html", "members_object" : [{"label" : "AsyncDataChunkerEnumerator", "tail" : "", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.AsyncDataChunkerEnumerator", "link" : "scales\/utils\/io\/ReadableByteChannelWrapperImplicits.html#AsyncDataChunkerEnumerator[T,F[_]]extendsEnumeratorT[scales.utils.io.DataChunk,F]", "kind" : "class"}, {"label" : "INFINITE_RETRIES", "tail" : ": Int", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.INFINITE_RETRIES", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#INFINITE_RETRIES:Int", "kind" : "val"}, {"label" : "dataChunkerEnumerator", "tail" : "(chunker: DataChunker[T])(arg0: Monad[F]): EnumeratorT[DataChunk, F]", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.dataChunkerEnumerator", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#dataChunkerEnumerator[T,F[_]](chunker:scales.utils.io.DataChunker[T])(implicitevidence$1:scalaz.Monad[F]):scalaz.iteratee.EnumeratorT[scales.utils.io.DataChunk,F]", "kind" : "implicit def"}, {"label" : "toRBCWrapper", "tail" : "(channel: ReadableByteChannel)(ev: DataChunkEvidence[DataChunk]): RBCImplicitWrapper", "member" : "scales.utils.io.ReadableByteChannelWrapperImplicits.toRBCWrapper", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#toRBCWrapper(channel:java.nio.channels.ReadableByteChannel)(implicitev:scales.utils.io.DataChunkEvidence[scales.utils.io.DataChunk]):scales.utils.io.RBCImplicitWrapper", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/io\/ScalesUtilsIO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scales.org" : [], "scales.xml.dsl" : [{"name" : "scales.xml.dsl.DslBuilder", "shortDescription" : "Entry point to creating DslBuilders, can be used without the implicit helpers", "object" : "scales\/xml\/dsl\/DslBuilder$.html", "members_class" : [{"label" : "toTree", "tail" : "(): xml.XmlTree", "member" : "scales.xml.dsl.DslBuilder.toTree", "link" : "scales\/xml\/dsl\/DslBuilder.html#toTree:scales.xml.XmlTree", "kind" : "def"}, {"label" : "elementsOnly", "tail" : "(): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.elementsOnly", "link" : "scales\/xml\/dsl\/DslBuilder.html#elementsOnly:scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "setValue", "tail" : "(value: Option[String]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.setValue", "link" : "scales\/xml\/dsl\/DslBuilder.html#setValue(value:Option[String]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "~>", "tail" : "(value: Option[String]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.~>", "link" : "scales\/xml\/dsl\/DslBuilder.html#~>(value:Option[String]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "setValue", "tail" : "(value: String): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.setValue", "link" : "scales\/xml\/dsl\/DslBuilder.html#setValue(value:String):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "~>", "tail" : "(value: String): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.~>", "link" : "scales\/xml\/dsl\/DslBuilder.html#~>(value:String):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "\/", "tail" : "(itemOrElems: xml.ItemOrElem*): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.\/", "link" : "scales\/xml\/dsl\/DslBuilder.html#\/(itemOrElems:scales.xml.ItemOrElem*):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "-\/", "tail" : "(qname: QName): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.-\/", "link" : "scales\/xml\/dsl\/DslBuilder.html#-\/(qname:scales.xml.QName):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "fold_?", "tail" : "(xpath: (xml.XmlPath) ⇒ XPath[T])(folder: (xml.XmlPath) ⇒ FoldOperation[XmlItem, Elem, xml.XCC]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.fold_?", "link" : "scales\/xml\/dsl\/DslBuilder.html#fold_?[T<:Iterable[scales.xml.XmlPath]](xpath:scales.xml.XmlPath=>scales.xml.XPath[T])(folder:scales.xml.XmlPath=>scales.utils.collection.path.FoldOperation[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "fold_!", "tail" : "(xpath: (xml.XmlPath) ⇒ XPath[T])(folder: (xml.XmlPath) ⇒ FoldOperation[XmlItem, Elem, xml.XCC]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.fold_!", "link" : "scales\/xml\/dsl\/DslBuilder.html#fold_![T<:Iterable[scales.xml.XmlPath]](xpath:scales.xml.XmlPath=>scales.xml.XPath[T])(folder:scales.xml.XmlPath=>scales.utils.collection.path.FoldOperation[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "fold", "tail" : "(xpath: (xml.XmlPath) ⇒ XPath[T])(folder: (xml.XmlPath) ⇒ FoldOperation[XmlItem, Elem, xml.XCC]): Either[DslBuilder, (DslBuilder, FoldError)]", "member" : "scales.xml.dsl.DslBuilder.fold", "link" : "scales\/xml\/dsl\/DslBuilder.html#fold[T<:Iterable[scales.xml.XmlPath]](xpath:scales.xml.XmlPath=>scales.xml.XPath[T])(folder:scales.xml.XmlPath=>scales.utils.collection.path.FoldOperation[scales.xml.XmlItem,scales.xml.Elem,scales.xml.XCC]):Either[scales.xml.dsl.DslBuilder,(scales.xml.dsl.DslBuilder,scales.utils.collection.path.FoldError)]", "kind" : "def"}, {"label" : "\/", "tail" : "(itemOrElem: Option[xml.ItemOrElem]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.\/", "link" : "scales\/xml\/dsl\/DslBuilder.html#\/(itemOrElem:Option[scales.xml.ItemOrElem]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "addOptionals", "tail" : "(itemOrElems: ⇒ Iterable[Option[xml.ItemOrElem]]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.addOptionals", "link" : "scales\/xml\/dsl\/DslBuilder.html#addOptionals(itemOrElems:=>Iterable[Option[scales.xml.ItemOrElem]]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "addOptionals", "tail" : "(itemOrElems: Option[xml.ItemOrElem]*): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.addOptionals", "link" : "scales\/xml\/dsl\/DslBuilder.html#addOptionals(itemOrElems:Option[scales.xml.ItemOrElem]*):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "\/", "tail" : "(itemOrElems: ⇒ Iterable[xml.ItemOrElem]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.\/", "link" : "scales\/xml\/dsl\/DslBuilder.html#\/(itemOrElems:=>Iterable[scales.xml.ItemOrElem]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "add", "tail" : "(itemOrElems: xml.ItemOrElem*): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.add", "link" : "scales\/xml\/dsl\/DslBuilder.html#add(itemOrElems:scales.xml.ItemOrElem*):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "-\/@", "tail" : "(attribs: QName*): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.-\/@", "link" : "scales\/xml\/dsl\/DslBuilder.html#-\/@(attribs:scales.xml.QName*):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "\/@", "tail" : "(attrib: Option[Attribute]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.\/@", "link" : "scales\/xml\/dsl\/DslBuilder.html#\/@(attrib:Option[scales.xml.Attribute]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "\/@", "tail" : "(attribs: ⇒ Iterable[Attribute]): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.\/@", "link" : "scales\/xml\/dsl\/DslBuilder.html#\/@(attribs:=>Iterable[scales.xml.Attribute]):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "\/@", "tail" : "(attribs: Attribute*): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.\/@", "link" : "scales\/xml\/dsl\/DslBuilder.html#\/@(attribs:scales.xml.Attribute*):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "tree", "tail" : ": xml.XmlTree", "member" : "scales.xml.dsl.DslBuilder.tree", "link" : "scales\/xml\/dsl\/DslBuilder.html#tree:scales.xml.XmlTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/DslBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/DslBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/DslBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/DslBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/DslBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/DslBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/DslBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/DslBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/DslBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/DslBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/DslBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/DslBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/DslBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/DslBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/DslBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/DslBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(tree: xml.XmlTree): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.apply", "link" : "scales\/xml\/dsl\/DslBuilder$.html#apply(tree:scales.xml.XmlTree):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: Elem): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.apply", "link" : "scales\/xml\/dsl\/DslBuilder$.html#apply(elem:scales.xml.Elem):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(qname: QName): DslBuilder", "member" : "scales.xml.dsl.DslBuilder.apply", "link" : "scales\/xml\/dsl\/DslBuilder$.html#apply(qname:scales.xml.QName):scales.xml.dsl.DslBuilder", "kind" : "def"}, {"label" : "q2tree", "tail" : "(qname: QName): xml.XmlTree", "member" : "scales.xml.dsl.DslBuilder.q2tree", "link" : "scales\/xml\/dsl\/DslBuilder$.html#q2tree(qname:scales.xml.QName):scales.xml.XmlTree", "kind" : "def"}, {"label" : "elem2tree", "tail" : "(elem: Elem): xml.XmlTree", "member" : "scales.xml.dsl.DslBuilder.elem2tree", "link" : "scales\/xml\/dsl\/DslBuilder$.html#elem2tree(elem:scales.xml.Elem):scales.xml.XmlTree", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/DslBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/DslBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/DslBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/DslBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/DslBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/DslBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/DslBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/DslBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/DslBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/DslBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/DslBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/DslBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/DslBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/DslBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/DslBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/DslBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/DslBuilder.html", "kind" : "object"}, {"name" : "scales.xml.dsl.DslImplicits", "members_trait" : [{"label" : "fromNSToNSMPimper", "tail" : "(ns: Namespace): NSMPimper", "member" : "scales.xml.dsl.DslImplicits.fromNSToNSMPimper", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromNSToNSMPimper(ns:scales.xml.Namespace):scales.xml.dsl.NSMPimper", "kind" : "implicit def"}, {"label" : "fromTreeToDsl", "tail" : "(tree: xml.XmlTree): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromTreeToDsl", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromTreeToDsl(tree:scales.xml.XmlTree):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "fromQNameToQNamePimper", "tail" : "(qname: QName): QNameMPimper", "member" : "scales.xml.dsl.DslImplicits.fromQNameToQNamePimper", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromQNameToQNamePimper(qname:scales.xml.QName):scales.xml.dsl.QNameMPimper", "kind" : "implicit def"}, {"label" : "fromQNameToBuilder", "tail" : "(qname: QName): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromQNameToBuilder", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromQNameToBuilder(qname:scales.xml.QName):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "fromStringToText", "tail" : "(value: String): Text", "member" : "scales.xml.dsl.DslImplicits.fromStringToText", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromStringToText(value:String):scales.xml.Text", "kind" : "implicit def"}, {"label" : "fromElemToTree", "tail" : "(elem: Elem): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromElemToTree", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromElemToTree(elem:scales.xml.Elem):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromQNameToTree", "tail" : "(qname: QName): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromQNameToTree", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromQNameToTree(qname:scales.xml.QName):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromDslBuilderToTree", "tail" : "(dslB: DslBuilder): xml.XmlTree", "member" : "scales.xml.dsl.DslImplicits.fromDslBuilderToTree", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromDslBuilderToTree(dslB:scales.xml.dsl.DslBuilder):scales.xml.XmlTree", "kind" : "implicit def"}, {"label" : "fromQNamePairToAttribute", "tail" : "(pair: (PrefixedQName, String)): Attribute", "member" : "scales.xml.dsl.DslImplicits.fromQNamePairToAttribute", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromQNamePairToAttribute(pair:(scales.xml.PrefixedQName,String)):scales.xml.Attribute", "kind" : "implicit def"}, {"label" : "fromElemToBuilder", "tail" : "(elem: Elem): DslBuilder", "member" : "scales.xml.dsl.DslImplicits.fromElemToBuilder", "link" : "scales\/xml\/dsl\/DslImplicits.html#fromElemToBuilder(elem:scales.xml.Elem):scales.xml.dsl.DslBuilder", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/DslImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/DslImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/DslImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/DslImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/DslImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/DslImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/DslImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/DslImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/DslImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/DslImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/DslImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/DslImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/DslImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/DslImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/DslImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/DslImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/DslImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/xml\/dsl\/DslImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.dsl.FoldErrorException", "shortDescription" : "Simple runtime Wrapper around folds", "members_case class" : [{"member" : "scales.xml.dsl.FoldErrorException#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": FoldError", "member" : "scales.xml.dsl.FoldErrorException.error", "link" : "scales\/xml\/dsl\/FoldErrorException.html#error:scales.utils.collection.path.FoldError", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scales\/xml\/dsl\/FoldErrorException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scales\/xml\/dsl\/FoldErrorException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scales\/xml\/dsl\/FoldErrorException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scales\/xml\/dsl\/FoldErrorException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scales\/xml\/dsl\/FoldErrorException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/dsl\/FoldErrorException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/dsl\/FoldErrorException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scales\/xml\/dsl\/FoldErrorException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scales\/xml\/dsl\/FoldErrorException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scales\/xml\/dsl\/FoldErrorException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scales\/xml\/dsl\/FoldErrorException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scales\/xml\/dsl\/FoldErrorException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scales\/xml\/dsl\/FoldErrorException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/FoldErrorException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/FoldErrorException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/FoldErrorException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/FoldErrorException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/FoldErrorException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/FoldErrorException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/FoldErrorException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/FoldErrorException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/FoldErrorException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/FoldErrorException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/FoldErrorException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/FoldErrorException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/FoldErrorException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/FoldErrorException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/FoldErrorException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/FoldErrorException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scales\/xml\/dsl\/FoldErrorException.html", "kind" : "case class"}, {"name" : "scales.xml.dsl.NamespaceMatcher", "shortDescription" : "Matches a given Namespace against either an Attribute or Elem with the namespace only", "members_class" : [{"label" : "unapply", "tail" : "(attrib: Attribute): Option[Attribute]", "member" : "scales.xml.dsl.NamespaceMatcher.unapply", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#unapply(attrib:scales.xml.Attribute):Option[scales.xml.Attribute]", "kind" : "def"}, {"label" : "unapply", "tail" : "(elem: Elem): Option[Elem]", "member" : "scales.xml.dsl.NamespaceMatcher.unapply", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#unapply(elem:scales.xml.Elem):Option[scales.xml.Elem]", "kind" : "def"}, {"member" : "scales.xml.dsl.NamespaceMatcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/NamespaceMatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/NamespaceMatcher.html", "kind" : "class"}, {"name" : "scales.xml.dsl.NSMPimper", "shortDescription" : "Leveraged via implicit fromNSToNSMPimper, adds m\/matcher to create a NamespaceMatcher", "members_class" : [{"label" : "matcher", "tail" : "(): NamespaceMatcher", "member" : "scales.xml.dsl.NSMPimper.matcher", "link" : "scales\/xml\/dsl\/NSMPimper.html#matcher:scales.xml.dsl.NamespaceMatcher", "kind" : "def"}, {"label" : "m", "tail" : "(): NamespaceMatcher", "member" : "scales.xml.dsl.NSMPimper.m", "link" : "scales\/xml\/dsl\/NSMPimper.html#m:scales.xml.dsl.NamespaceMatcher", "kind" : "def"}, {"member" : "scales.xml.dsl.NSMPimper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/NSMPimper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/NSMPimper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/NSMPimper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/NSMPimper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/NSMPimper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/NSMPimper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/NSMPimper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/NSMPimper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/NSMPimper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/NSMPimper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/NSMPimper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/NSMPimper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/NSMPimper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/NSMPimper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/NSMPimper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/NSMPimper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/NSMPimper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/NSMPimper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/NSMPimper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/NSMPimper.html", "kind" : "class"}, {"name" : "scales.xml.dsl.OptionalAttribute", "shortDescription" : "Add ?-> to an attributeqname", "members_class" : [{"label" : "?->", "tail" : "(value: Option[String]): Option[Attribute]", "member" : "scales.xml.dsl.OptionalAttribute.?->", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#?->(value:Option[String]):Option[scales.xml.Attribute]", "kind" : "def"}, {"label" : "?->", "tail" : "(value: String): Option[Attribute]", "member" : "scales.xml.dsl.OptionalAttribute.?->", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#?->(value:String):Option[scales.xml.Attribute]", "kind" : "def"}, {"member" : "scales.xml.dsl.OptionalAttribute#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": xml.AttributeQName", "member" : "scales.xml.dsl.OptionalAttribute.name", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#name:scales.xml.AttributeQName", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/OptionalAttribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/OptionalAttribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/OptionalAttribute.html", "kind" : "class"}, {"name" : "scales.xml.dsl.OptionalDslBuilder", "shortDescription" : "Entry point to creating OptionalDslBuilders, can be used without the implicit helpers", "object" : "scales\/xml\/dsl\/OptionalDslBuilder$.html", "members_class" : [{"label" : "toOptionalTree", "tail" : "(): Option[xml.XmlTree]", "member" : "scales.xml.dsl.OptionalDslBuilder.toOptionalTree", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#toOptionalTree:Option[scales.xml.XmlTree]", "kind" : "def"}, {"label" : "setOptionalValue", "tail" : "(value: Option[String]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.setOptionalValue", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#setOptionalValue(value:Option[String]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?~>", "tail" : "(value: Option[String]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?~>", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?~>(value:Option[String]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "setNonOptionalValue", "tail" : "(value: String): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.setNonOptionalValue", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#setNonOptionalValue(value:String):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?~>", "tail" : "(value: String): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?~>", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?~>(value:String):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?\/", "tail" : "(itemOrElem: ⇒ Iterable[OptionalDslBuilder]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?\/", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?\/(itemOrElem:=>Iterable[scales.xml.dsl.OptionalDslBuilder]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?\/", "tail" : "(itemOrElem: OptionalDslBuilder*): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?\/", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?\/(itemOrElem:scales.xml.dsl.OptionalDslBuilder*):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addOptionalChildren", "tail" : "(items: OptionalDslBuilder*): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addOptionalChildren", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addOptionalChildren(items:scales.xml.dsl.OptionalDslBuilder*):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addOptionalChildren", "tail" : "(items: ⇒ Iterable[OptionalDslBuilder]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addOptionalChildren", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addOptionalChildren(items:=>Iterable[scales.xml.dsl.OptionalDslBuilder]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addOptionalChild", "tail" : "(itemOrElem: OptionalDslBuilder): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addOptionalChild", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addOptionalChild(itemOrElem:scales.xml.dsl.OptionalDslBuilder):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?\/", "tail" : "(itemOrElem: OptionalDslBuilder): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?\/", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?\/(itemOrElem:scales.xml.dsl.OptionalDslBuilder):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addNonEmpty", "tail" : "(itemOrElems: xml.ItemOrElem*): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addNonEmpty", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addNonEmpty(itemOrElems:scales.xml.ItemOrElem*):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addNonEmpty", "tail" : "(itemOrElems: ⇒ Iterable[xml.ItemOrElem]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addNonEmpty", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addNonEmpty(itemOrElems:=>Iterable[scales.xml.ItemOrElem]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addOptionalAttribute", "tail" : "(attrib: Option[Attribute]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addOptionalAttribute", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addOptionalAttribute(attrib:Option[scales.xml.Attribute]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?\/@", "tail" : "(attrib: Option[Attribute]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?\/@", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?\/@(attrib:Option[scales.xml.Attribute]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "addOptionalAttributes", "tail" : "(attribs: ⇒ Iterable[Attribute]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.addOptionalAttributes", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#addOptionalAttributes(attribs:=>Iterable[scales.xml.Attribute]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "?\/@", "tail" : "(attribs: ⇒ Iterable[Attribute]): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.?\/@", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#?\/@(attribs:=>Iterable[scales.xml.Attribute]):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "tree", "tail" : ": xml.XmlTree", "member" : "scales.xml.dsl.OptionalDslBuilder.tree", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#tree:scales.xml.XmlTree", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/OptionalDslBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(tree: xml.XmlTree): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.apply", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#apply(tree:scales.xml.XmlTree):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: Elem): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.apply", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#apply(elem:scales.xml.Elem):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(qname: QName): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilder.apply", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#apply(qname:scales.xml.QName):scales.xml.dsl.OptionalDslBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/OptionalDslBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/OptionalDslBuilder.html", "kind" : "object"}, {"name" : "scales.xml.dsl.OptionalDslBuilderImplicits", "members_trait" : [{"label" : "fromOptionalDslToOptionalTree", "tail" : "(optionalDsl: OptionalDslBuilder): Option[xml.ItemOrElem]", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromOptionalDslToOptionalTree", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#fromOptionalDslToOptionalTree(optionalDsl:scales.xml.dsl.OptionalDslBuilder):Option[scales.xml.ItemOrElem]", "kind" : "implicit def"}, {"label" : "fromPQNameToOptionalAttribute", "tail" : "(name: xml.AttributeQName): OptionalAttribute", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromPQNameToOptionalAttribute", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#fromPQNameToOptionalAttribute(name:scales.xml.AttributeQName):scales.xml.dsl.OptionalAttribute", "kind" : "implicit def"}, {"label" : "fromTreeToODsl", "tail" : "(tree: xml.XmlTree): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromTreeToODsl", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#fromTreeToODsl(tree:scales.xml.XmlTree):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromQNameToOptionalBuilder", "tail" : "(qname: QName): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromQNameToOptionalBuilder", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#fromQNameToOptionalBuilder(qname:scales.xml.QName):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "fromElemToOptionalBuilder", "tail" : "(elem: Elem): OptionalDslBuilder", "member" : "scales.xml.dsl.OptionalDslBuilderImplicits.fromElemToOptionalBuilder", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#fromElemToOptionalBuilder(elem:scales.xml.Elem):scales.xml.dsl.OptionalDslBuilder", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "DslImplicits centered on the OptionalDslBuilder only", "trait" : "scales\/xml\/dsl\/OptionalDslBuilderImplicits.html", "kind" : "trait"}, {"name" : "scales.xml.dsl.QNameMatcher", "shortDescription" : "Matches a given QName against either an Attribute or Elem with the namespace and localname only (QName.=:=)", "members_class" : [{"label" : "unapply", "tail" : "(attrib: Attribute): Option[Attribute]", "member" : "scales.xml.dsl.QNameMatcher.unapply", "link" : "scales\/xml\/dsl\/QNameMatcher.html#unapply(attrib:scales.xml.Attribute):Option[scales.xml.Attribute]", "kind" : "def"}, {"label" : "unapply", "tail" : "(elem: Elem): Option[Elem]", "member" : "scales.xml.dsl.QNameMatcher.unapply", "link" : "scales\/xml\/dsl\/QNameMatcher.html#unapply(elem:scales.xml.Elem):Option[scales.xml.Elem]", "kind" : "def"}, {"member" : "scales.xml.dsl.QNameMatcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/QNameMatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/QNameMatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/QNameMatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/QNameMatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/QNameMatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/QNameMatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/QNameMatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/QNameMatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/QNameMatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/QNameMatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/QNameMatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/QNameMatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/QNameMatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/QNameMatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/QNameMatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/QNameMatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/QNameMatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/QNameMatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/QNameMatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/QNameMatcher.html", "kind" : "class"}, {"name" : "scales.xml.dsl.QNameMPimper", "shortDescription" : "Leveraged via implicit fromQNameToQNamePimper, adds m\/matcher to create a QNameMatcher", "members_class" : [{"label" : "matcher", "tail" : "(): QNameMatcher", "member" : "scales.xml.dsl.QNameMPimper.matcher", "link" : "scales\/xml\/dsl\/QNameMPimper.html#matcher:scales.xml.dsl.QNameMatcher", "kind" : "def"}, {"label" : "m", "tail" : "(): QNameMatcher", "member" : "scales.xml.dsl.QNameMPimper.m", "link" : "scales\/xml\/dsl\/QNameMPimper.html#m:scales.xml.dsl.QNameMatcher", "kind" : "def"}, {"member" : "scales.xml.dsl.QNameMPimper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/QNameMPimper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/QNameMPimper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/QNameMPimper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/QNameMPimper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/QNameMPimper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/QNameMPimper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/QNameMPimper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/QNameMPimper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/QNameMPimper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/QNameMPimper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/QNameMPimper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/QNameMPimper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/QNameMPimper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/QNameMPimper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/QNameMPimper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/QNameMPimper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/QNameMPimper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/QNameMPimper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/QNameMPimper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/xml\/dsl\/QNameMPimper.html", "kind" : "class"}, {"name" : "scales.xml.dsl.XPathMatcher", "members_trait" : [{"label" : "pathAndTreeMatcher", "tail" : "(pathEval: (xml.XmlTree) ⇒ T)(arg0: utils.AsBoolean[T]): utils.BooleanAndTMatcher[xml.XmlTree, T]", "member" : "scales.xml.dsl.XPathMatcher.pathAndTreeMatcher", "link" : "scales\/xml\/dsl\/XPathMatcher.html#pathAndTreeMatcher[T](pathEval:scales.xml.XmlTree=>T)(implicitevidence$2:scales.utils.AsBoolean[T]):scales.utils.BooleanAndTMatcher[scales.xml.XmlTree,T]", "kind" : "def"}, {"label" : "pathMatcher", "tail" : "(pathEval: (xml.XmlTree) ⇒ T)(arg0: utils.AsBoolean[T]): utils.BooleanMatcher[xml.XmlTree, T]", "member" : "scales.xml.dsl.XPathMatcher.pathMatcher", "link" : "scales\/xml\/dsl\/XPathMatcher.html#pathMatcher[T](pathEval:scales.xml.XmlTree=>T)(implicitevidence$1:scales.utils.AsBoolean[T]):scales.utils.BooleanMatcher[scales.xml.XmlTree,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/xml\/dsl\/XPathMatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/xml\/dsl\/XPathMatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/xml\/dsl\/XPathMatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/xml\/dsl\/XPathMatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/xml\/dsl\/XPathMatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/xml\/dsl\/XPathMatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/xml\/dsl\/XPathMatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/XPathMatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/XPathMatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/xml\/dsl\/XPathMatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/xml\/dsl\/XPathMatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/xml\/dsl\/XPathMatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/xml\/dsl\/XPathMatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/xml\/dsl\/XPathMatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/xml\/dsl\/XPathMatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/xml\/dsl\/XPathMatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/xml\/dsl\/XPathMatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/xml\/dsl\/XPathMatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/xml\/dsl\/XPathMatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "PathMatching functions over booleans", "trait" : "scales\/xml\/dsl\/XPathMatcher.html", "kind" : "trait"}], "scales.utils.impl" : [{"name" : "scales.utils.impl.LeftLikeProjection", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/impl\/LeftLikeProjection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): L", "member" : "scales.utils.impl.LeftLikeProjection.get", "link" : "scales\/utils\/impl\/LeftLikeProjection.html#get:L", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/utils\/impl\/LeftLikeProjection.html", "kind" : "trait"}, {"name" : "scales.utils.impl.NonLeftP", "shortDescription" : "", "object" : "scales\/utils\/impl\/NonLeftP$.html", "members_object" : [{"label" : "get", "tail" : "(): Nothing", "member" : "scales.utils.impl.NonLeftP.get", "link" : "scales\/utils\/impl\/NonLeftP$.html#get:Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/impl\/NonLeftP$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/impl\/NonLeftP$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/impl\/NonLeftP$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/impl\/NonLeftP$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/impl\/NonLeftP$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/impl\/NonLeftP$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/impl\/NonLeftP$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/NonLeftP$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/NonLeftP$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/NonLeftP$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/impl\/NonLeftP$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/impl\/NonLeftP$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/impl\/NonLeftP$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/impl\/NonLeftP$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/impl\/NonLeftP$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/impl\/NonLeftP$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/impl\/NonLeftP$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/impl\/NonLeftP$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/impl\/NonLeftP$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.impl.NonRightP", "shortDescription" : "", "object" : "scales\/utils\/impl\/NonRightP$.html", "members_object" : [{"label" : "get", "tail" : "(): Nothing", "member" : "scales.utils.impl.NonRightP.get", "link" : "scales\/utils\/impl\/NonRightP$.html#get:Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/impl\/NonRightP$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/impl\/NonRightP$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/impl\/NonRightP$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/impl\/NonRightP$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/impl\/NonRightP$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/impl\/NonRightP$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/impl\/NonRightP$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/NonRightP$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/NonRightP$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/NonRightP$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/impl\/NonRightP$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/impl\/NonRightP$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/impl\/NonRightP$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/impl\/NonRightP$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/impl\/NonRightP$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/impl\/NonRightP$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/impl\/NonRightP$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/impl\/NonRightP$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/impl\/NonRightP$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scales.utils.impl.RightLikeProjection", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/impl\/RightLikeProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/impl\/RightLikeProjection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/impl\/RightLikeProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/impl\/RightLikeProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/impl\/RightLikeProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/impl\/RightLikeProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/impl\/RightLikeProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/RightLikeProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/RightLikeProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/RightLikeProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/impl\/RightLikeProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/impl\/RightLikeProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/impl\/RightLikeProjection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/impl\/RightLikeProjection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/impl\/RightLikeProjection.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/impl\/RightLikeProjection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/impl\/RightLikeProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/impl\/RightLikeProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/impl\/RightLikeProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): R", "member" : "scales.utils.impl.RightLikeProjection.get", "link" : "scales\/utils\/impl\/RightLikeProjection.html#get:R", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scales\/utils\/impl\/RightLikeProjection.html", "kind" : "trait"}, {"name" : "scales.utils.impl.ScalesUtilsImplicits", "members_trait" : [{"label" : "ephemeralAppender", "tail" : "(e: EphemeralStream[A]): AnyRef { ... \/* 2 definitions in type refinement *\/ }", "member" : "scales.utils.collection.IterableUtilsImplicits.ephemeralAppender", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#ephemeralAppender[A](e:scalaz.EphemeralStream[A]):AnyRef{defappend[A,B>:A](a:scalaz.EphemeralStream[A],e:=>scalaz.EphemeralStream[B]):scalaz.EphemeralStream[B];def+:+[B>:A](e1:=>scalaz.EphemeralStream[B]):scalaz.EphemeralStream[B]}", "kind" : "implicit def"}, {"label" : "toEval", "tail" : "(i: ⇒ IterateeT[WHAT, F, RETURN]): Eval[WHAT, F, RETURN]", "member" : "scales.utils.iteratee.IterateeImplicits.toEval", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#toEval[WHAT,F[_],RETURN](i:=>scalaz.iteratee.IterateeT[WHAT,F,RETURN]):scales.utils.iteratee.Eval[WHAT,F,RETURN]", "kind" : "implicit def"}, {"label" : "fToFoldRToCombine", "tail" : "(f: utils.PathFoldR[Item, Section, CC]): PathFoldCombiner[Item, Section, CC]", "member" : "scales.utils.collection.path.PathImplicits.fToFoldRToCombine", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#fToFoldRToCombine[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](f:scales.utils.PathFoldR[Item,Section,CC]):scales.utils.collection.path.PathFoldCombiner[Item,Section,CC]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/impl\/ScalesUtilsImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Allows the user to extend a user package object with the scales.utils implicits.", "trait" : "scales\/utils\/impl\/ScalesUtilsImplicits.html", "kind" : "trait"}], "scales.utils" : [{"name" : "scales.utils.AsBooleanTrait", "members_trait" : [{"label" : "booleanAndTMatcher", "tail" : "(eval: (X) ⇒ T)(arg0: AsBoolean[T]): BooleanAndTMatcher[X, T]", "member" : "scales.utils.AsBooleanTrait.booleanAndTMatcher", "link" : "scales\/utils\/AsBooleanTrait.html#booleanAndTMatcher[X,T](eval:X=>T)(implicitevidence$5:AsBooleanTrait.this.AsBoolean[T]):AsBooleanTrait.this.BooleanAndTMatcher[X,T]", "kind" : "def"}, {"label" : "booleanMatcher", "tail" : "(eval: (X) ⇒ T)(arg0: AsBoolean[T]): BooleanMatcher[X, T]", "member" : "scales.utils.AsBooleanTrait.booleanMatcher", "link" : "scales\/utils\/AsBooleanTrait.html#booleanMatcher[X,T](eval:X=>T)(implicitevidence$4:AsBooleanTrait.this.AsBoolean[T]):AsBooleanTrait.this.BooleanMatcher[X,T]", "kind" : "def"}, {"label" : "BooleanAndTMatcher", "tail" : "", "member" : "scales.utils.AsBooleanTrait.BooleanAndTMatcher", "link" : "scales\/utils\/AsBooleanTrait.html#BooleanAndTMatcher[X,T]extendsAnyRef", "kind" : "class"}, {"label" : "BooleanMatcher", "tail" : "", "member" : "scales.utils.AsBooleanTrait.BooleanMatcher", "link" : "scales\/utils\/AsBooleanTrait.html#BooleanMatcher[X,T]extendsAnyRef", "kind" : "class"}, {"label" : "boolean", "tail" : "(it: T)(arg0: AsBoolean[T]): Boolean", "member" : "scales.utils.AsBooleanTrait.boolean", "link" : "scales\/utils\/AsBooleanTrait.html#boolean[T](it:T)(implicitevidence$1:AsBooleanTrait.this.AsBoolean[T]):Boolean", "kind" : "def"}, {"label" : "AsBoolean", "tail" : "", "member" : "scales.utils.AsBooleanTrait.AsBoolean", "link" : "scales\/utils\/AsBooleanTrait.html#AsBoolean[T]=T=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/AsBooleanTrait.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/AsBooleanTrait.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/AsBooleanTrait.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/AsBooleanTrait.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/AsBooleanTrait.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/AsBooleanTrait.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/AsBooleanTrait.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/AsBooleanTrait.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/AsBooleanTrait.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/AsBooleanTrait.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/AsBooleanTrait.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/AsBooleanTrait.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/AsBooleanTrait.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/AsBooleanTrait.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/AsBooleanTrait.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/AsBooleanTrait.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides the conversion type class AsBoolean, and simple matchers (extractor builders) touse them.", "trait" : "scales\/utils\/AsBooleanTrait.html", "kind" : "trait"}, {"name" : "scales.utils.AsBooleanTrait.BooleanAndTMatcher", "shortDescription" : "", "members_class" : [{"label" : "unapply", "tail" : "(x: X): Option[(T, X)]", "member" : "scales.utils.AsBooleanTrait.BooleanAndTMatcher.unapply", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#unapply(x:X):Option[(T,X)]", "kind" : "def"}, {"member" : "scales.utils.AsBooleanTrait.BooleanAndTMatcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/AsBooleanTrait$BooleanAndTMatcher.html", "kind" : "class"}, {"name" : "scales.utils.AsBooleanTrait.BooleanMatcher", "shortDescription" : "", "members_class" : [{"label" : "unapply", "tail" : "(x: X): Option[T]", "member" : "scales.utils.AsBooleanTrait.BooleanMatcher.unapply", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#unapply(x:X):Option[T]", "kind" : "def"}, {"member" : "scales.utils.AsBooleanTrait.BooleanMatcher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/AsBooleanTrait$BooleanMatcher.html", "kind" : "class"}, {"name" : "scales.utils.EitherLike", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/EitherLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/EitherLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/EitherLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/EitherLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/EitherLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/EitherLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/EitherLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/EitherLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/EitherLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/EitherLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/EitherLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/EitherLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/EitherLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/EitherLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/EitherLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/EitherLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/EitherLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/EitherLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/EitherLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): R", "member" : "scales.utils.EitherLike.getRight", "link" : "scales\/utils\/EitherLike.html#getRight:R", "kind" : "abstract def"}, {"label" : "right", "tail" : "(): RightLikeProjection[R]", "member" : "scales.utils.EitherLike.right", "link" : "scales\/utils\/EitherLike.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "abstract def"}, {"label" : "getLeft", "tail" : "(): L", "member" : "scales.utils.EitherLike.getLeft", "link" : "scales\/utils\/EitherLike.html#getLeft:L", "kind" : "abstract def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[L]", "member" : "scales.utils.EitherLike.left", "link" : "scales\/utils\/EitherLike.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "abstract def"}, {"label" : "fold", "tail" : "(fl: (L) ⇒ X, fr: (R) ⇒ X): X", "member" : "scales.utils.EitherLike.fold", "link" : "scales\/utils\/EitherLike.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "abstract def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.EitherLike.isRight", "link" : "scales\/utils\/EitherLike.html#isRight:Boolean", "kind" : "abstract def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.EitherLike.isLeft", "link" : "scales\/utils\/EitherLike.html#isLeft:Boolean", "kind" : "abstract def"}], "shortDescription" : "Either is great, perfect for what is needed, except for the indirection and the added memory and cpu costs thereof.", "trait" : "scales\/utils\/EitherLike.html", "kind" : "trait"}, {"name" : "scales.utils.Equiv", "shortDescription" : "Provides evidence that two instances of two disctinct types are equivalent after a conversion.", "members_class" : [{"label" : "apply", "tail" : "(b: B, c: C)(arg0: (B) ⇒ A, arg1: (C) ⇒ A): Boolean", "member" : "scales.utils.Equiv.apply", "link" : "scales\/utils\/Equiv.html#apply[B,C](b:B,c:C)(implicitevidence$2:B=>A,implicitevidence$3:C=>A):Boolean", "kind" : "def"}, {"member" : "scales.utils.Equiv#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/Equiv.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/Equiv.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/Equiv.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/Equiv.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/Equiv.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/Equiv.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/Equiv.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/Equiv.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/Equiv.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/Equiv.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/Equiv.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/Equiv.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/Equiv.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/Equiv.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/Equiv.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/Equiv.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/Equiv.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/Equiv.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/Equiv.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scales\/utils\/Equiv.html", "kind" : "class"}, {"name" : "scales.utils.EquivFunctions", "members_trait" : [{"label" : "equivalent", "tail" : "(a: A, b: B)(equiv: Equiv[C], viewA: (A) ⇒ C, viewB: (B) ⇒ C): Boolean", "member" : "scales.utils.EquivFunctions.equivalent", "link" : "scales\/utils\/EquivFunctions.html#equivalent[A,B,C](a:A,b:B)(implicitequiv:scales.utils.Equiv[C],implicitviewA:A=>C,implicitviewB:B=>C):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/EquivFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/EquivFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/EquivFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/EquivFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/EquivFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/EquivFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/EquivFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/EquivFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/EquivFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/EquivFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/EquivFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/EquivFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/EquivFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/EquivFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/EquivFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/EquivFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/EquivFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/EquivFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/EquivFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/EquivFunctions.html", "kind" : "trait"}, {"name" : "scales.utils.LeftLike", "members_trait" : [{"label" : "getRight", "tail" : "(): R", "member" : "scales.utils.LeftLike.getRight", "link" : "scales\/utils\/LeftLike.html#getRight:R", "kind" : "final def"}, {"label" : "getLeft", "tail" : "(): L", "member" : "scales.utils.LeftLike.getLeft", "link" : "scales\/utils\/LeftLike.html#getLeft:L", "kind" : "final def"}, {"label" : "get", "tail" : "(): L", "member" : "scales.utils.LeftLike.get", "link" : "scales\/utils\/LeftLike.html#get:L", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[R]", "member" : "scales.utils.LeftLike.right", "link" : "scales\/utils\/LeftLike.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[L]", "member" : "scales.utils.LeftLike.left", "link" : "scales\/utils\/LeftLike.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (L) ⇒ X, fr: (R) ⇒ X): X", "member" : "scales.utils.LeftLike.fold", "link" : "scales\/utils\/LeftLike.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isRight", "link" : "scales\/utils\/LeftLike.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.LeftLike.isLeft", "link" : "scales\/utils\/LeftLike.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/LeftLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/LeftLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/LeftLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/LeftLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/LeftLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/LeftLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/LeftLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/LeftLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/LeftLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/LeftLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/LeftLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/LeftLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/LeftLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/LeftLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/LeftLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/LeftLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/LeftLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/LeftLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/LeftLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/LeftLike.html", "kind" : "trait"}, {"name" : "scales.utils.RightLike", "members_trait" : [{"label" : "getLeft", "tail" : "(): L", "member" : "scales.utils.RightLike.getLeft", "link" : "scales\/utils\/RightLike.html#getLeft:L", "kind" : "final def"}, {"label" : "getRight", "tail" : "(): R", "member" : "scales.utils.RightLike.getRight", "link" : "scales\/utils\/RightLike.html#getRight:R", "kind" : "final def"}, {"label" : "get", "tail" : "(): R", "member" : "scales.utils.RightLike.get", "link" : "scales\/utils\/RightLike.html#get:R", "kind" : "final def"}, {"label" : "right", "tail" : "(): RightLikeProjection[R]", "member" : "scales.utils.RightLike.right", "link" : "scales\/utils\/RightLike.html#right:scales.utils.impl.RightLikeProjection[R]", "kind" : "final def"}, {"label" : "left", "tail" : "(): LeftLikeProjection[L]", "member" : "scales.utils.RightLike.left", "link" : "scales\/utils\/RightLike.html#left:scales.utils.impl.LeftLikeProjection[L]", "kind" : "final def"}, {"label" : "fold", "tail" : "(fl: (L) ⇒ X, fr: (R) ⇒ X): X", "member" : "scales.utils.RightLike.fold", "link" : "scales\/utils\/RightLike.html#fold[X](fl:L=>X,fr:R=>X):X", "kind" : "final def"}, {"label" : "isRight", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isRight", "link" : "scales\/utils\/RightLike.html#isRight:Boolean", "kind" : "final def"}, {"label" : "isLeft", "tail" : "(): Boolean", "member" : "scales.utils.RightLike.isLeft", "link" : "scales\/utils\/RightLike.html#isLeft:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/RightLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/RightLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/RightLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/RightLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/RightLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/RightLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/RightLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/RightLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/RightLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/RightLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/RightLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/RightLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/RightLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/RightLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/RightLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/RightLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/RightLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/RightLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/RightLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scales\/utils\/RightLike.html", "kind" : "trait"}, {"name" : "scales.utils.ScalesUtils", "shortDescription" : "Allows importing all scales.utils implicits directly", "object" : "scales\/utils\/ScalesUtils$.html", "members_object" : [{"label" : "ephemeralAppender", "tail" : "(e: EphemeralStream[A]): AnyRef { ... \/* 2 definitions in type refinement *\/ }", "member" : "scales.utils.collection.IterableUtilsImplicits.ephemeralAppender", "link" : "scales\/utils\/ScalesUtils$.html#ephemeralAppender[A](e:scalaz.EphemeralStream[A]):AnyRef{defappend[A,B>:A](a:scalaz.EphemeralStream[A],e:=>scalaz.EphemeralStream[B]):scalaz.EphemeralStream[B];def+:+[B>:A](e1:=>scalaz.EphemeralStream[B]):scalaz.EphemeralStream[B]}", "kind" : "implicit def"}, {"label" : "toEval", "tail" : "(i: ⇒ IterateeT[WHAT, F, RETURN]): Eval[WHAT, F, RETURN]", "member" : "scales.utils.iteratee.IterateeImplicits.toEval", "link" : "scales\/utils\/ScalesUtils$.html#toEval[WHAT,F[_],RETURN](i:=>scalaz.iteratee.IterateeT[WHAT,F,RETURN]):scales.utils.iteratee.Eval[WHAT,F,RETURN]", "kind" : "implicit def"}, {"label" : "fToFoldRToCombine", "tail" : "(f: utils.PathFoldR[Item, Section, CC]): PathFoldCombiner[Item, Section, CC]", "member" : "scales.utils.collection.path.PathImplicits.fToFoldRToCombine", "link" : "scales\/utils\/ScalesUtils$.html#fToFoldRToCombine[Item<:scales.utils.LeftLike[Item,scales.utils.collection.Tree[Item,Section,CC]],Section,CC[_]](f:scales.utils.PathFoldR[Item,Section,CC]):scales.utils.collection.path.PathFoldCombiner[Item,Section,CC]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scales\/utils\/ScalesUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scales\/utils\/ScalesUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scales\/utils\/ScalesUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scales\/utils\/ScalesUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scales\/utils\/ScalesUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scales\/utils\/ScalesUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scales\/utils\/ScalesUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/ScalesUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/ScalesUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scales\/utils\/ScalesUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scales\/utils\/ScalesUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scales\/utils\/ScalesUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scales\/utils\/ScalesUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scales\/utils\/ScalesUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scales\/utils\/ScalesUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scales\/utils\/ScalesUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scales\/utils\/ScalesUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scales\/utils\/ScalesUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scales\/utils\/ScalesUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};