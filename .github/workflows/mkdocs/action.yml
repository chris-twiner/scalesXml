name: Mkdocs
description: Combines mvn and spark
inputs:
  prepScript:
    required: false
    default: ""
    description: prepare the docs directory (e.g. include site) and version.txt / coverage.txt files
  copyFromScript:
    default: ""
    required: false
    description: allow docs only updates keeping previous files (e.g. include site) and version.txt / coverage.txt files
  copyToScript:
    default: ""
    required: false
    description: allow docs only updates to copy the copyFromScript files into docs for publishing

runs:
  using: "composite"
  steps:
    - uses: s-weigand/setup-conda@v1
      with:
        python-version: '3.10'
    - name: setup graphviz etc.
      run: |
        conda install libgomp=11.2.0 # force the right libs
        conda install graphviz=2.50.0 # conda is from fatty
      shell: bash
    - name: setup pips
      run: pip install -r requirements.txt
      shell: bash
    - name: setup plant
      run: |
        cp src/build/plantuml .
        chmod +x plantuml
      shell: bash
    - name: prep repo for mkdocs / mike
      run: | # borrowed from mhausenblas/mkdocs-deploy-gh-pages/
        export remote_repo="https://x-access-token:${GITHUB_TOKEN}@${GITHUB_DOMAIN:-"github.com"}/${GITHUB_REPOSITORY}.git"
        git config --global --add safe.directory "$GITHUB_WORKSPACE"

        if ! git config --get user.name; then
            git config --global user.name "${GITHUB_ACTOR}"
        fi

        if ! git config --get user.email; then
            git config --global user.email "${GITHUB_ACTOR}@users.noreply.${GITHUB_DOMAIN:-"github.com"}"
        fi

        git remote rm origin
        git remote add origin "${remote_repo}"
      shell: bash
    - name: prep data for mike # copy mvn site over and version/coverage to expected locations for macros
      run: ${{ inputs.prepScript }}
      shell: bash
    - name: run mike
      # needs the path setting here, it's not carried over from setup plant
      run: |
        export ENABLE_PDF_EXPORT=1
        export PATH=$GITHUB_WORKSPACE:$PATH:${pwd}

        echo Asking which plantuml with path $PATH
        which plantuml

        echo forcing a fetch and a pull
        git fetch --all
        git checkout gh-pages
        git pull

        echo running optional copyFromScript
        ${{ inputs.copyFromScript }}

        echo re-checking out the actual branch $GITHUB_REF_NAME
        git checkout $GITHUB_REF_NAME

        ${{ inputs.copyToScript }}

        echo Calling mike for build / deploy
        mike deploy --push --update-aliases $(cat version.txt) latest

        echo Calling mike for default redirect
        mike set-default --push latest
      shell: bash
